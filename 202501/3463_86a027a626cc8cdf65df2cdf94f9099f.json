[{"bookSourceGroup":"番茄小说","ruleExplore":{"author":"author","bookList":"$.data.data","lastChapter":"{{$.last_chapter_title}} • {{$.last_update_time}}","wordCount":"word_number","intro":"{{$.media}}小说 \n{{$.abstract}}","kind":"{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}","coverUrl":"thumb_url","bookUrl":"{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url,media] = result.split(\"|==|\");\n\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}\/multi_detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n<\/js>","name":"book_name"},"weight":63,"ruleContent":{"content":"content"},"loginUrl":"function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        }\n    } catch (error) {\n    }\n    ;\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        }} catch (error) {\n    }\n    ;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n\n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n\n    return '';\n}\n\n\/\/ 填写密钥\nfunction loginqt() {\n    let key = gets_key()\n    if (key && key != \"\") {\n        java.toast(\"您已填写秘钥:\" + key);\n        return false\n    }\n    java.startBrowserAwait(getArgument('server') + '\/check_key', '登录晴天小说书源');\n    key = gets_key()\n    if (key) {\n        java.longToast('登录成功，秘钥：' + key);\n        return true\n    } else {\n        java.toast('登录失败！！！！！');\n        return false\n    }\n}\n\n\/\/登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https:\/\/fanqienovel.com\/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n\/\/退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    \/\/cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n\/\/获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    return getArguments(open_argument, key);\n}\n\n\/\/设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\/\/首页\nfunction api() {\n    java.startBrowserAwait(getArgument('server') + '\/', \"接口文档\");\n}\n\n\/\/打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '\/coffee', \"喝咖啡\");\n}\n\n\/\/获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '\/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n\/\/获取搜索\nfunction get_search() {\n    var search = getArgument('search');\n    var datadist = {\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"0\": \"音频模式\",\n    };\n    var tishi = '\\n\\n当前搜索模式：' + datadist[search]\n    java.toast(tishi);\n    return search\n}\n\n\/\/设置搜索\nfunction set_search(mode, name) {\n    setArgument('search', mode);\n    setArgument('tone_id', mode);\n    java.toast('\\n\\n已切换至' + name);\n}\n\n\/\/获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n\/\/设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    ;\n    if (!zdyserver) {\n        const servers = String(source.bookSourceUrl).split('\\n').map(s => s.trim()).filter(s => s && !s.includes('提示'));\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n\n\/\/获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n\/\/设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\nfunction zr() {\n    let toast = '\\n\\n真人语音无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n    java.toast(toast);\n}\n\nfunction mh() {\n    let toast = '\\n\\n漫画无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n    java.toast(toast);\n}","searchUrl":"{{key}}\n@js:\nlet search_title = result;\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\n\nlet open_argument = source.getVariable();\n\t   \t\t\t   \t\n\t   \t\t\t   \t\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet media;\nif (ms == '0') {\n    media = `${base_url}\/searchAudio?title=`+search_title+'&media=喜马拉雅,番茄';\n} else if (ms == '-2') {\n    media = `${base_url}\/searchCaricature?title=`+search_title+'&media=番茄';\n} else {\n     media = `${base_url}\/searchNovel?title=`+search_title\n}\nkey = '&key=' + key;\n\/\/java.toast(media + key);\nmedia + key","ruleSearch":{"author":"author","bookList":"$..book_data[*]","lastChapter":"{{$.media}}-{{$..book_id}}\n<js>\n\nfunction lastChapterTitle(media,bookid) {\n   \n    let url;\n    let last;\n    if (media == \"番茄\") {\n    \t    last=fq_last(bookid);\n        return last\n    } else if (media == \"七猫\") {\n    \t   last=qm_last(bookid);\n        return last\n        \n    } else {\n    \treturn '无'\n    \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https:\/\/api5-normal-sinfonlineb.fqnovel.com\/reading\/bookapi\/multi-detail\/v\/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https:\/\/api-bc.wtzw.com\/api\/v4\/book\/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\nlet media = result.split(\"-\")[0];\nlet bookid = result.split(\"-\")[1].split(\"_\")[0];\nlet lasts = lastChapterTitle(media,bookid);\n\n`${media}: ${lasts}`\n<\/js>","coverUrl":"thumb_url","wordCount":"word_number","intro":"{{$.media}}小说 \n{{$.abstract}}","kind":"category&&status&&score&&last_chapter_update_time","checkKeyWord":"炙热沦陷","name":"book_name","bookUrl":"{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n<js>\nlet [book_id, raw_book_name, raw_author, raw_thumb_url,media] = result.split(\"|==|\");\n\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}\/multi_detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n<\/js>"},"enabledExplore":true,"ruleBookInfo":{"author":"author","tocUrl":"{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\njava.put(\"id\", book_id);\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}\/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n<\/js>","lastChapter":"last_chapter_title","wordCount":"word_number","intro":"$..book_id\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"默认发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\",\n  '999':'喜马拉雅听书'\n};\n\nlet ms;\nms = datadist[tone_id];\nif (!ms) {\n\t\tms = tone_id\n\t\t}\n\nvar tishi = '\\n\\n当前模式：'+ ms +'\\n\\n如切换,请切换请下拉刷新详情页\\n由于缓存原因，已听的需要切换到下一章再切回来\\n'\n\n\nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n    info = JSON.parse(java.ajax(`${base_url}\/tts_detail?&bookid=${bookid}`));\n    } catch (error) {\n        info = {'abstract': \"\"}\n        }\n} else {\n    info = {'abstract': \"\"}\n    }\n\n\nif (!key) {\n    jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    }\n    else if (!info.abstract) {\n    jj = \"\"\n    } else {\n    jj =tishi +  info.abstract\n    }\n\n<\/js>","kind":"category&&status&&score&&last_chapter_update_time","coverUrl":"thumb_url","name":"book_name","init":""},"ruleToc":{"chapterUrl":"{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\n\n\n\/\/ 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n\/\/ 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\n\nlet catalogue_url = `${base_url}\/reader?item_id=${itemId}&book_id=${book_id}&tone_id=${tone_id}&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url","chapterList":"data.chapterListWithVolume[*].*\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nlet genreValue = JSON.parse(java.ajax(book.bookUrl)).genre;\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"真人发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\"\n};\nvar ms = String(tone_id)\nif (genreValue === '0' && ms === '-1') {\n\tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n} else if (genreValue === '1') {\n\t  if (device === 'android') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n}else if (genreValue === '4') {\n\t   var ms = '0';\n\t   if (device === 'android') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n} else if (genreValue === '9999'){\n   \tvar ms = '-1';\n   \tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n\t }else if (genreValue!='0' && genreValue!='1' && genreValue!='4' && ms === '-1'){\n   \tvar ms = '-1';\n   \tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n\t } else {\n\t \tif (device === 'android') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n\t \t};\nresult","updateTime":"firstPassTime","chapterName":"title"},"loginUi":"\n[ {\n        \"name\":  \"☕请杯咖啡，解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },    {\n        \"name\":  \"更新书源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },\n\n    {\n        \"name\":  \"♥♥♥♥♥♥ 填写密钥 ♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },    {\n        \"name\":  \"服务器地址(可不填)\",\n        \"type\": \"text\"\n        },{\n        \"name\":  \"番茄登录\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },\n\n    {\n        \"name\":  \"退出登录\",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前模式\",\n        \"type\": \"button\",\n        \"action\": \"get_search()\"\n      },\n      {\n        \"name\":  \"当前音色\",\n        \"type\": \"button\",\n        \"action\": \"get_tone_id(tone_id)\"\n      },   {\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },\n      {\n        \"name\": \"🔎搜小说\",\n        \"type\": \"button\",\n        \"action\": \"set_search('-1','小说搜索')\"\n      },\n      {\n        \"name\": \"🔎搜音频\",\n        \"type\": \"button\",\n        \"action\": \"set_search('0','音频搜索')\"\n      },{\n        \"name\": \"🔎搜漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_search('-2','漫画搜索')\"\n      },\n      {\n        \"name\": \"阅读模式\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('-1','纯净阅读')\"\n      },\n    {\n        \"name\": \"多人发音\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('51','多人发音')\"\n      },\n      {\n        \"name\": \"甜美少女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('1','甜美少女')\"\n      },\n      {\n        \"name\": \"清亮青叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('2','清亮青叔')\"\n      },\n      {\n        \"name\": \"开朗青年\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('5','开朗青年')\"\n      },\n      {\n        \"name\": \"温柔淑女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('6','温柔淑女')\"\n      },\n      {\n        \"name\": \"成熟大叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('4','成熟大叔')\"\n      },\n      {\n        \"name\": \"大叔升级\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('74','大叔升级')\"\n      },\n      {\n        \"name\": \"优雅御姐\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('30','优雅御姐')\"\n      },\n      {\n        \"name\": \"其他音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      }\n    ]","jsLib":"function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"search\": \"-1\",\n            \"tone_id\": \"-1\",\n            \"server\": \"https:\/\/api.langge.tk\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n","bookSourceUrl":"https:\/\/api.langge.tk\nhttps:\/\/api.doubi.tk\nhttp:\/\/api.dahuilang.cf\n提示：点击登录切换服务器按钮可进行切换(当前书源为融合版)","lastUpdateTime":1736269054823,"customOrder":-7,"bookSourceType":0,"modificationDate":1737139157939.729,"enabled":true,"bookSourceName":"🍅大灰狼融合","variableComment":"","bookSourceComment":"20241104新增指定来源搜索\n20241124新增详情页音色提示\n20241126修复bug\n20241129更新秘钥填写方式\n20241217更新服务器切换功能\n20250104新增服务器\n20250105登录新增手动填写服务器、音色","cloudRecordID":"7993394A-3FA8-433B-A265-C35DDAC62B85","respondTime":1017,"exploreUrl":"<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))))) {\n    function groupQuery() {\n        const url = base_url + \"\/group_name?cookie={{get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"\/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    \/\/ 用户信息\n    const userUrl = base_url + '\/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n\/\/ 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": base_url + \"\/bookshelf?page={{page}}&cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"大灰狼阅读记录\",\n        \"url\": base_url + \"\/bookshelf?page={{page}}&key=\" + key,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }\n];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '\/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'\/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'\/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'\/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '\/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'\/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '\/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '\/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'\/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}\/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n<\/js>","enabledCookieJar":true,"bookUrlPattern":""},{"bookSourceGroup":"番茄小说","ruleExplore":{"author":"author","bookList":"$.data.data","lastChapter":"{{$.last_chapter_title}} • {{$.last_update_time}}","wordCount":"word_number","intro":"abstract","kind":"{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}","coverUrl":"thumb_url","bookUrl":"{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}\/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n<\/js>","name":"book_name"},"weight":63,"ruleContent":{"content":"content"},"loginUrl":"function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        }\n    } catch (error) {\n    }\n    }\n\n\nlet server = getArgument('server');\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n\n    return ''; \n}\n\n\/\/ 填写密钥\nfunction loginqt(){\n    let key = gets_key()\n    if (key && key != \"\") {\n            java.toast(\"您已填写秘钥:\"+key);\n            return false\n        }\n    java.startBrowserAwait(getArgument('server')+'\/check_key','登录大灰狼小说书源');\n    key = gets_key()\n    if (key){\n        java.longToast('登录成功，秘钥：'+key);\n        return true\n        } else {\n            java.toast('登录失败！！！！！');\n            return false\n            }\n}\n\n\/\/登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https:\/\/fanqienovel.com\/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {}\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n\/\/退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n \/\/cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n\/\/获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    return open_argument[key];\n}\n\n\/\/设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\t\t\nfunction api() { \tjava.startBrowserAwait(getArgument('server')+'\/','首页');\n    }\nfunction hqmy() { \tjava.startBrowserAwait(getArgument('server')+'\/key','密钥');\n    }\nfunction vip() { \tjava.startBrowserAwait(getArgument('server')+'\/coffee',\"喝咖啡\");\n    }\nfunction clear() { \tjava.startBrowserAwait(getArgument('server')+'\/clear',\"清空设备\");\n    }\n\n\nfunction set(media) {\n\t  setArgument('media',media);\n\t  java.toast(\"\\n\\n已切换至：\"+media+'\\n请重新搜索书籍！');\n}\n\n\nfunction getmedia() {\n\t   \tlet media = getArgument('media');\n\t   \tif(media == '') {\n\t   \t\tmedia = '全部来源都搜索';\n\t   \t\t}\n\t\t\t  java.toast(\"\\n\\n当前搜索范围是：\"+media);\n\t\t\t  \n}\n\n\/\/获取服务器\nfunction get_server() {\n\t  var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：'+ server\n    java.toast(tishi);\n    return server\n}\n\n\n\/\/设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    ;\n    if (!zdyserver) {\n        const servers = String(source.bookSourceUrl).split('\\n').map(s => s.trim()).filter(s => s && !s.includes('提示'));\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}","searchUrl":"{{key}}\n@js:\nlet search_title = result;\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\nbase_url+'\/searchNovel?title='+result+'&media='+media","ruleSearch":{"author":"author","bookList":"$..book_data[*]","lastChapter":"{{$.media}}-{{$..book_id}}\n<js>\nfunction lastChapterTitle(media,bookid) {\n   \n    let url;\n    let last;\n    if (media == \"番茄\") {\n    \t    last=fq_last(bookid);\n        return last\n    } else if (media == \"七猫\") {\n    \t   last=qm_last(bookid);\n        return last\n        \n    } else {\n    \treturn ''\n    \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https:\/\/api5-normal-sinfonlineb.fqnovel.com\/reading\/bookapi\/multi-detail\/v\/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https:\/\/api-bc.wtzw.com\/api\/v4\/book\/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\nlet media = result.split(\"-\")[0];\nlet bookid = result.split(\"-\")[1].split(\"_\")[0];\nlet lasts = lastChapterTitle(media,bookid);\n`${media}: ${lasts}`\n<\/js>","coverUrl":"thumb_url","wordCount":"word_number","intro":"{{$.media}}小说 \n{{$.abstract}}","kind":"category&&status&&score&&last_chapter_update_time","checkKeyWord":"我的","name":"book_name","bookUrl":"{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}\/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n<\/js>"},"enabledExplore":true,"ruleBookInfo":{"tocUrl":"bookUrl","author":"","kind":"","name":"","intro":"&nbsp;&nbsp;\n{{$.tishi}}\n{{$.info}}","init":"$..book_id\n<js>\nlet res = result[0];\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet sjy = '';\nlet info;\nlet bookUrl = '';\nlet lx = '';\nlet zxtime = '';\nlet zxzj = '';\nlet sy = '';\nlet jj = '';\ntry {\n\t       function setArgument(key, value) {\n        let open_argument = source.getVariable();\n        open_argument = getArguments(open_argument, '');\n        open_argument[key] = value;\n        open_argument = JSON.stringify(open_argument);\n        source.setVariable(open_argument);\n        return open_argument;\n    }\n\n    function gets_key() {\n        var servers = String(source.bookSourceUrl);\n        const serverList = servers.split('\\n');\n\n        for (let server of serverList) {\n            let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n            if (keys) {\n                let keyParts = keys.split('secretKey=');\n                if (keyParts.length > 1) {\n                    keys = keyParts[keyParts.length - 1];\n                    setArgument('key', keys);\n                    return keys;\n                }\n            }\n        }\n        return '';\n    }\n\n    let open_argument = source.getVariable();\n    let base_url = getArguments(open_argument, 'server');\n    let ms = getArguments(open_argument, 'media');\n    let key = getArguments(open_argument, 'key');\n    if (!key) {\n        key = gets_key();\n    }\n\n    var tishi = '&nbsp;&nbsp;当前搜索模式：' + ms + '\\n\\n如需切换,请点击登陆进行切换\\n切换之后需要重新搜索！\\n\\n\\u200b'\n    if (media == 'fanqie' || media == 'juxiaoshuo') {\n        try {\n            info = JSON.parse(java.ajax(`${base_url}\/novel_detail?&bookid=${bookid}`));\n          try {\n                let shuyuan = info.shuyuan;\n                if (shuyuan) {\n                    let n = 0;\n                    let v = String(book.getVariable(\"custom\"));\n                    let x = v.match(\/^\\d+$\/) ? v : n;\n                    x = parseInt(x) < shuyuan.length ? x : n;\n                    bookUrl = shuyuan[x];\n                    bookUrl = `${base_url}\/detail?bookId=${bookUrl}_juxiaoshuo`;\n                    sjy = `🎯当前书源【${x}】：${shuyuan[x]}`;\n                    sy = info.sy;\n                    lx= info.lx;\n                    zxtime= info.zxtime;\n                    zxzj= info.zxzj;\n                    jj = info.abstract;\n                    jj = `${lx}\n${zxzj}\n${zxtime}\n\\u200b\n${jj}\n\\u200b\n${sjy}\n${sy}`\ninfo = {'abstract': jj}\n                }\n            } catch (error) {\n                info = {'abstract': \"\"}\n            }\n        } catch (error) {\n            info = {'abstract': \"\"}\n        }\n    } else {\n        info = {'abstract': \"\"}\n    }\n\n    if (!key) {\n        jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    } else if (!info.abstract) {\n        jj = \"\"\n    } else {\n        jj = info.abstract\n    }\nif (!jj){tishi=''}\n    let data = {\n    \t   tishi:tishi,\n        info: jj,\n        bookUrl: bookUrl\n    };\n    JSON.stringify(data);\n} catch (error) {\n    JSON.stringify({info: '', bookUrl: ''});\n}\n<\/js>"},"ruleToc":{"chapterUrl":"{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\n\/\/ 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n\/\/ 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\nif(!key) {\n    java.longToast('\\n\\n请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页');\n}\n\nlet catalogue_url = `${base_url}\/reader?item_id=${itemId}&book_id=${book_id}&tone_id=-1&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url","chapterList":"$..chapterListWithVolume[*].*","updateTime":"firstPassTime","chapterName":"title"},"loginUi":"[\n      {\n        \"name\":  \"  请杯咖啡，破解限制  \",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"设备管理\",\n        \"type\": \"button\",\n        \"action\": \"clear()\"\n      },{\n        \"name\":  \"服务器地址(可不填)\",\n        \"type\": \"text\"\n        },{\n        \"name\":  \"更新源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"♥♥♥♥♥♥填写密钥♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"番茄登录(同步书架)\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \" 退出番茄登录 \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\":  \"当前来源\",\n        \"type\": \"button\",\n        \"action\": \"getmedia()\"\n      },{\n        \"name\":  \"搜索全部\",\n        \"type\": \"button\",\n        \"action\": \"set('搜索全部')\"\n      },{\n        \"name\":  \"搜索番茄\",\n        \"type\": \"button\",\n        \"action\": \"set('番茄')\"\n      },{\n        \"name\":  \"搜索七猫\",\n        \"type\": \"button\",\n        \"action\": \"set('七猫')\"\n      },{\n        \"name\":  \"搜索起点\",\n        \"type\": \"button\",\n        \"action\": \"set('起点')\"\n      },{\n        \"name\":  \"搜索得间\",\n        \"type\": \"button\",\n        \"action\": \"set('得间')\"\n      },{\n        \"name\":  \"搜索QQ\",\n        \"type\": \"button\",\n        \"action\": \"set('QQ')\"\n      },{\n        \"name\":  \"搜索熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set('熊猫')\"\n      },{\n        \"name\":  \"搜索轻小说\",\n        \"type\": \"button\",\n        \"action\": \"set('哔哩')\"\n      },{\n        \"name\":  \"搜索聚合\",\n        \"type\": \"button\",\n        \"action\": \"set('聚合')\"\n      }    ]","jsLib":"function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"media\": \"全部\",\n            \"server\": \"https:\/\/api.langge.tk\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n","bookSourceUrl":"https:\/\/api.langge.tk\nhttps:\/\/api.doubi.tk\nhttp:\/\/api.dahuilang.cf\n提示：点击登录切换服务器按钮可进行切换(当前书源为纯小说阅读)","lastUpdateTime":1736269047175,"customOrder":-5,"bookSourceType":0,"modificationDate":1737139142893.9529,"enabled":true,"bookSourceName":"🍅大灰狼小说","variableComment":"","bookSourceComment":"支持番茄小说，QQ免费小说，熊猫小说，得间小说，七猫小说，起点69小说\n\n更新说明：\n登录页新增手动切换书籍来源选项按钮\n20241126修复bug\n20241129更新秘钥填写方式\n20241217更新服务器切换功能\n20250104新增服务器\n20250105登录新增手动填写服务器","cloudRecordID":"3BD8E45E-B13B-48B3-A137-CA65C7667EBE","respondTime":201,"exploreUrl":"<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet keys = getArguments(open_argument,'key');\nif (!keys) {\n\tkeys = gets_key();\n\t}\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))))) {\n    function groupQuery() {\n        const url = base_url + \"\/group_name?cookie={{get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"\/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    \/\/ 用户信息\n    const userUrl = base_url + '\/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n\/\/ 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": base_url + \"\/bookshelf?page={{page}}&cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"大灰狼阅读记录\",\n        \"url\": base_url + \"\/bookshelf?page={{page}}&key=\" + keys,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }\n];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '\/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'\/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'\/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'\/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '\/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'\/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '\/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '\/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'\/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}\/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n<\/js>","enabledCookieJar":true,"bookUrlPattern":""},{"bookSourceGroup":"番茄喜马拉雅听书","ruleExplore":{"author":"author","bookList":"$.data.data","lastChapter":"{{$.last_chapter_title}} • {{$.last_update_time}}","wordCount":"word_number","intro":"abstract","kind":"{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}","coverUrl":"thumb_url","bookUrl":"{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}\/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n<\/js>","name":"book_name"},"weight":61,"ruleContent":{"content":"content"},"loginUrl":"function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        }\n    } catch (error) {\n    }\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        } else {\n            setArgument('tone_id', '0');\n        }\n    } catch (error) {\n    }\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n\n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n\n    return '';\n}\n\n\/\/ 填写密钥\nfunction loginqt() {\n    let key = gets_key()\n    if (key && key != \"\") {\n        java.toast(\"您已填写秘钥:\" + key);\n        return false\n    }\n    java.startBrowserAwait(getArgument('server') + '\/check_key', '登录大灰狼小说书源');\n    key = gets_key()\n    if (key) {\n        java.longToast('登录成功，秘钥：' + key);\n        return true\n    } else {\n        java.toast('登录失败！！！！！');\n        return false\n    }\n}\n\n\/\/登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https:\/\/fanqienovel.com\/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n\/\/退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    \/\/cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n\/\/获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '');\n    return open_argument[key];\n}\n\n\/\/设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\/\/首页\nfunction api() {\n    java.startBrowserAwait(getArgument('server') + '\/', \"接口文档\");\n}\n\n\/\/打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '\/coffee', \"喝咖啡\");\n}\n\n\/\/获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '\/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n\/\/设置搜索媒体\nfunction set_media(media) {\n    setArgument('media', media);\n    java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n}\n\n\/\/获取搜索媒体\nfunction get_media() {\n    let media = getArgument('media');\n    if (media == '') {\n        media = '全部来源都搜索';\n    }\n    java.toast(\"\\n\\n当前搜索范围是：\" + media);\n\n}\n\n\/\/获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n\/\/设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    if (!zdyserver) {\n        const servers = String(source.bookSourceUrl).split('\\n').map(s => s.trim()).filter(s => s && !s.includes('提示'));\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n\/\/获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n\/\/设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\nfunction zr() {\n    let toast = '\\n\\n真人语音无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n    java.toast(toast);\n}\n\nfunction mh() {\n    let toast = '\\n\\n漫画无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n    java.toast(toast);\n}","searchUrl":"{{key}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nbase_url+'\/searchAudio?title='+result+'&media='+media +\"&key=\" + key","ruleSearch":{"author":"author","bookList":"$..book_data[*]","lastChapter":"{{$.media}}-{{$..book_id}}\n<js>\n\nfunction lastChapterTitle(media,bookid) {\n   \n    let url;\n    let last;\n    if (media == \"番茄\") {\n    \t    last=fq_last(bookid);\n        return last\n    } else if (media == \"七猫\") {\n    \t   last=qm_last(bookid);\n        return last\n        \n    } else {\n    \treturn null\n    \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https:\/\/api5-normal-sinfonlineb.fqnovel.com\/reading\/bookapi\/multi-detail\/v\/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https:\/\/api-bc.wtzw.com\/api\/v4\/book\/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\nlet media = result.split(\"-\")[0];\nlet bookid = result.split(\"-\")[1].split(\"_\")[0];\nlet lasts = lastChapterTitle(media,bookid);\n\n`${media}: ${lasts}`\n<\/js>","coverUrl":"thumb_url","wordCount":"word_number","intro":"{{$.media}} 听书\n{{$.abstract}}","kind":"tags","checkKeyWord":"我的","name":"book_name","bookUrl":"{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\t\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}\/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n<\/js>"},"enabledExplore":true,"ruleBookInfo":{"author":"","kind":"","name":"","intro":"$..book_id\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"默认发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\",\n  '999':'喜马拉雅听书'\n};\n\nlet ms;\nms = datadist[tone_id];\nif (!ms) {\n\t\tms = tone_id\n\t\t}\n\nvar tishi = '\\n\\n当前模式：'+ ms +'\\n\\n如切换,请切换请下拉刷新详情页\\n由于缓存原因，已听的需要切换到下一章再切回来\\n'\n\n\nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n    info = JSON.parse(java.ajax(`${base_url}\/tts_detail?&bookid=${bookid}`));\n    } catch (error) {\n        info = {'abstract': \"\"}\n        }\n} else {\n    info = {'abstract': \"\"}\n    }\n\n\nif (!key) {\n    jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    }\n    else if (!info.abstract) {\n    jj = \"\"\n    } else {\n    jj =tishi +  info.abstract\n    }\n\n<\/js>","tocUrl":""},"ruleToc":{"chapterUrl":"{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\/\/ 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n\/\/ 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\nif(!key) {\n    java.longToast('\\n\\n请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页');\n}\n\nlet catalogue_url = `${base_url}\/reader?item_id=${itemId}&book_id=${book_id}&tone_id=${tone_id}&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url","chapterList":"$..chapterListWithVolume[*].*","updateTime":"firstPassTime","chapterName":"title"},"loginUi":"\n[ {\n        \"name\":  \"☕请杯咖啡，解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },    {\n        \"name\":  \"更新书源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"♥♥♥♥♥♥ 填写密钥 ♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"服务器地址(可不填)\",\n        \"type\": \"text\"\n        },{\n        \"name\":  \"番茄登录\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \"退出登录\",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前搜索\",\n        \"type\": \"button\",\n        \"action\": \"get_media()\"\n      },\n      {\n        \"name\":  \"当前音色\",\n        \"type\": \"button\",\n        \"action\": \"get_tone_id(tone_id)\"\n      },   {\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },\n      {\n        \"name\": \"🔎全部 \",\n        \"type\": \"button\",\n        \"action\": \"set_media('全部')\"\n      },\n      {\n        \"name\": \"🔎番茄 \",\n        \"type\": \"button\",\n        \"action\": \"set_media('番茄畅听')\"\n      },{\n        \"name\": \"🔎喜马拉雅\",\n        \"type\": \"button\",\n        \"action\": \"set_media('喜马拉雅')\"\n      }, {\n        \"name\": \"默认发音\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('0','默认发音')\"\n      },\n    {\n        \"name\": \"多人发音\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('51','多人发音')\"\n      },\n      {\n        \"name\": \"甜美少女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('1','甜美少女')\"\n      },\n      {\n        \"name\": \"清亮青叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('2','清亮青叔')\"\n      },\n      {\n        \"name\": \"开朗青年\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('5','开朗青年')\"\n      },\n      {\n        \"name\": \"温柔淑女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('6','温柔淑女')\"\n      },\n      {\n        \"name\": \"成熟大叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('4','成熟大叔')\"\n      },\n      {\n        \"name\": \"大叔升级\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('74','大叔升级')\"\n      },\n      {\n        \"name\": \"优雅御姐\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('30','优雅御姐')\"\n      },\n\n      {\n        \"name\": \"其他音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      }\n      ]","jsLib":"function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key;\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"media\": \"全部\",\n            \"tone_id\": \"0\",\n            \"server\": \"https:\/\/api.langge.tk\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}","bookSourceUrl":"https:\/\/api.langge.tk\nhttps:\/\/api.doubi.tk\nhttp:\/\/api.dahuilang.cf\n提示：点击登录切换服务器按钮可进行切换(当前书源为纯听书)","lastUpdateTime":1736755959672,"customOrder":2,"bookSourceType":1,"modificationDate":1737139118206.3879,"enabled":true,"bookSourceName":"🍅大灰狼听书","variableComment":"","bookSourceComment":"支持番茄真人听书和Ai朗读，搜索时尽量输入书籍全名\n\n新增喜马拉雅听书功能(打赏用户专享)\n\n新增指定来源搜索\n20241124更新可用音色提示\n20241126修复bug\n20241129更新秘钥填写方式\n20241217更新服务器切换功能\n20250104新增服务器\n20250105登录新增手动填写服务器、音色","cloudRecordID":"C0F217C4-1952-4CD4-B5B6-78CE39622A08","respondTime":850,"exploreUrl":"<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet fxxmly = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": base_url+\"\/bookshelf?cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"大灰狼阅读记录\",\n        \"url\": base_url + \"\/bookshelf?key=\"+key+\"&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"番茄书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜\",\n        \"url\": base_url + \"\/discover?side_type=10&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"完结榜\",\n        \"url\": base_url + \"\/discover?side_type=11&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"热搜榜\",\n        \"url\": base_url + \"\/discover?side_type=12&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"黑马榜\",\n        \"url\": base_url + \"\/discover?side_type=13&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"爆更榜\",\n        \"url\": base_url + \"\/discover?side_type=15&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"巅峰榜\",\n        \"url\": base_url + \"\/discover?type=0&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + \"\/discover?type=2&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\": base_url + \"\/discover?type=3&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url + \"\/discover?type=1&page={{page}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    }]\n\n\nlet data = {\"男\": [\r\n    {\r\n        \"value\": \"\",\r\n        \"name\": \"全部\"\r\n    },\r\n    {\r\n        \"name\": \"穿越\",\r\n        \"value\": \"穿越\"\r\n    },\r\n    {\r\n        \"name\": \"重生\",\r\n        \"value\": \"重生\"\r\n    },\r\n    {\r\n        \"name\": \"系统流\",\r\n        \"value\": \"系统流\"\r\n    },\r\n    {\r\n        \"name\": \"脑洞\",\r\n        \"value\": \"脑洞\"\r\n    },\r\n    {\r\n        \"name\": \"穿书\",\r\n        \"value\": \"穿书\"\r\n    },\r\n    {\r\n        \"value\": \"空间\",\r\n        \"name\": \"空间\"\r\n    },\r\n    {\r\n        \"value\": \"开局\",\r\n        \"name\": \"开局\"\r\n    },\r\n    {\r\n        \"value\": \"虐渣\",\r\n        \"name\": \"虐渣\"\r\n    },\r\n    {\r\n        \"value\": \"打脸\",\r\n        \"name\": \"打脸\"\r\n    },\r\n    {\r\n        \"value\": \"无限流\",\r\n        \"name\": \"无限流\"\r\n    },\r\n    {\r\n        \"value\": \"种田文\",\r\n        \"name\": \"种田文\"\r\n    },\r\n    {\r\n        \"value\": \"复仇\",\r\n        \"name\": \"复仇\"\r\n    },\r\n    {\r\n        \"value\": \"异能\",\r\n        \"name\": \"异能\"\r\n    },\r\n    {\r\n        \"value\": \"直播\",\r\n        \"name\": \"直播\"\r\n    },\r\n    {\r\n        \"value\": \"网游\",\r\n        \"name\": \"网游\"\r\n    },\r\n    {\r\n        \"value\": \"下山\",\r\n        \"name\": \"下山\"\r\n    },\r\n    {\r\n        \"value\": \"签到\",\r\n        \"name\": \"签到\"\r\n    },\r\n    {\r\n        \"value\": \"强者回归\",\r\n        \"name\": \"强者回归\"\r\n    },\r\n    {\r\n        \"value\": \"灵气复苏\",\r\n        \"name\": \"灵气复苏\"\r\n    },\r\n    {\r\n        \"name\": \"诸天万界\",\r\n        \"value\": \"诸天万界\"\r\n    },\r\n    {\r\n        \"name\": \"剑道\",\r\n        \"value\": \"剑道\"\r\n    },\r\n    {\r\n        \"name\": \"修仙\",\r\n        \"value\": \"修仙\"\r\n    },\r\n    {\r\n        \"value\": \"玄学\",\r\n        \"name\": \"玄学\"\r\n    },\r\n    {\r\n        \"value\": \"探险\",\r\n        \"name\": \"探险\"\r\n    },\r\n    {\r\n        \"value\": \"盗墓\",\r\n        \"name\": \"盗墓\"\r\n    },\r\n    {\r\n        \"value\": \"烧脑\",\r\n        \"name\": \"烧脑\"\r\n    },\r\n    {\r\n        \"value\": \"怪谈\",\r\n        \"name\": \"怪谈\"\r\n    },\r\n    {\r\n        \"value\": \"风水\",\r\n        \"name\": \"风水\"\r\n    },\r\n    {\r\n        \"value\": \"推理\",\r\n        \"name\": \"推理\"\r\n    },\r\n    {\r\n        \"value\": \"破案\",\r\n        \"name\": \"破案\"\r\n    },\r\n    {\r\n        \"value\": \"灵异\",\r\n        \"name\": \"灵异\"\r\n    },\r\n    {\r\n        \"name\": \"鬼故事\",\r\n        \"value\": \"鬼故事\"\r\n    },\r\n    {\r\n        \"name\": \"刑侦\",\r\n        \"value\": \"刑侦\"\r\n    },\r\n    {\r\n        \"name\": \"求生\",\r\n        \"value\": \"求生\"\r\n    },\r\n    {\r\n        \"name\": \"黑科技\",\r\n        \"value\": \"黑科技\"\r\n    },\r\n    {\r\n        \"name\": \"囤物资\",\r\n        \"value\": \"囤物资\"\r\n    },\r\n    {\r\n        \"name\": \"丧尸\",\r\n        \"value\": \"丧尸\"\r\n    },\r\n    {\r\n        \"name\": \"机甲\",\r\n        \"value\": \"机甲\"\r\n    },\r\n    {\r\n        \"name\": \"美食\",\r\n        \"value\": \"美食\"\r\n    },\r\n    {\r\n        \"name\": \"基建\",\r\n        \"value\": \"基建\"\r\n    },\r\n    {\r\n        \"name\": \"权谋\",\r\n        \"value\": \"权谋\"\r\n    },\r\n    {\r\n        \"name\": \"群穿\",\r\n        \"value\": \"群穿\"\r\n    },\r\n    {\r\n        \"value\": \"金手指\",\r\n        \"name\": \"金手指\"\r\n    },\r\n    {\r\n        \"value\": \"读心术\",\r\n        \"name\": \"读心术\"\r\n    },\r\n    {\r\n        \"value\": \"逃荒\",\r\n        \"name\": \"逃荒\"\r\n    },\r\n    {\r\n        \"value\": \"翻车\",\r\n        \"name\": \"翻车\"\r\n    },\r\n    {\r\n        \"value\": \"变身\",\r\n        \"name\": \"变身\"\r\n    },\r\n    {\r\n        \"value\": \"鉴宝\",\r\n        \"name\": \"鉴宝\"\r\n    },\r\n    {\r\n        \"value\": \"聊天群\",\r\n        \"name\": \"聊天群\"\r\n    },\r\n    {\r\n        \"value\": \"发家致富\",\r\n        \"name\": \"发家致富\"\r\n    },\r\n    {\r\n        \"value\": \"商战\",\r\n        \"name\": \"商战\"\r\n    },\r\n    {\r\n        \"value\": \"综艺\",\r\n        \"name\": \"综艺\"\r\n    },\r\n    {\r\n        \"value\": \"红包\",\r\n        \"name\": \"红包\"\r\n    },\r\n    {\r\n        \"value\": \"外卖\",\r\n        \"name\": \"外卖\"\r\n    },\r\n    {\r\n        \"value\": \"捡漏\",\r\n        \"name\": \"捡漏\"\r\n    },\r\n    {\r\n        \"value\": \"赌石\",\r\n        \"name\": \"赌石\"\r\n    },\r\n    {\r\n        \"value\": \"钓鱼\",\r\n        \"name\": \"钓鱼\"\r\n    },\r\n    {\r\n        \"value\": \"逆袭\",\r\n        \"name\": \"逆袭\"\r\n    },\r\n    {\r\n        \"value\": \"神话\",\r\n        \"name\": \"神话\"\r\n    },\r\n    {\r\n        \"value\": \"高武\",\r\n        \"name\": \"高武\"\r\n    },\r\n    {\r\n        \"value\": \"养成\",\r\n        \"name\": \"养成\"\r\n    },\r\n    {\r\n        \"value\": \"魔法\",\r\n        \"name\": \"魔法\"\r\n    },\r\n    {\r\n        \"value\": \"卡牌\",\r\n        \"name\": \"卡牌\"\r\n    },\r\n    {\r\n        \"value\": \"吞噬\",\r\n        \"name\": \"吞噬\"\r\n    },\r\n    {\r\n        \"value\": \"古武\",\r\n        \"name\": \"古武\"\r\n    },\r\n    {\r\n        \"value\": \"宠物\",\r\n        \"name\": \"宠物\"\r\n    },\r\n    {\r\n        \"value\": \"御兽\",\r\n        \"name\": \"御兽\"\r\n    },\r\n    {\r\n        \"value\": \"丹药\",\r\n        \"name\": \"丹药\"\r\n    },\r\n    {\r\n        \"value\": \"卡片\",\r\n        \"name\": \"卡片\"\r\n    },\r\n    {\r\n        \"value\": \"职业文\",\r\n        \"name\": \"职业文\"\r\n    },\r\n    {\r\n        \"value\": \"克苏鲁\",\r\n        \"name\": \"克苏鲁\"\r\n    },\r\n    {\r\n        \"value\": \"无敌流\",\r\n        \"name\": \"无敌流\"\r\n    },\r\n    {\r\n        \"value\": \"争霸流\",\r\n        \"name\": \"争霸流\"\r\n    },\r\n    {\r\n        \"value\": \"技术流\",\r\n        \"name\": \"技术流\"\r\n    },\r\n    {\r\n        \"value\": \"洪荒流\",\r\n        \"name\": \"洪荒流\"\r\n    },\r\n    {\r\n        \"value\": \"凡人流\",\r\n        \"name\": \"凡人流\"\r\n    },\r\n    {\r\n        \"value\": \"随身流\",\r\n        \"name\": \"随身流\"\r\n    },\r\n    {\r\n        \"value\": \"召唤流\",\r\n        \"name\": \"召唤流\"\r\n    },\r\n    {\r\n        \"value\": \"升级流\",\r\n        \"name\": \"升级流\"\r\n    },\r\n    {\r\n        \"value\": \"进化流\",\r\n        \"name\": \"进化流\"\r\n    },\r\n    {\r\n        \"value\": \"废材流\",\r\n        \"name\": \"废材流\"\r\n    },\r\n    {\r\n        \"value\": \"开挂流\",\r\n        \"name\": \"开挂流\"\r\n    },\r\n    {\r\n        \"value\": \"经营流\",\r\n        \"name\": \"经营流\"\r\n    },\r\n    {\r\n        \"value\": \"儒道流\",\r\n        \"name\": \"儒道流\"\r\n    },\r\n    {\r\n        \"value\": \"诡异流\",\r\n        \"name\": \"诡异流\"\r\n    },\r\n    {\r\n        \"value\": \"爱国流\",\r\n        \"name\": \"爱国流\"\r\n    },\r\n    {\r\n        \"value\": \"练功流\",\r\n        \"name\": \"练功流\"\r\n    },\r\n    {\r\n        \"value\": \"二次元\",\r\n        \"name\": \"二次元\"\r\n    },\r\n    {\r\n        \"value\": \"乡村爱情\",\r\n        \"name\": \"乡村爱情\"\r\n    },\r\n    {\r\n        \"value\": \"江湖恩怨\",\r\n        \"name\": \"江湖恩怨\"\r\n    },\r\n    {\r\n        \"value\": \"日常生活\",\r\n        \"name\": \"日常生活\"\r\n    },\r\n    {\r\n        \"value\": \"影视原著\",\r\n        \"name\": \"影视原著\"\r\n    },\r\n    {\r\n        \"value\": \"动漫原著\",\r\n        \"name\": \"动漫原著\"\r\n    },\r\n    {\r\n        \"value\": \"经典衍生\",\r\n        \"name\": \"经典衍生\"\r\n    },\r\n    {\r\n        \"value\": \"动漫衍生\",\r\n        \"name\": \"动漫衍生\"\r\n    },\r\n    {\r\n        \"value\": \"游戏衍生\",\r\n        \"name\": \"游戏衍生\"\r\n    },\r\n    {\r\n        \"value\": \"武侠衍生\",\r\n        \"name\": \"武侠衍生\"\r\n    },\r\n    {\r\n        \"value\": \"同人衍生\",\r\n        \"name\": \"同人衍生\"\r\n    },\r\n    {\r\n        \"value\": \"无女主\",\r\n        \"name\": \"无女主\"\r\n    },\r\n    {\r\n        \"value\": \"多女主\",\r\n        \"name\": \"多女主\"\r\n    },\r\n    {\r\n        \"value\": \"单女主\",\r\n        \"name\": \"单女主\"\r\n    },\r\n    {\r\n        \"value\": \"婚恋\",\r\n        \"name\": \"婚恋\"\r\n    },\r\n    {\r\n        \"value\": \"护花高手\",\r\n        \"name\": \"护花高手\"\r\n    },\r\n    {\r\n        \"value\": \"特种兵\",\r\n        \"name\": \"特种兵\"\r\n    },\r\n    {\r\n        \"value\": \"兵王\",\r\n        \"name\": \"兵王\"\r\n    },\r\n    {\r\n        \"value\": \"特工\",\r\n        \"name\": \"特工\"\r\n    },\r\n    {\r\n        \"name\": \"战神\",\r\n        \"value\": \"战神\"\r\n    },\r\n    {\r\n        \"name\": \"保镖\",\r\n        \"value\": \"保镖\"\r\n    },\r\n    {\r\n        \"name\": \"佣兵\",\r\n        \"value\": \"佣兵\"\r\n    },\r\n    {\r\n        \"name\": \"杀手\",\r\n        \"value\": \"杀手\"\r\n    },\r\n    {\r\n        \"name\": \"奶爸\",\r\n        \"value\": \"奶爸\"\r\n    },\r\n    {\r\n        \"name\": \"弃少\",\r\n        \"value\": \"弃少\"\r\n    },\r\n    {\r\n        \"name\": \"赘婿\",\r\n        \"value\": \"赘婿\"\r\n    },\r\n    {\r\n        \"name\": \"大佬\",\r\n        \"value\": \"大佬\"\r\n    },\r\n    {\r\n        \"name\": \"神豪\",\r\n        \"value\": \"神豪\"\r\n    },\r\n    {\r\n        \"name\": \"反派\",\r\n        \"value\": \"反派\"\r\n    },\r\n    {\r\n        \"name\": \"医生\",\r\n        \"value\": \"医生\"\r\n    },\r\n    {\r\n        \"name\": \"法医\",\r\n        \"value\": \"法医\"\r\n    },\r\n    {\r\n        \"name\": \"神医\",\r\n        \"value\": \"神医\"\r\n    },\r\n    {\r\n        \"name\": \"农民\",\r\n        \"value\": \"农民\"\r\n    },\r\n    {\r\n        \"name\": \"老师\",\r\n        \"value\": \"老师\"\r\n    },\r\n    {\r\n        \"name\": \"学霸\",\r\n        \"value\": \"学霸\"\r\n    },\r\n    {\r\n        \"name\": \"网红\",\r\n        \"value\": \"网红\"\r\n    },\r\n    {\r\n        \"name\": \"明星\",\r\n        \"value\": \"明星\"\r\n    },\r\n    {\r\n        \"name\": \"主播\",\r\n        \"value\": \"主播\"\r\n    },\r\n    {\r\n        \"name\": \"宅男\",\r\n        \"value\": \"宅男\"\r\n    },\r\n    {\r\n        \"name\": \"盗贼\",\r\n        \"value\": \"盗贼\"\r\n    },\r\n    {\r\n        \"name\": \"神探\",\r\n        \"value\": \"神探\"\r\n    },\r\n    {\r\n        \"name\": \"卧底\",\r\n        \"value\": \"卧底\"\r\n    },\r\n    {\r\n        \"name\": \"天师\",\r\n        \"value\": \"天师\"\r\n    },\r\n    {\r\n        \"name\": \"仵作\",\r\n        \"value\": \"仵作\"\r\n    },\r\n    {\r\n        \"name\": \"道士\",\r\n        \"value\": \"道士\"\r\n    },\r\n    {\r\n        \"value\": \"僵尸\",\r\n        \"name\": \"僵尸\"\r\n    },\r\n    {\r\n        \"value\": \"鬼怪\",\r\n        \"name\": \"鬼怪\"\r\n    },\r\n    {\r\n        \"value\": \"风水师\",\r\n        \"name\": \"风水师\"\r\n    },\r\n    {\r\n        \"value\": \"天才\",\r\n        \"name\": \"天才\"\r\n    },\r\n    {\r\n        \"value\": \"黑客\",\r\n        \"name\": \"黑客\"\r\n    },\r\n    {\r\n        \"value\": \"玩家\",\r\n        \"name\": \"玩家\"\r\n    },\r\n    {\r\n        \"value\": \"皇帝\",\r\n        \"name\": \"皇帝\"\r\n    },\r\n    {\r\n        \"value\": \"仙帝\",\r\n        \"name\": \"仙帝\"\r\n    },\r\n    {\r\n        \"value\": \"魔尊\",\r\n        \"name\": \"魔尊\"\r\n    },\r\n    {\r\n        \"value\": \"神仙\",\r\n        \"name\": \"神仙\"\r\n    },\r\n    {\r\n        \"value\": \"精灵\",\r\n        \"name\": \"精灵\"\r\n    },\r\n    {\r\n        \"value\": \"法师\",\r\n        \"name\": \"法师\"\r\n    },\r\n    {\r\n        \"value\": \"骑士\",\r\n        \"name\": \"骑士\"\r\n    },\r\n    {\r\n        \"value\": \"领主\",\r\n        \"name\": \"领主\"\r\n    },\r\n    {\r\n        \"value\": \"亡灵\",\r\n        \"name\": \"亡灵\"\r\n    },\r\n    {\r\n        \"name\": \"龙\",\r\n        \"value\": \"龙\"\r\n    },\r\n    {\r\n        \"name\": \"吸血鬼\",\r\n        \"value\": \"吸血鬼\"\r\n    },\r\n    {\r\n        \"name\": \"校花\",\r\n        \"value\": \"校花\"\r\n    },\r\n    {\r\n        \"name\": \"女帝\",\r\n        \"value\": \"女帝\"\r\n    },\r\n    {\r\n        \"name\": \"美女\",\r\n        \"value\": \"美女\"\r\n    },\r\n    {\r\n        \"name\": \"女总裁\",\r\n        \"value\": \"女总裁\"\r\n    },\r\n    {\r\n        \"name\": \"腹黑\",\r\n        \"value\": \"腹黑\"\r\n    },\r\n    {\r\n        \"name\": \"铁血\",\r\n        \"value\": \"铁血\"\r\n    },\r\n    {\r\n        \"name\": \"机智\",\r\n        \"value\": \"机智\"\r\n    },\r\n    {\r\n        \"name\": \"纨绔\",\r\n        \"value\": \"纨绔\"\r\n    },\r\n    {\r\n        \"name\": \"全能\",\r\n        \"value\": \"全能\"\r\n    },\r\n    {\r\n        \"name\": \"扮猪吃虎\",\r\n        \"value\": \"扮猪吃虎\"\r\n    },\r\n    {\r\n        \"name\": \"杀伐果断\",\r\n        \"value\": \"杀伐果断\"\r\n    },\r\n    {\r\n        \"name\": \"智商在线\",\r\n        \"value\": \"智商在线\"\r\n    },\r\n    {\r\n        \"name\": \"爽文\",\r\n        \"value\": \"爽文\"\r\n    },\r\n    {\r\n        \"name\": \"正剧\",\r\n        \"value\": \"正剧\"\r\n    },\r\n    {\r\n        \"name\": \"励志\",\r\n        \"value\": \"励志\"\r\n    },\r\n    {\r\n        \"name\": \"热血\",\r\n        \"value\": \"热血\"\r\n    },\r\n    {\r\n        \"name\": \"轻松\",\r\n        \"value\": \"轻松\"\r\n    },\r\n    {\r\n        \"name\": \"群像\",\r\n        \"value\": \"群像\"\r\n    },\r\n    {\r\n        \"name\": \"暗黑\",\r\n        \"value\": \"暗黑\"\r\n    },\r\n    {\r\n        \"name\": \"恐怖\",\r\n        \"value\": \"恐怖\"\r\n    },\r\n    {\r\n        \"name\": \"沙雕\",\r\n        \"value\": \"沙雕\"\r\n    },\r\n    {\r\n        \"name\": \"爆笑\",\r\n        \"value\": \"爆笑\"\r\n    },\r\n    {\r\n        \"name\": \"吐槽\",\r\n        \"value\": \"吐槽\"\r\n    },\r\n    {\r\n        \"name\": \"青春\",\r\n        \"value\": \"青春\"\r\n    },\r\n    {\r\n        \"name\": \"暧昧\",\r\n        \"value\": \"暧昧\"\r\n    },\r\n    {\r\n        \"name\": \"无CP\",\r\n        \"value\": \"无CP\"\r\n    },\r\n    {\r\n        \"name\": \"快节奏\",\r\n        \"value\": \"快节奏\"\r\n    },\r\n    {\r\n        \"name\": \"反套路\",\r\n        \"value\": \"反套路\"\r\n    },\r\n    {\r\n        \"name\": \"轻小说\",\r\n        \"value\": \"轻小说\"\r\n    },\r\n    {\r\n        \"name\": \"无金手指\",\r\n        \"value\": \"无金手指\"\r\n    },\r\n    {\r\n        \"name\": \"午夜惊魂\",\r\n        \"value\": \"午夜惊魂\"\r\n    },\r\n    {\r\n        \"name\": \"开放式结局\",\r\n        \"value\": \"开放式结局\"\r\n    },\r\n    {\r\n        \"name\": \"年代文\",\r\n        \"value\": \"年代文\"\r\n    },\r\n    {\r\n        \"name\": \"四合院\",\r\n        \"value\": \"四合院\"\r\n    },\r\n    {\r\n        \"name\": \"娱乐圈\",\r\n        \"value\": \"娱乐圈\"\r\n    },\r\n    {\r\n        \"name\": \"星际\",\r\n        \"value\": \"星际\"\r\n    },\r\n    {\r\n        \"name\": \"异界\",\r\n        \"value\": \"异界\"\r\n    },\r\n    {\r\n        \"name\": \"位面\",\r\n        \"value\": \"位面\"\r\n    },\r\n    {\r\n        \"name\": \"末世\",\r\n        \"value\": \"末世\"\r\n    },\r\n    {\r\n        \"name\": \"乡村\",\r\n        \"value\": \"乡村\"\r\n    },\r\n    {\r\n        \"name\": \"职场\",\r\n        \"value\": \"职场\"\r\n    },\r\n    {\r\n        \"name\": \"校园\",\r\n        \"value\": \"校园\"\r\n    },\r\n    {\r\n        \"name\": \"海岛\",\r\n        \"value\": \"海岛\"\r\n    },\r\n    {\r\n        \"name\": \"官场\",\r\n        \"value\": \"官场\"\r\n    },\r\n    {\r\n        \"name\": \"学院\",\r\n        \"value\": \"学院\"\r\n    },\r\n    {\r\n        \"name\": \"黑道\",\r\n        \"value\": \"黑道\"\r\n    },\r\n    {\r\n        \"name\": \"西方\",\r\n        \"value\": \"西方\"\r\n    },\r\n    {\r\n        \"name\": \"远古\",\r\n        \"value\": \"远古\"\r\n    },\r\n    {\r\n        \"name\": \"古代\",\r\n        \"value\": \"古代\"\r\n    },\r\n    {\r\n        \"value\": \"民国\",\r\n        \"name\": \"民国\"\r\n    },\r\n    {\r\n        \"value\": \"现代\",\r\n        \"name\": \"现代\"\r\n    },\r\n    {\r\n        \"value\": \"未来\",\r\n        \"name\": \"未来\"\r\n    },\r\n    {\r\n        \"value\": \"架空\",\r\n        \"name\": \"架空\"\r\n    },\r\n    {\r\n        \"value\": \"三国\",\r\n        \"name\": \"三国\"\r\n    },\r\n    {\r\n        \"value\": \"大唐\",\r\n        \"name\": \"大唐\"\r\n    },\r\n    {\r\n        \"value\": \"宋朝\",\r\n        \"name\": \"宋朝\"\r\n    },\r\n    {\r\n        \"value\": \"大秦\",\r\n        \"name\": \"大秦\"\r\n    },\r\n    {\r\n        \"value\": \"大明\",\r\n        \"name\": \"大明\"\r\n    },\r\n    {\r\n        \"value\": \"清朝\",\r\n        \"name\": \"清朝\"\r\n    },\r\n    {\r\n        \"value\": \"玄幻\",\r\n        \"name\": \"玄幻\"\r\n    },\r\n    {\r\n        \"value\": \"奇幻\",\r\n        \"name\": \"奇幻\"\r\n    },\r\n    {\r\n        \"value\": \"武侠\",\r\n        \"name\": \"武侠\"\r\n    },\r\n    {\r\n        \"value\": \"仙侠\",\r\n        \"name\": \"仙侠\"\r\n    },\r\n    {\r\n        \"value\": \"科幻\",\r\n        \"name\": \"科幻\"\r\n    },\r\n    {\r\n        \"value\": \"军事小说\",\r\n        \"name\": \"军事小说\"\r\n    },\r\n    {\r\n        \"value\": \"历史小说\",\r\n        \"name\": \"历史小说\"\r\n    },\r\n    {\r\n        \"value\": \"都市\",\r\n        \"name\": \"都市\"\r\n    },\r\n    {\r\n        \"value\": \"游戏\",\r\n        \"name\": \"游戏\"\r\n    },\r\n    {\r\n        \"value\": \"体育小说\",\r\n        \"name\": \"体育小说\"\r\n    },\r\n    {\r\n        \"value\": \"悬疑\",\r\n        \"name\": \"悬疑\"\r\n    },\r\n    {\r\n        \"value\": \"N次元\",\r\n        \"name\": \"N次元\"\r\n    }\r\n], \"女\": [\r\n    {\r\n        \"name\": \"全部\",\r\n        \"value\": \"\"\r\n    },\r\n    {\r\n        \"name\": \"穿越\",\r\n        \"value\": \"穿越\"\r\n    },\r\n    {\r\n        \"name\": \"穿书\",\r\n        \"value\": \"穿书\"\r\n    },\r\n    {\r\n        \"name\": \"快穿\",\r\n        \"value\": \"快穿\"\r\n    },\r\n    {\r\n        \"name\": \"群穿\",\r\n        \"value\": \"群穿\"\r\n    },\r\n    {\r\n        \"name\": \"古穿今\",\r\n        \"value\": \"古穿今\"\r\n    },\r\n    {\r\n        \"name\": \"重生\",\r\n        \"value\": \"重生\"\r\n    },\r\n    {\r\n        \"name\": \"双重生\",\r\n        \"value\": \"双重生\"\r\n    },\r\n    {\r\n        \"name\": \"空间\",\r\n        \"value\": \"空间\"\r\n    },\r\n    {\r\n        \"name\": \"脑洞\",\r\n        \"value\": \"脑洞\"\r\n    },\r\n    {\r\n        \"name\": \"逆袭\",\r\n        \"value\": \"逆袭\"\r\n    },\r\n    {\r\n        \"name\": \"美食\",\r\n        \"value\": \"美食\"\r\n    },\r\n    {\r\n        \"name\": \"基建\",\r\n        \"value\": \"基建\"\r\n    },\r\n    {\r\n        \"name\": \"打脸\",\r\n        \"value\": \"打脸\"\r\n    },\r\n    {\r\n        \"name\": \"马甲\",\r\n        \"value\": \"马甲\"\r\n    },\r\n    {\r\n        \"name\": \"萌宝\",\r\n        \"value\": \"萌宝\"\r\n    },\r\n    {\r\n        \"name\": \"复仇\",\r\n        \"value\": \"复仇\"\r\n    },\r\n    {\r\n        \"name\": \"虐渣\",\r\n        \"value\": \"虐渣\"\r\n    },\r\n    {\r\n        \"name\": \"失忆\",\r\n        \"value\": \"失忆\"\r\n    },\r\n    {\r\n        \"name\": \"逃荒\",\r\n        \"value\": \"逃荒\"\r\n    },\r\n    {\r\n        \"name\": \"翻车\",\r\n        \"value\": \"翻车\"\r\n    },\r\n    {\r\n        \"name\": \"性转\",\r\n        \"value\": \"性转\"\r\n    },\r\n    {\r\n        \"name\": \"灵魂互换\",\r\n        \"value\": \"灵魂互换\"\r\n    },\r\n    {\r\n        \"name\": \"金手指\",\r\n        \"value\": \"金手指\"\r\n    },\r\n    {\r\n        \"name\": \"读心术\",\r\n        \"value\": \"读心术\"\r\n    },\r\n    {\r\n        \"name\": \"系统流\",\r\n        \"value\": \"系统流\"\r\n    },\r\n    {\r\n        \"name\": \"开挂流\",\r\n        \"value\": \"开挂流\"\r\n    },\r\n    {\r\n        \"name\": \"经营流\",\r\n        \"value\": \"经营流\"\r\n    },\r\n    {\r\n        \"name\": \"二次元\",\r\n        \"value\": \"二次元\"\r\n    },\r\n    {\r\n        \"name\": \"凡尔赛\",\r\n        \"value\": \"凡尔赛\"\r\n    },\r\n    {\r\n        \"name\": \"男二上位\",\r\n        \"value\": \"男二上位\"\r\n    },\r\n    {\r\n        \"name\": \"日常生活\",\r\n        \"value\": \"日常生活\"\r\n    },\r\n    {\r\n        \"name\": \"炮灰逆袭\",\r\n        \"value\": \"炮灰逆袭\"\r\n    },\r\n    {\r\n        \"name\": \"斗智斗勇\",\r\n        \"value\": \"斗智斗勇\"\r\n    },\r\n    {\r\n        \"name\": \"影视原著\",\r\n        \"value\": \"影视原著\"\r\n    },\r\n    {\r\n        \"name\": \"动漫原著\",\r\n        \"value\": \"动漫原著\"\r\n    },\r\n    {\r\n        \"name\": \"经典衍生\",\r\n        \"value\": \"经典衍生\"\r\n    },\r\n    {\r\n        \"name\": \"动漫衍生\",\r\n        \"value\": \"动漫衍生\"\r\n    },\r\n    {\r\n        \"name\": \"游戏衍生\",\r\n        \"value\": \"游戏衍生\"\r\n    },\r\n    {\r\n        \"name\": \"同人衍生\",\r\n        \"value\": \"同人衍生\"\r\n    },\r\n    {\r\n        \"name\": \"异能\",\r\n        \"value\": \"异能\"\r\n    },\r\n    {\r\n        \"name\": \"网游\",\r\n        \"value\": \"网游\"\r\n    },\r\n    {\r\n        \"name\": \"直播\",\r\n        \"value\": \"直播\"\r\n    },\r\n    {\r\n        \"name\": \"综艺\",\r\n        \"value\": \"综艺\"\r\n    },\r\n    {\r\n        \"name\": \"鉴宝\",\r\n        \"value\": \"鉴宝\"\r\n    },\r\n    {\r\n        \"name\": \"职业文\",\r\n        \"value\": \"职业文\"\r\n    },\r\n    {\r\n        \"name\": \"发家致富\",\r\n        \"value\": \"发家致富\"\r\n    },\r\n    {\r\n        \"name\": \"家长里短\",\r\n        \"value\": \"家长里短\"\r\n    },\r\n    {\r\n        \"name\": \"真假千金\",\r\n        \"value\": \"真假千金\"\r\n    },\r\n    {\r\n        \"name\": \"豪门世家\",\r\n        \"value\": \"豪门世家\"\r\n    },\r\n    {\r\n        \"name\": \"神话\",\r\n        \"value\": \"神话\"\r\n    },\r\n    {\r\n        \"name\": \"权谋\",\r\n        \"value\": \"权谋\"\r\n    },\r\n    {\r\n        \"name\": \"种田文\",\r\n        \"value\": \"种田文\"\r\n    },\r\n    {\r\n        \"name\": \"斗极品\",\r\n        \"value\": \"斗极品\"\r\n    },\r\n    {\r\n        \"name\": \"前世今生\",\r\n        \"value\": \"前世今生\"\r\n    },\r\n    {\r\n        \"name\": \"修仙\",\r\n        \"value\": \"修仙\"\r\n    },\r\n    {\r\n        \"name\": \"养成\",\r\n        \"value\": \"养成\"\r\n    },\r\n    {\r\n        \"name\": \"魔法\",\r\n        \"value\": \"魔法\"\r\n    },\r\n    {\r\n        \"value\": \"御兽\",\r\n        \"name\": \"御兽\"\r\n    },\r\n    {\r\n        \"value\": \"宠物\",\r\n        \"name\": \"宠物\"\r\n    },\r\n    {\r\n        \"value\": \"丧尸\",\r\n        \"name\": \"丧尸\"\r\n    },\r\n    {\r\n        \"value\": \"求生\",\r\n        \"name\": \"求生\"\r\n    },\r\n    {\r\n        \"value\": \"机甲\",\r\n        \"name\": \"机甲\"\r\n    },\r\n    {\r\n        \"value\": \"囤物资\",\r\n        \"name\": \"囤物资\"\r\n    },\r\n    {\r\n        \"value\": \"无限流\",\r\n        \"name\": \"无限流\"\r\n    },\r\n    {\r\n        \"value\": \"升级流\",\r\n        \"name\": \"升级流\"\r\n    },\r\n    {\r\n        \"value\": \"废材流\",\r\n        \"name\": \"废材流\"\r\n    },\r\n    {\r\n        \"value\": \"玄学\",\r\n        \"name\": \"玄学\"\r\n    },\r\n    {\r\n        \"value\": \"探险\",\r\n        \"name\": \"探险\"\r\n    },\r\n    {\r\n        \"value\": \"烧脑\",\r\n        \"name\": \"烧脑\"\r\n    },\r\n    {\r\n        \"value\": \"怪谈\",\r\n        \"name\": \"怪谈\"\r\n    },\r\n    {\r\n        \"value\": \"风水\",\r\n        \"name\": \"风水\"\r\n    },\r\n    {\r\n        \"value\": \"推理\",\r\n        \"name\": \"推理\"\r\n    },\r\n    {\r\n        \"value\": \"破案\",\r\n        \"name\": \"破案\"\r\n    },\r\n    {\r\n        \"name\": \"灵异\",\r\n        \"value\": \"灵异\"\r\n    },\r\n    {\r\n        \"name\": \"刑侦\",\r\n        \"value\": \"刑侦\"\r\n    },\r\n    {\r\n        \"name\": \"契约\",\r\n        \"value\": \"契约\"\r\n    },\r\n    {\r\n        \"name\": \"替身\",\r\n        \"value\": \"替身\"\r\n    },\r\n    {\r\n        \"name\": \"攻略\",\r\n        \"value\": \"攻略\"\r\n    },\r\n    {\r\n        \"name\": \"师徒\",\r\n        \"value\": \"师徒\"\r\n    },\r\n    {\r\n        \"name\": \"错嫁\",\r\n        \"value\": \"错嫁\"\r\n    },\r\n    {\r\n        \"name\": \"替嫁\",\r\n        \"value\": \"替嫁\"\r\n    },\r\n    {\r\n        \"name\": \"逃婚\",\r\n        \"value\": \"逃婚\"\r\n    },\r\n    {\r\n        \"name\": \"闪婚\",\r\n        \"value\": \"闪婚\"\r\n    },\r\n    {\r\n        \"name\": \"二婚\",\r\n        \"value\": \"二婚\"\r\n    },\r\n    {\r\n        \"name\": \"军婚\",\r\n        \"value\": \"军婚\"\r\n    },\r\n    {\r\n        \"name\": \"暗恋\",\r\n        \"value\": \"暗恋\"\r\n    },\r\n    {\r\n        \"name\": \"相亲\",\r\n        \"value\": \"相亲\"\r\n    },\r\n    {\r\n        \"name\": \"同居\",\r\n        \"value\": \"同居\"\r\n    },\r\n    {\r\n        \"name\": \"隐婚\",\r\n        \"value\": \"隐婚\"\r\n    },\r\n    {\r\n        \"name\": \"双洁\",\r\n        \"value\": \"双洁\"\r\n    },\r\n    {\r\n        \"name\": \"独宠\",\r\n        \"value\": \"独宠\"\r\n    },\r\n    {\r\n        \"name\": \"苦恋\",\r\n        \"value\": \"苦恋\"\r\n    },\r\n    {\r\n        \"name\": \"年下\",\r\n        \"value\": \"年下\"\r\n    },\r\n    {\r\n        \"name\": \"初恋\",\r\n        \"value\": \"初恋\"\r\n    },\r\n    {\r\n        \"name\": \"倒追\",\r\n        \"value\": \"倒追\"\r\n    },\r\n    {\r\n        \"name\": \"姐弟恋\",\r\n        \"value\": \"姐弟恋\"\r\n    },\r\n    {\r\n        \"name\": \"双男主\",\r\n        \"value\": \"双男主\"\r\n    },\r\n    {\r\n        \"name\": \"双女主\",\r\n        \"value\": \"双女主\"\r\n    },\r\n    {\r\n        \"name\": \"无男主\",\r\n        \"value\": \"无男主\"\r\n    },\r\n    {\r\n        \"value\": \"离婚后\",\r\n        \"name\": \"离婚后\"\r\n    },\r\n    {\r\n        \"value\": \"带球跑\",\r\n        \"name\": \"带球跑\"\r\n    },\r\n    {\r\n        \"value\": \"先婚后爱\",\r\n        \"name\": \"先婚后爱\"\r\n    },\r\n    {\r\n        \"value\": \"日久生情\",\r\n        \"name\": \"日久生情\"\r\n    },\r\n    {\r\n        \"value\": \"一见钟情\",\r\n        \"name\": \"一见钟情\"\r\n    },\r\n    {\r\n        \"value\": \"欢喜冤家\",\r\n        \"name\": \"欢喜冤家\"\r\n    },\r\n    {\r\n        \"value\": \"青梅竹马\",\r\n        \"name\": \"青梅竹马\"\r\n    },\r\n    {\r\n        \"value\": \"相爱相杀\",\r\n        \"name\": \"相爱相杀\"\r\n    },\r\n    {\r\n        \"value\": \"别后重逢\",\r\n        \"name\": \"别后重逢\"\r\n    },\r\n    {\r\n        \"value\": \"双向奔赴\",\r\n        \"name\": \"双向奔赴\"\r\n    },\r\n    {\r\n        \"value\": \"破镜重圆\",\r\n        \"name\": \"破镜重圆\"\r\n    },\r\n    {\r\n        \"value\": \"异国情缘\",\r\n        \"name\": \"异国情缘\"\r\n    },\r\n    {\r\n        \"value\": \"追妻火葬场\",\r\n        \"name\": \"追妻火葬场\"\r\n    },\r\n    {\r\n        \"value\": \"女强\",\r\n        \"name\": \"女强\"\r\n    },\r\n    {\r\n        \"value\": \"团宠\",\r\n        \"name\": \"团宠\"\r\n    },\r\n    {\r\n        \"value\": \"宠妻\",\r\n        \"name\": \"宠妻\"\r\n    },\r\n    {\r\n        \"value\": \"病娇\",\r\n        \"name\": \"病娇\"\r\n    },\r\n    {\r\n        \"value\": \"糙汉\",\r\n        \"name\": \"糙汉\"\r\n    },\r\n    {\r\n        \"value\": \"腹黑\",\r\n        \"name\": \"腹黑\"\r\n    },\r\n    {\r\n        \"value\": \"霸道\",\r\n        \"name\": \"霸道\"\r\n    },\r\n    {\r\n        \"value\": \"护短\",\r\n        \"name\": \"护短\"\r\n    },\r\n    {\r\n        \"value\": \"冰山\",\r\n        \"name\": \"冰山\"\r\n    },\r\n    {\r\n        \"value\": \"败家\",\r\n        \"name\": \"败家\"\r\n    },\r\n    {\r\n        \"value\": \"偏执\",\r\n        \"name\": \"偏执\"\r\n    },\r\n    {\r\n        \"value\": \"机智\",\r\n        \"name\": \"机智\"\r\n    },\r\n    {\r\n        \"value\": \"忠犬\",\r\n        \"name\": \"忠犬\"\r\n    },\r\n    {\r\n        \"value\": \"咸鱼\",\r\n        \"name\": \"咸鱼\"\r\n    },\r\n    {\r\n        \"value\": \"财迷\",\r\n        \"name\": \"财迷\"\r\n    },\r\n    {\r\n        \"value\": \"双强\",\r\n        \"name\": \"双强\"\r\n    },\r\n    {\r\n        \"value\": \"纨绔\",\r\n        \"name\": \"纨绔\"\r\n    },\r\n    {\r\n        \"value\": \"反派\",\r\n        \"name\": \"反派\"\r\n    },\r\n    {\r\n        \"value\": \"大佬\",\r\n        \"name\": \"大佬\"\r\n    },\r\n    {\r\n        \"value\": \"女配\",\r\n        \"name\": \"女配\"\r\n    },\r\n    {\r\n        \"value\": \"绿茶\",\r\n        \"name\": \"绿茶\"\r\n    },\r\n    {\r\n        \"value\": \"哥哥\",\r\n        \"name\": \"哥哥\"\r\n    },\r\n    {\r\n        \"value\": \"残疾\",\r\n        \"name\": \"残疾\"\r\n    },\r\n    {\r\n        \"value\": \"傲娇\",\r\n        \"name\": \"傲娇\"\r\n    },\r\n    {\r\n        \"value\": \"白月光\",\r\n        \"name\": \"白月光\"\r\n    },\r\n    {\r\n        \"value\": \"黑莲花\",\r\n        \"name\": \"黑莲花\"\r\n    },\r\n    {\r\n        \"value\": \"黑月光\",\r\n        \"name\": \"黑月光\"\r\n    },\r\n    {\r\n        \"value\": \"凤凰男\",\r\n        \"name\": \"凤凰男\"\r\n    },\r\n    {\r\n        \"value\": \"明星\",\r\n        \"name\": \"明星\"\r\n    },\r\n    {\r\n        \"value\": \"医生\",\r\n        \"name\": \"医生\"\r\n    },\r\n    {\r\n        \"value\": \"学霸\",\r\n        \"name\": \"学霸\"\r\n    },\r\n    {\r\n        \"value\": \"主播\",\r\n        \"name\": \"主播\"\r\n    },\r\n    {\r\n        \"value\": \"总裁\",\r\n        \"name\": \"总裁\"\r\n    },\r\n    {\r\n        \"value\": \"大叔\",\r\n        \"name\": \"大叔\"\r\n    },\r\n    {\r\n        \"value\": \"千金\",\r\n        \"name\": \"千金\"\r\n    },\r\n    {\r\n        \"value\": \"老师\",\r\n        \"name\": \"老师\"\r\n    },\r\n    {\r\n        \"value\": \"校草\",\r\n        \"name\": \"校草\"\r\n    },\r\n    {\r\n        \"value\": \"高干\",\r\n        \"name\": \"高干\"\r\n    },\r\n    {\r\n        \"value\": \"法医\",\r\n        \"name\": \"法医\"\r\n    },\r\n    {\r\n        \"value\": \"男神\",\r\n        \"name\": \"男神\"\r\n    },\r\n    {\r\n        \"value\": \"网红\",\r\n        \"name\": \"网红\"\r\n    },\r\n    {\r\n        \"value\": \"天才\",\r\n        \"name\": \"天才\"\r\n    },\r\n    {\r\n        \"value\": \"和尚\",\r\n        \"name\": \"和尚\"\r\n    },\r\n    {\r\n        \"value\": \"皇帝\",\r\n        \"name\": \"皇帝\"\r\n    },\r\n    {\r\n        \"value\": \"暴君\",\r\n        \"name\": \"暴君\"\r\n    },\r\n    {\r\n        \"value\": \"天师\",\r\n        \"name\": \"天师\"\r\n    },\r\n    {\r\n        \"value\": \"王妃\",\r\n        \"name\": \"王妃\"\r\n    },\r\n    {\r\n        \"value\": \"嫡女\",\r\n        \"name\": \"嫡女\"\r\n    },\r\n    {\r\n        \"value\": \"弃妇\",\r\n        \"name\": \"弃妇\"\r\n    },\r\n    {\r\n        \"value\": \"庶女\",\r\n        \"name\": \"庶女\"\r\n    },\r\n    {\r\n        \"value\": \"神医\",\r\n        \"name\": \"神医\"\r\n    },\r\n    {\r\n        \"value\": \"太监\",\r\n        \"name\": \"太监\"\r\n    },\r\n    {\r\n        \"value\": \"厨娘\",\r\n        \"name\": \"厨娘\"\r\n    },\r\n    {\r\n        \"value\": \"奸臣\",\r\n        \"name\": \"奸臣\"\r\n    },\r\n    {\r\n        \"value\": \"王爷\",\r\n        \"name\": \"王爷\"\r\n    },\r\n    {\r\n        \"value\": \"将军\",\r\n        \"name\": \"将军\"\r\n    },\r\n    {\r\n        \"value\": \"太子\",\r\n        \"name\": \"太子\"\r\n    },\r\n    {\r\n        \"value\": \"毒医\",\r\n        \"name\": \"毒医\"\r\n    },\r\n    {\r\n        \"value\": \"丫鬟\",\r\n        \"name\": \"丫鬟\"\r\n    },\r\n    {\r\n        \"value\": \"小妾\",\r\n        \"name\": \"小妾\"\r\n    },\r\n    {\r\n        \"value\": \"贵女\",\r\n        \"name\": \"贵女\"\r\n    },\r\n    {\r\n        \"value\": \"仵作\",\r\n        \"name\": \"仵作\"\r\n    },\r\n    {\r\n        \"value\": \"神仙\",\r\n        \"name\": \"神仙\"\r\n    },\r\n    {\r\n        \"value\": \"精灵\",\r\n        \"name\": \"精灵\"\r\n    },\r\n    {\r\n        \"value\": \"法师\",\r\n        \"name\": \"法师\"\r\n    },\r\n    {\r\n        \"value\": \"吸血鬼\",\r\n        \"name\": \"吸血鬼\"\r\n    },\r\n    {\r\n        \"name\": \"道士\",\r\n        \"value\": \"道士\"\r\n    },\r\n    {\r\n        \"name\": \"僵尸\",\r\n        \"value\": \"僵尸\"\r\n    },\r\n    {\r\n        \"name\": \"鬼怪\",\r\n        \"value\": \"鬼怪\"\r\n    },\r\n    {\r\n        \"name\": \"风水师\",\r\n        \"value\": \"风水师\"\r\n    },\r\n    {\r\n        \"name\": \"极品前任\",\r\n        \"value\": \"极品前任\"\r\n    },\r\n    {\r\n        \"name\": \"扮猪吃虎\",\r\n        \"value\": \"扮猪吃虎\"\r\n    },\r\n    {\r\n        \"name\": \"可盐可甜\",\r\n        \"value\": \"可盐可甜\"\r\n    },\r\n    {\r\n        \"name\": \"智商在线\",\r\n        \"value\": \"智商在线\"\r\n    },\r\n    {\r\n        \"name\": \"女扮男装\",\r\n        \"value\": \"女扮男装\"\r\n    },\r\n    {\r\n        \"name\": \"甜宠\",\r\n        \"value\": \"甜宠\"\r\n    },\r\n    {\r\n        \"name\": \"1V1\",\r\n        \"value\": \"1V1\"\r\n    },\r\n    {\r\n        \"name\": \"HE\",\r\n        \"value\": \"HE\"\r\n    },\r\n    {\r\n        \"name\": \"BE\",\r\n        \"value\": \"BE\"\r\n    },\r\n    {\r\n        \"name\": \"虐恋\",\r\n        \"value\": \"虐恋\"\r\n    },\r\n    {\r\n        \"name\": \"爆笑\",\r\n        \"value\": \"爆笑\"\r\n    },\r\n    {\r\n        \"name\": \"沙雕\",\r\n        \"value\": \"沙雕\"\r\n    },\r\n    {\r\n        \"name\": \"吐槽\",\r\n        \"value\": \"吐槽\"\r\n    },\r\n    {\r\n        \"name\": \"轻松\",\r\n        \"value\": \"轻松\"\r\n    },\r\n    {\r\n        \"name\": \"热血\",\r\n        \"value\": \"热血\"\r\n    },\r\n    {\r\n        \"name\": \"群像\",\r\n        \"value\": \"群像\"\r\n    },\r\n    {\r\n        \"name\": \"正剧\",\r\n        \"value\": \"正剧\"\r\n    },\r\n    {\r\n        \"name\": \"励志\",\r\n        \"value\": \"励志\"\r\n    },\r\n    {\r\n        \"name\": \"爽文\",\r\n        \"value\": \"爽文\"\r\n    },\r\n    {\r\n        \"name\": \"暗黑\",\r\n        \"value\": \"暗黑\"\r\n    },\r\n    {\r\n        \"name\": \"恐怖\",\r\n        \"value\": \"恐怖\"\r\n    },\r\n    {\r\n        \"name\": \"青春\",\r\n        \"value\": \"青春\"\r\n    },\r\n    {\r\n        \"name\": \"浪漫\",\r\n        \"value\": \"浪漫\"\r\n    },\r\n    {\r\n        \"name\": \"暧昧\",\r\n        \"value\": \"暧昧\"\r\n    },\r\n    {\r\n        \"name\": \"无CP\",\r\n        \"value\": \"无CP\"\r\n    },\r\n    {\r\n        \"name\": \"清水文\",\r\n        \"value\": \"清水文\"\r\n    },\r\n    {\r\n        \"name\": \"轻小说\",\r\n        \"value\": \"轻小说\"\r\n    },\r\n    {\r\n        \"name\": \"快节奏\",\r\n        \"value\": \"快节奏\"\r\n    },\r\n    {\r\n        \"name\": \"反套路\",\r\n        \"value\": \"反套路\"\r\n    },\r\n    {\r\n        \"name\": \"治愈救赎\",\r\n        \"value\": \"治愈救赎\"\r\n    },\r\n    {\r\n        \"name\": \"无金手指\",\r\n        \"value\": \"无金手指\"\r\n    },\r\n    {\r\n        \"name\": \"午夜惊魂\",\r\n        \"value\": \"午夜惊魂\"\r\n    },\r\n    {\r\n        \"name\": \"开放式结局\",\r\n        \"value\": \"开放式结局\"\r\n    },\r\n    {\r\n        \"name\": \"年代文\",\r\n        \"value\": \"年代文\"\r\n    },\r\n    {\r\n        \"name\": \"娱乐圈\",\r\n        \"value\": \"娱乐圈\"\r\n    },\r\n    {\r\n        \"value\": \"星际\",\r\n        \"name\": \"星际\"\r\n    },\r\n    {\r\n        \"value\": \"末世\",\r\n        \"name\": \"末世\"\r\n    },\r\n    {\r\n        \"value\": \"职场\",\r\n        \"name\": \"职场\"\r\n    },\r\n    {\r\n        \"value\": \"校园\",\r\n        \"name\": \"校园\"\r\n    },\r\n    {\r\n        \"value\": \"学院\",\r\n        \"name\": \"学院\"\r\n    },\r\n    {\r\n        \"value\": \"位面\",\r\n        \"name\": \"位面\"\r\n    },\r\n    {\r\n        \"value\": \"异界\",\r\n        \"name\": \"异界\"\r\n    },\r\n    {\r\n        \"value\": \"乡村\",\r\n        \"name\": \"乡村\"\r\n    },\r\n    {\r\n        \"value\": \"西方\",\r\n        \"name\": \"西方\"\r\n    },\r\n    {\r\n        \"value\": \"架空\",\r\n        \"name\": \"架空\"\r\n    },\r\n    {\r\n        \"value\": \"远古\",\r\n        \"name\": \"远古\"\r\n    },\r\n    {\r\n        \"value\": \"古代\",\r\n        \"name\": \"古代\"\r\n    },\r\n    {\r\n        \"value\": \"民国\",\r\n        \"name\": \"民国\"\r\n    },\r\n    {\r\n        \"value\": \"现代\",\r\n        \"name\": \"现代\"\r\n    },\r\n    {\r\n        \"value\": \"未来\",\r\n        \"name\": \"未来\"\r\n    },\r\n    {\r\n        \"value\": \"清朝\",\r\n        \"name\": \"清朝\"\r\n    },\r\n    {\r\n        \"value\": \"现代言情\",\r\n        \"name\": \"现代言情\"\r\n    },\r\n    {\r\n        \"value\": \"古风言情\",\r\n        \"name\": \"古风言情\"\r\n    },\r\n    {\r\n        \"value\": \"幻想言情\",\r\n        \"name\": \"幻想言情\"\r\n    },\r\n    {\r\n        \"value\": \"爱情悬疑\",\r\n        \"name\": \"爱情悬疑\"\r\n    },\r\n    {\r\n        \"value\": \"纯爱小说\",\r\n        \"name\": \"纯爱小说\"\r\n    }\r\n]}\n\nfor (let [k, v] of Object.entries(data)) {\n    if (k === \"男\") {\n        for (let i of v) {\n            let style = {};\n            if (i.name === \"全部\") {\n                style = {\n                    title: \"喜马拉雅男频 \" + i.name,\n                    url: base_url + \"\/discover?datatype=男频\",\n                    style: {\n                        layout_flexGrow: 1,\n                        layout_flexBasisPercent: 1\n                    }\n                };\n            } else {\n                style = {\n                    title: i.name,\n                    url: base_url + \"\/discover?datatype=男频&metadataValues=\" + i.value,\n                    style: {\n                        layout_flexGrow: 1,\n                        layout_flexBasisPercent: 0.25\n                    }\n                };\n            }\n            fxxmly.push(style);\n        }\n    }\n    if (k === \"女\") {\n        for (let i of v) {\n            let style = {};\n            if (i.name === \"全部\") {\n                style = {\n                    title: \"喜马拉雅女频 \" + i.name,\n                    url: base_url + \"\/discover?datatype=女频\",\n                    style: {\n                        layout_flexGrow: 1,\n                        layout_flexBasisPercent: 1\n                    }\n                };\n            } else {\n                style = {\n                    title: i.name,\n                    url: base_url + \"\/discover?datatype=女频&metadataValues=\" + i.value,\n                    style: {\n                        layout_flexGrow: 1,\n                        layout_flexBasisPercent: 0.25\n                    }\n                };\n            }\n            fxxmly.push(style);\n        }\n    }\n}\n\nJSON.stringify(fxxmly);\n\n<\/js>","enabledCookieJar":true,"bookUrlPattern":""},{"bookSourceGroup":"番茄漫画","ruleExplore":{"author":"author","bookList":"$.data.data","lastChapter":"","wordCount":"word_number","intro":"{{$.media}}\n{{$.abstract}}","kind":"{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}","coverUrl":"thumb_url","bookUrl":"{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}\/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n<\/js>","name":"book_name"},"weight":0,"ruleContent":{"content":"content"},"loginUrl":"function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        }\n    } catch (error) {\n    }\n}\n\n\nvar server = getArgument('server');\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n\n    return ''; \n}\n\n\/\/ 填写密钥\nfunction loginqt(){\n    let key = gets_key()\n    if (key && key != \"\") {\n            java.toast(\"您已填写秘钥:\"+key);\n            return false\n        }\n    java.startBrowserAwait(getArgument('server')+'\/check_key','登录大灰狼小说书源');\n    key = gets_key()\n    if (key){\n        java.longToast('登录成功，秘钥：'+key);\n        return true\n        } else {\n            java.toast('登录失败！！！！！');\n            return false\n            }\n}\n\n\/\/登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https:\/\/fanqienovel.com\/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {}\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n\/\/退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n \/\/cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n\/\/获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    return open_argument[key];\n}\n\n\/\/设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\t\t\nfunction api() { \tjava.startBrowserAwait(getArgument('server')+'\/','首页');\n    }\nfunction hqmy() { \tjava.startBrowserAwait(getArgument('server')+'\/key','密钥');\n    }\nfunction vip() { \tjava.startBrowserAwait(getArgument('server')+'\/coffee',\"喝咖啡\");\n    }\nfunction clear() { \tjava.startBrowserAwait(getArgument('server')+'\/clear',\"清空设备\");\n    }\n\n\nfunction set(media) {\n\t  setArgument('media',media);\n\t  java.toast(\"\\n\\n已切换至：\"+media+'\\n请重新搜索书籍！');\n}\n\n\nfunction getmedia() {\n\t   \tlet media = getArgument('media');\n\t   \tif(media == '') {\n\t   \t\tmedia = '全部来源都搜索';\n\t   \t\t}\n\t\t\t  java.toast(\"\\n\\n当前搜索范围是：\"+media);\n\t\t\t  \n}\n\n\/\/获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：'+ server\n    java.toast(tishi);\n    return server\n}\n\n\n\/\/设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    ;\n    if (!zdyserver) {\n        const servers = String(source.bookSourceUrl).split('\\n').map(s => s.trim()).filter(s => s && !s.includes('提示'));\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}","searchUrl":"{{key}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nbase_url+'\/searchCaricature?title='+result+'&media='+media","ruleSearch":{"author":"author","bookList":"$..book_data[*]","lastChapter":"{{$.media}}-{{$..book_id}}\n<js>\nfunction lastChapterTitle(data) {\n    const media = data.split(\"-\")[0];\n    const bookid = data.split(\"-\")[1].split(\"_\")[0];\n    let url;\n    if (media === \"番茄\") {\n        url = `https:\/\/api5-normal-sinfonlineb.fqnovel.com\/reading\/bookapi\/multi-detail\/v\/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n    } else  {\n        return null\n    }\n}\nlastChapterTitle(result)\n<\/js>","coverUrl":"thumb_url","wordCount":"word_number","intro":"{{$.media}}\n{{$.abstract}}","kind":"tags","checkKeyWord":"炙热沦陷","name":"book_name","bookUrl":"{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}\/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n<\/js>"},"enabledExplore":true,"ruleBookInfo":{"tocUrl":"","author":"author","kind":"category","name":"book_name","intro":"$..book_id\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet jj;\n\nvar tishi = '\\n\\n当前搜索模式：'+ ms +'\\n\\n如需切换,请点击登陆进行切换\\n切换之后需要重新搜索！\\n'\n\n\nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n    info = JSON.parse(java.ajax(`${base_url}\/novel_detail?&bookid=${bookid}`));\n    } catch (error) {\n        info = {'abstract': \"\"}\n        }\n} else {\n    info = {'abstract': \"\"}\n    }\n\nif(!key) {\n    jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    }\n    else if (!info.abstract) {\n    jj = \"\"\n    } else {\n    jj =tishi +  info.abstract\n    }\n<\/js>","lastChapter":"last_chapter_title"},"ruleToc":{"chapterUrl":"{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\/\/ 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n\/\/ 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\nif(!key) {\n    java.longToast('\\n\\n请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页');\n}\n\nlet catalogue_url = `${base_url}\/reader?item_id=${itemId}&book_id=${book_id}&tone_id=-2&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url","chapterList":"$..chapterListWithVolume[*].*","updateTime":"firstPassTime","chapterName":"title"},"loginUi":"[\n      {\n        \"name\":  \"  请杯咖啡，破解限制  \",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"设备管理\",\n        \"type\": \"button\",\n        \"action\": \"clear()\"\n      },{\n        \"name\":  \"服务器地址(可不填)\",\n        \"type\": \"text\"\n        },{\n        \"name\":  \"更新源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"♥♥♥♥♥♥填写密钥♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"当前来源\",\n        \"type\": \"button\",\n        \"action\": \"getmedia()\"\n      },{\n        \"name\":  \"搜索全部来源漫画\",\n        \"type\": \"button\",\n        \"action\": \"set('搜索全部')\"\n      },{\n        \"name\":  \"搜索番茄漫画\",\n        \"type\": \"button\",\n        \"action\": \"set('番茄')\"\n      },{\n        \"name\":  \"搜索包子漫画\",\n        \"type\": \"button\",\n        \"action\": \"set('包子')\"\n      }  ]","jsLib":"function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"media\": \"全部\",\n            \"server\": \"https:\/\/api.langge.tk\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}","bookSourceUrl":"https:\/\/api.langge.tk\nhttps:\/\/api.doubi.tk\nhttp:\/\/api.dahuilang.cf\n提示：点击登录切换服务器按钮可进行切换(当前书源为纯漫画)","lastUpdateTime":1736269071464,"customOrder":3,"bookSourceType":2,"modificationDate":1737139095237.833,"enabled":true,"bookSourceName":"🍅大灰狼漫画","variableComment":"","bookSourceComment":"仅支持番茄漫画\n20241126修复bug\n20241129更新秘钥填写方式\n20241217更新服务器切换功能\n20250104新增服务器\n20250105登录新增手动填写服务器","cloudRecordID":"C0748BCF-F5F1-41C3-A426-C8203BDF7F0C","respondTime":180000,"exploreUrl":"<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\/\/ 地区分类\nconst regions = {\n    \"国漫\": \"cn\",\n    \"日本\": \"jp\",\n    \"韩国\": \"kr\",\n    \"欧美\": \"en\"\n};\n\n\/\/ 类型分类\nconst bztypes = {\n    \"恋爱\": \"lianai\",\n    \"纯爱\": \"chunai\",\n    \"古风\": \"gufeng\",\n    \"异能\": \"yineng\",\n    \"悬疑\": \"xuanyi\",\n    \"剧情\": \"juqing\",\n    \"奇幻\": \"qihuan\",\n    \"玄幻\": \"xuanhuan\",\n    \"穿越\": \"chuanyue\",\n    \"冒险\": \"maoxian\",\n    \"推理\": \"tuili\",\n    \"武侠\": \"wuxia\",\n    \"格斗\": \"gedou\",\n    \"战争\": \"zhanzheng\",\n    \"热血\": \"rexue\",\n    \"搞笑\": \"gaoxiao\",\n    \"大女主\": \"danuzhu\",\n    \"都市\": \"dushi\",\n    \"总裁\": \"zongcai\",\n    \"后宫\": \"hougong\",\n    \"日常\": \"richang\",\n    \"韩漫\": \"hanman\",\n    \"少年\": \"shaonian\",\n    \"其他\": \"qita\"\n};\n\nlet datas = [{\n    \"title\": \"全部分类\",\n    \"url\": base_url+\"\/discover?page={{page}}&bztype=all&region=all&state=all&bzfilter=%2a\",\n    \"style\": {\n        \"layout_flexGrow\": 1,\n        \"layout_flexBasisPercent\": 0.2\n    }\n}];\n\nfor (let bztype_k in bztypes) {\n    let bztype_v = bztypes[bztype_k];\n\n    let data = {\n        \"title\": '༺༴ '+bztype_k+' ༴༻',\n        \"url\": `${base_url}\/discover?page={{page}}&bztype=${bztype_v}&region=all&state=all&bzfilter=%2a`,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    };\n    datas.push(data);\n\n    for (let region_k in regions) {\n        let region_v = regions[region_k];\n        data = {\n            \"title\": region_k,\n            \"url\": `${base_url}\/discover?page={{page}}&bztype=${bztype_v}&region=${region_v}&state=all&bzfilter=%2a`,\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.2\n            }\n        };\n        datas.push(data);\n    }\n}\n\nJSON.stringify(datas);\n<\/js>","enabledCookieJar":true,"bookUrlPattern":""}]