[
  {
    "bookSourceComment": "//2025.6.4 新增邀请码获取 ◎夜泽川◎\n//2025.5.8 切换接口自动替换本地书架书籍链接。 ◎夜泽川◎\n//2025.4.19 发现静默检测更新，添加评论区开关。 ◎夜泽川◎\n//2025.4.12 修复排序切换，优化部分规则。◎夜泽川◎\n//2025.4.11 剔除一个默认接口，修复默认接口的登录问题。 ◎夜泽川◎\n//2025.4.3 修复评论数据异常无法处理的问题，新增一个默认接口。 ◎夜泽川◎\n//2025.3.21 优化接口获取 ◎夜泽川◎\n//2025.3.16 添加发现分类排序选择 ◎夜泽川◎\n//2025.3.8 切换接口重新设置登陆cookie ◎夜泽川◎\n//2025.3.7 重构书源，增加接口选择。◎夜泽川◎\n//2025.3.6 本地书架变更为添加时间排序 ◎夜泽川◎\n//2025.3.5 “我的书评”改为uid精准匹配。◎夜泽川◎\n//2025.3.2 优化正文，限制预下载 ◎夜泽川◎\n//2025.3.1 优化发现及正文 ◎夜泽川◎\n//2025.2.28 优化书评展示及发送，修复已知问题 ◎夜泽川◎\n//2025.2.27 更正登录信息展示 \n//2025.2.26 新增书评展示。（其实也没多少评论） ◎夜泽川◎\n//2025.2.23 处理正文文本获取时可能出现的错误。（三次试错）◎夜泽川◎\n//2025.2.22 加入本地书架功能（与阅读书架隔离），网络书架的替代品（因为经验值），未注册用户也可使用。\n（实验性功能，不建议加入过多，可能会出现未知问题，用之前记得备份好🧐）\n//2025.2.17 处理网络书架翻页的相关问题 ◎夜泽川◎\n//2025.2.16 优化发现 ◎夜泽川◎\n//2025.2.13 新增书源更新检测，根据书源编辑时间戳判断，修改源会导致判断错误。◎夜泽川◎\n//2025.2.12 新增网络书架处理（仅登录用户）,动态获取发现。◎夜泽川◎\n//2025.2.9 自动处理正文验证。◎夜泽川◎\n//2025.1.26 修复登录函数中与阅读内置变量冲突。◎夜泽川◎\n//2025.1.24 优化登录规则 ◎夜泽川◎//2024.7.26 ◎夜泽川◎\n//搜索和发现需要封面可复制规则到相应位置，因为封面是从详情取的，所以可能会导致加载变慢甚至超时，自行斟酌。↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\na@href\n<js>\nul = GetUL() + result;\njava.ajax(ul);\n</js>\n[property$=image]@content",
    "bookSourceGroup": "自制,零",
    "bookSourceName": "®️爱丽丝书屋",
    "bookSourceType": 0,
    "bookSourceUrl": "爱丽丝书屋 by.夜泽川",
    "bookUrlPattern": "https?:\\/\\/.*?alicesw.*?\\.(org|xyz|com)\\/novel\\/\\d+\\.html",
    "customOrder": 38,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\neval(String(source.loginUrl));\nvar timestamp = new Date().getTime();\nvar uptime = cache.get(\"uptime\");\nif (!uptime) {\n update(\"发现\");\n cache.put(\"uptime\", (timestamp + 21600000).toString());\n} else if (timestamp >= Number(uptime)) {\n update(\"发现\");\n cache.delete(\"uptime\");\n cache.put(\"uptime\", (timestamp + 21600000).toString());\n}\nlet Cookie = cookie.getCookie(GetUL());\nif (!/lf_user_auth/.test(Cookie) && source.getLoginHeader()) {\n let ck = source.getLoginHeaderMap()['Cookie']\n cookie.setCookie(GetUL(), ck);\n java.toast('登录状态掉了，已重新登陆');\n}\nvar result = [];\nvar push = (title, url, size) =>\n result.push({\n title: title,\n url: url ? `{{GetUL()}}${url}` : url,\n style: {\n layout_flexGrow: 1,\n layout_flexBasisPercent: size\n }\n });\npush(`当前站源：${GetUL()}`, null, 1)\nif (source.getLoginHeader()) {\n let jc = source.getLoginHeaderMap();\n let inf = decodeURIComponent(jc.get(\"Cookie\"));\n let info = decodeURIComponent(inf).match(/\\{[\\s\\S]+\\}/)[0];\n let username = JSON.parse(info)['username'];\n let expe = java.ajax(`${GetUL()}/user/index/index.html`);\n let ex = org.jsoup.Jsoup.parse(expe).select('.group , .app_accountBlock_lis ul li');\n push(`用户◎${username}◎中心`, null, 1);\n push(\"书架\", \"/user/bookshelf?page={{page}}\", 0.45);\n push(\"阅读记录\", \"/user/recentread/index.html\", 0.45);\n ex.forEach(xp => {\n nam = String(xp.text()).replace(/[^\\u4e00-\\u9fa5a-zA-Z0-9]/g, \"\");\n title = /\\d/.test(nam) ? nam.replace(/\\d+/, \"：$&\") : nam.replace(/^/, \"用户等级：\");\n push(title, null, 0.45);\n });\n} else {\n push(\"未登录\", null, 1);\n}\npush(\"--------书库--------\", null, 1);\nupsort = Sort_() ? `/all{{Sort_()}}.html?page={{page}}` : `/all/order/update_time+desc.html?page={{page}}`;\npush(\"最近更新\", upsort, 0.45);\npush(\"原创\", \"/original.html?page={{page}}\", 0.45);\npush(\"排行\", null, 1);\nvar src = java.ajax(`${GetUL()}/all/order/hits+desc.html`);\nvar ph = org.jsoup.Jsoup.parse(src).select('.paihang_ds a');\nph.forEach(ta => {\n nam = ta.text();\n ul = ta.attr('href')\n push(nam, ul, 0.45);\n})\npush(\"分类\", null, 1);\nvar tag = org.jsoup.Jsoup.parse(src).select('.fenlei_ds a');\ntag.forEach(ta => {\n nam = ta.text();\n ul = String(ta.attr('href')).replace(/$/, \"?page={{page}}\").replace(/lists/, \"all/id\").replace(/\\.html/, `{{Sort_()}}$&`);\n push(nam, ul, 0.25);\n})\nJSON.stringify(result);",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "jsLib": "nk = \"PGh0bWw+CjxoZWFkPgogICAgPG1ldGEgaHR0cC1lcXVpdj0icmVmcmVzaCIgY29udGVudD0iMDt1cmw9bGVnYWRvOi8vaW1wb3J0L1NvdXJjZT9zcmM9aHR0cHM6Ly9mYXN0bHkuanNkZWxpdnIubmV0L2doL3llemVjaHVhbmRsL3NvdXJjZS1sZWdhZG9AbWFpbi9zb3VyY2Uv54ix5Li95Lid5Lmm5bGLLmpzb24iPgogICAgPHN0eWxlPgogICAgICAgIC5ub3RpY2UtYm94IHsKICAgICAgICAgICAgZGlzcGxheTogZmxleDsgLyog5ZCv55SoRmxleGJveOW4g+WxgCAqLwogICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICAgICAgaGVpZ2h0OiAxMDB2aDsKICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CiAgICA8ZGl2IGNsYXNzPSJub3RpY2UtYm94Ij4KICAgICAgICA8cD7oi6Xot7PovazmnKroh6rliqjmiafooYw8YnI+CiAgICAgICAgPGEgaHJlZj0ibGVnYWRvOi8vaW1wb3J0L1NvdXJjZT9zcmM9aHR0cHM6Ly9mYXN0bHkuanNkZWxpdnIubmV0L2doL3llemVjaHVhbmRsL3NvdXJjZS1sZWdhZG9AbWFpbi9zb3VyY2Uv54ix5Li95Lid5Lmm5bGLLmpzb24iPuivt+aJi+WKqOeCueWHu+atpOWkhDwvYT48L3A+CiAgICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+\";\n\nfunction Sort_() {\n\tconst { source } = this\nvar\tsgv = JSON.parse(source.getVariable());\nvar sorts = [\n\"/order/update_time+desc\",\n\"/order/hits+desc\",\n\"/order/word+desc\"\n];\nvar sort = sgv.s ? sorts[sgv.s - 1] : \"\";\nreturn sort;\n}\n\nfunction GetUL() {\n\tconst { source } = this\n\tlet sourceul = JSON.parse(source.getVariable()).sourl;\n\treturn sourceul;\n}\n\n//计算最终value值\nfunction getval(kk) {\n\t const { java } = this\n var val = \"\";\n for (var i = 0; i <= kk.length - 1; i++) {\n var str = kk.charAt(i);\n var code = str.charCodeAt();\n val += parseInt(code) + 1;\n }\n valu = java.md5Encode(val);\n return valu;\n}\n\nfunction timeov(times) {\n const date = new Date(times);\n const year = date.getFullYear();\n const month = String(date.getMonth() + 1).padStart(2, '0');\n const day = String(date.getDate()).padStart(2, '0');\n const hours = String(date.getHours()).padStart(2, '0');\n const minutes = String(date.getMinutes()).padStart(2, '0');\n const seconds = String(date.getSeconds()).padStart(2, '0');\n \n return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\n//自定义书架\nfunction booklist() {\n\tconst { java , source } = this\n let all = JSON.parse(source.getVariable()).booklist;\n let list = String(JSON.stringify(all));\n let hm = \"PCFET0NUWVBFIGh0bWw+PGh0bWwgbGFuZz16aC1DTj48aGVhZD48bWV0YSBjaGFyc2V0PVVURi04PjxtZXRhIG5hbWU9dmlld3BvcnQgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MSI+PHRpdGxlPuacrOWcsOS5puaetjwvdGl0bGU+PHN0eWxlPmJvZHl7bWFyZ2luOjA7cGFkZGluZzoyMHB4O2ZvbnQtZmFtaWx5Oi1hcHBsZS1zeXN0ZW0sc3lzdGVtLXVpLCJTZWdvZSBVSSIsUm9ib3RvLHNhbnMtc2VyaWY7YmFja2dyb3VuZDojZjVmNWY3fS5jb3JuZXItdGV4dHtwb3NpdGlvbjpmaXhlZDt0b3A6MjBweDtsZWZ0OjIwcHg7Zm9udC1zaXplOi45ZW07Y29sb3I6Izg2ODY4YjtvcGFjaXR5Oi45O3otaW5kZXg6MTAwO2JhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwuOCk7cGFkZGluZzo1cHggMTBweDtib3JkZXItcmFkaXVzOjZweDtiYWNrZHJvcC1maWx0ZXI6Ymx1cigycHgpO2JveC1zaGFkb3c6MCAycHggNHB4IHJnYmEoMCwwLDAsLjA1KX0uc2hlbGYtY29udGFpbmVye21heC13aWR0aDoxMjAwcHg7bWFyZ2luOjAgYXV0bztiYWNrZ3JvdW5kOiNmZmY7Ym9yZGVyLXJhZGl1czoxOHB4O2JveC1zaGFkb3c6MCA0cHggMTJweCByZ2JhKDAsMCwwLC4xKTtwYWRkaW5nOjMwcHg7cG9zaXRpb246cmVsYXRpdmV9LnNoZWxmLXRpdGxle3RleHQtYWxpZ246Y2VudGVyO2ZvbnQtc2l6ZToyLjVyZW07Y29sb3I6IzFkMWQxZjttYXJnaW46MCAwIDMwcHggMDtwYWRkaW5nLWJvdHRvbToyMHB4O2JvcmRlci1ib3R0b206MnB4IHNvbGlkICNmMGYwZjB9LmdyaWR7ZGlzcGxheTpncmlkO2dyaWQtdGVtcGxhdGUtY29sdW1uczpyZXBlYXQoYXV0by1maWxsLG1pbm1heCgyNTBweCwxZnIpKTtnYXA6MjVweDtwYWRkaW5nOjE1cHggMH0uYm9vay1pdGVte2JhY2tncm91bmQ6I2ZmZjtib3JkZXItcmFkaXVzOjEycHg7cGFkZGluZzoxOHB4O2JveC1zaGFkb3c6MCAycHggOHB4IHJnYmEoMCwwLDAsLjA4KTt0cmFuc2l0aW9uOnRyYW5zZm9ybSAuMnMsYm94LXNoYWRvdyAuMnM7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn0uYm9vay1pdGVtOmhvdmVye3RyYW5zZm9ybTp0cmFuc2xhdGVZKC0zcHgpO2JveC1zaGFkb3c6MCA0cHggMTZweCByZ2JhKDAsMCwwLC4xMil9LmNvdmVyLWNvbnRhaW5lcnt3aWR0aDoxMDAlO2FzcGVjdC1yYXRpbzozLzQ7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLWJvdHRvbToxNXB4fS5jb3Zlci1pbWd7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtvYmplY3QtZml0OmNvbnRhaW47Ym9yZGVyLXJhZGl1czo4cHh9LmJvb2stbmFtZXtmb250LXNpemU6MS4xZW07bWFyZ2luOjAgMCA4cHggMDtjb2xvcjojMWQxZDFmO2ZvbnQtd2VpZ2h0OjYwMH0uYm9vay1hdXRob3J7Zm9udC1zaXplOi45ZW07Y29sb3I6IzY2NjttYXJnaW4tYm90dG9tOjEycHh9LmJvb2staW5mb3tmb250LXNpemU6LjllbTtjb2xvcjojODY4NjhiO2xpbmUtaGVpZ2h0OjEuNTtoZWlnaHQ6NC41ZW07b3ZlcmZsb3c6aGlkZGVuO2Rpc3BsYXk6LXdlYmtpdC1ib3g7LXdlYmtpdC1saW5lLWNsYW1wOjM7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsO2ZsZXgtZ3JvdzoxfS5jb3B5cmlnaHQtYWxlcnR7cG9zaXRpb246Zml4ZWQ7dG9wOjIwcHg7bGVmdDoyMHB4O3otaW5kZXg6OTk5O2NvbG9yOiNmNDQ7Zm9udC1zaXplOjE4cHg7Zm9udC13ZWlnaHQ6NzAwO2JhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwuOSk7cGFkZGluZzo4cHggMTVweDtib3JkZXItcmFkaXVzOjZweDtib3gtc2hhZG93OjAgMnB4IDhweCByZ2JhKDI1NSw2OCw2OCwuMyk7YW5pbWF0aW9uOnNoYWtlIC44cyBlYXNlfUBrZXlmcmFtZXMgc2hha2V7MCUsMTAwJXt0cmFuc2Zvcm06dHJhbnNsYXRlWCgwKX0yNSV7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTVweCl9NzUle3RyYW5zZm9ybTp0cmFuc2xhdGVYKDVweCl9fS5zaGVsZi1jb250YWluZXJ7bWF4LXdpZHRoOjEyMDBweDttYXJnaW46MCBhdXRvO2JhY2tncm91bmQ6I2ZmZjtib3JkZXItcmFkaXVzOjE4cHg7Ym94LXNoYWRvdzowIDRweCAxMnB4IHJnYmEoMCwwLDAsLjEpO3BhZGRpbmc6MzBweDttYXJnaW4tdG9wOjUwcHh9PC9zdHlsZT48Ym9keT48ZGl2IGNsYXNzPW9yaWdpbmFsLWF1dGhvcj7mupDkvZzogIXvvJrlpJzms73lt508L2Rpdj48ZGl2IGNsYXNzPXNoZWxmLWNvbnRhaW5lcj48aDEgY2xhc3M9c2hlbGYtdGl0bGU+5pys5Zyw5Lmm5p62PC9oMT48ZGl2IGlkPWJvb2tzaGVsZj48L2Rpdj48L2Rpdj48c2NyaXB0PuKXjuWPguiAg+agh+ivhuKXjgogICAgICAgIGZ1bmN0aW9uIHJlbmRlckJvb2tzaGVsZigpe2NvbnN0IGNvbnRhaW5lcj1kb2N1bWVudFsiZ2V0RWxlbWVudEJ5SWQiXSgnYm9va3NoZWxmJyk7bGV0IGh0bWw9Jyc7aWYobGlzdFsibGVuZ3RoIl09PT0gMCl7aHRtbD0gJzxkaXYgY2xhc3M9XCJlbXB0eS1tZXNzYWdlXCI+XHU2NjgyXHU2NWY2XHU2Y2ExXHU2NzA5XHU0ZTY2XHU3YzRkXHVmZjBjXHU1ZmViXHU1M2JiXHU2ZGZiXHU1MmEwXHU1NDI3XHVmZjAxPC9kaXY+J31lbHNlIHtodG1sPSAnPGRpdiBjbGFzcz1cImdyaWRcIj4nO2xpc3RbInJldmVyc2UiXSgpWyJmb3JFYWNoIl0oKGJvb2spPT57aHRtbCs9ICgiXHgwRFx4MEEgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYm9vay1pdGVtXCI+XHgwRFx4MEEgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvdmVyLWNvbnRhaW5lclwiPlx4MERceDBBICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIiIrYm9va1siaW1nIl0rIlwiIGFsdD1cIiIrYm9va1sibmFtZSJdKyJcIiBjbGFzcz1cImNvdmVyLWltZ1wiPlx4MERceDBBICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Plx4MERceDBBICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz1cImJvb2stbmFtZVwiPiIrYm9va1sibmFtZSJdKyI8L2gzPlx4MERceDBBICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJib29rLWF1dGhvclwiPiIrYm9va1siYXV0aG9yIl0rIjwvZGl2Plx4MERceDBBICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiYm9vay1pbmZvXCI+Iitib29rWyJpbmZvIl0rIjwvcD5ceDBEXHgwQSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiIitib29rWyJ1cmwiXSsiXCIgY2xhc3M9XCJib29rLWxpbmtcIj5cdTdhY2JcdTUzNzNcdTk2MDVcdThiZmI8L2E+XHgwRFx4MEEgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4iKX0pO2h0bWwrPSAnPC9kaXY+J307Y29udGFpbmVyWyJpbm5lckhUTUwiXT0gaHRtbH1mdW5jdGlvbiBjaGVja0NvcHlyaWdodCgpe2NvbnN0IGF1dGhFbGVtZW50PWRvY3VtZW50WyJxdWVyeVNlbGVjdG9yIl0oJy5vcmlnaW5hbC1hdXRob3InKTtjb25zdCBpc1ZhbGlkPWF1dGhFbGVtZW50JiYgYXV0aEVsZW1lbnRbInRleHRDb250ZW50Il1bInRyaW0iXSgpPT09ICdcdTZlOTBcdTRmNWNcdTgwMDVcdWZmMWFcdTU5MWNcdTZjZmRcdTVkZGQnO2lmKCFpc1ZhbGlkJiYgICFkb2N1bWVudFsicXVlcnlTZWxlY3RvciJdKCcuY29weXJpZ2h0LWFsZXJ0Jykpe2NvbnN0IGFsZXJ0PWRvY3VtZW50WyJjcmVhdGVFbGVtZW50Il0oJ2RpdicpO2FsZXJ0WyJjbGFzc05hbWUiXT0gJ2NvcHlyaWdodC1hbGVydCc7YWxlcnRbInRleHRDb250ZW50Il09ICdcdTk2MzJcdTc2ZDdcdTc1MjhcdTI1Y2VcdTZlOTBcdTRmNWNcdTgwMDVcdTRlM2FcdTU5MWNcdTZjZmRcdTVkZGQnO2RvY3VtZW50WyJib2R5Il1bImFwcGVuZENoaWxkIl0oYWxlcnQpfX13aW5kb3dbImFkZEV2ZW50TGlzdGVuZXIiXSgnRE9NQ29udGVudExvYWRlZCcsKCk9PntyZW5kZXJCb29rc2hlbGYoKTtjaGVja0NvcHlyaWdodCgpO3NldEludGVydmFsKGNoZWNrQ29weXJpZ2h0LDEwMDAwKX0pPC9zY3JpcHQ+\"\n let cc = java.base64Decode(hm);\n let html = String(cc).replace(/◎参考标识◎/,`const list = ${list}`);\n //java.log(html);\nreturn java.base64Encode(html);;\n}\n\ncodesvg = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIAogICAgIHZpZXdCb3g9IjAgMCA3MDAgMjAwIiAKICAgICBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJub25lIgogICAgIHN0eWxlPSJ3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlOyI+CiAgPHJlY3Qgd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwJSIgZmlsbD0id2hpdGUiLz4KICAKICA8IS0tIOmhtumDqOagh+mimCAtLT4KICA8dGV4dCB4PSI1MCUiIHk9IjQwIiAKICAgICAgICBmb250LXNpemU9IjIwIiAKICAgICAgICBmb250LXdlaWdodD0iYm9sZCIgCiAgICAgICAgdGV4dC1hbmNob3I9Im1pZGRsZSIgCiAgICAgICAgZmlsbD0iIzAwMCI+6YCJ5oup5Y+R6YCB57G75Z6LPC90ZXh0PgogIAogIDwhLS0g6K+E6K665qih5Z2XIC0tPgogIDx0ZXh0IHg9IjI1JSIgeT0iOTAiIAogICAgICAgIGZvbnQtc2l6ZT0iMTYiIAogICAgICAgIGZvbnQtd2VpZ2h0PSJib2xkIiAKICAgICAgICB0ZXh0LWFuY2hvcj0ibWlkZGxlIiAKICAgICAgICBmaWxsPSIjMDAwIj7or4Torro8L3RleHQ+CiAgPHRleHQgeD0iMjUlIiB5PSIxMTAiIAogICAgICAgIGZvbnQtc2l6ZT0iMTQiIAogICAgICAgIGZvbnQtd2VpZ2h0PSJib2xkIiAKICAgICAgICB0ZXh0LWFuY2hvcj0ibWlkZGxlIiAKICAgICAgICBmaWxsPSIjMDAwIj4o5aGr5YaZIuivhOiuuiIpPC90ZXh0PgogIAogIDwhLS0g5Zue5aSN5qih5Z2XIC0tPgogIDx0ZXh0IHg9Ijc1JSIgeT0iOTAiIAogICAgICAgIGZvbnQtc2l6ZT0iMTYiIAogICAgICAgIGZvbnQtd2VpZ2h0PSJib2xkIiAKICAgICAgICB0ZXh0LWFuY2hvcj0ibWlkZGxlIiAKICAgICAgICBmaWxsPSIjMDAwIj7lm57lpI08L3RleHQ+CiAgPHRleHQgeD0iNzUlIiB5PSIxMTAiIAogICAgICAgIGZvbnQtc2l6ZT0iMTQiIAogICAgICAgIGZvbnQtd2VpZ2h0PSJib2xkIiAKICAgICAgICB0ZXh0LWFuY2hvcj0ibWlkZGxlIiAKICAgICAgICBmaWxsPSIjMDAwIj4o5aGr5YaZIkBpZCIpPC90ZXh0PgogIAogIDwhLS0g5bqV6YOo5L+h5oGvIC0tPgogIDx0ZXh0IHg9IjUwJSIgeT0iMTgwIiAKICAgICAgICBmb250LXNpemU9IjE0IiAKICAgICAgICBmb250LXdlaWdodD0iYm9sZCIgCiAgICAgICAgdGV4dC1hbmNob3I9Im1pZGRsZSIgCiAgICAgICAgZmlsbD0iIzAwMCI+5qW85bGCaWTnroDku4vmnIk8L3RleHQ+Cjwvc3ZnPg==\"",
    "lastUpdateTime": 1749049456733,
    "loginUi": "[ \n {\n name: \"作者Github\",\n type: \"button\",\n action: \"java.startBrowser('https://github.com/yezechuandl/source-legado','Github');\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n },\n {\n \"name\": \"更新书源\",\n \"type\": \"button\",\n \"action\": \"update()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"更新日志【简】\",\n \"type\": \"button\",\n \"action\": \"Updatelog()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"获取接口\",\n \"type\": \"button\",\n \"action\": \"Geturls()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n },\n {\n \"name\": \"接口1\",\n \"type\": \"button\",\n \"action\": \"Puturl(0)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"接口2\",\n \"type\": \"button\",\n \"action\": \"Puturl(1)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"接口3\",\n \"type\": \"button\",\n \"action\": \"Puturl(2)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"接口4\",\n \"type\": \"button\",\n \"action\": \"Puturl(3)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"用户名/邮箱\",\n \"type\": \"text\"\n },\n {\n \"name\": \"密码\",\n \"type\": \"password\"\n },\n {\n \"name\": \"注册\",\n \"type\": \"button\",\n \"action\": \"reg()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.25\n }\n },\n {\n \"name\": \"登录\",\n \"type\": \"button\",\n \"action\": \"Login()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.25\n }\n },\n {\n \"name\": \"登出\",\n \"type\": \"button\",\n \"action\": \"out()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.25\n }\n },\n {\n \"name\": \"◀◎展示登录信息◎▶\",\n \"type\": \"button\",\n \"action\": \"show()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n },\n {\n \"name\": \"邀请码【⚠️生成一个需消耗50积分】\",\n \"type\": \"button\",\n \"action\": \"\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n },\n {\n \"name\": \"💡生成邀请码\",\n \"type\": \"button\",\n \"action\": \"InvitationCode(true)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.25\n }\n },\n {\n \"name\": \"📜打印邀请码\",\n \"type\": \"button\",\n \"action\": \"InvitationCode()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.25\n }\n },\n {\n \"name\": \"评论展示开关\",\n \"type\": \"button\",\n \"action\": \"\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n },\n {\n \"name\": \"开启\",\n \"type\": \"button\",\n \"action\": \"Comment(0)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"禁用\",\n \"type\": \"button\",\n \"action\": \"Comment(1)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"点击切换分类排序方式\",\n \"type\": \"button\",\n \"action\": \"\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n },\n {\n \"name\": \"默认\",\n \"type\": \"button\",\n \"action\": \"Tgch(0)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"更新时间\",\n \"type\": \"button\",\n \"action\": \"Tgch(1)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"人气\",\n \"type\": \"button\",\n \"action\": \"Tgch(2)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"字数\",\n \"type\": \"button\",\n \"action\": \"Tgch(3)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"◎↓网络书架功能区↓◎\",\n \"type\": \"button\",\n \"action\": \"\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n },\n {\n \"name\": \"书籍ID\",\n \"type\": \"text\"\n },\n {\n \"name\": \"添加网络书架\",\n \"type\": \"button\",\n \"action\": \"AFBook(1)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"移除网络书架\",\n \"type\": \"button\",\n \"action\": \"AFBook(0)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"打开书架\",\n \"type\": \"button\",\n \"action\": \"BookShelf()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n },\n {\n \"name\": \"◎↓本地书架功能区↓◎\",\n \"type\": \"button\",\n \"action\": \"\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n },\n {\n \"name\": \"放置\",\n \"type\": \"button\",\n \"action\": \"bookinto()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.2\n }\n },\n {\n \"name\": \"删除\",\n \"type\": \"button\",\n \"action\": \"bookmove('one')\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.2\n }\n },\n {\n \"name\": \"⚠️清空⚠️\",\n \"type\": \"button\",\n \"action\": \"bookmove('all')\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.2\n }\n },\n {\n \"name\": \"打开本地书架\",\n \"type\": \"button\",\n \"action\": \"inBookShelf()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n }\n]",
    "loginUrl": "var r = {\n \"s\": 0,\n \"co\": 0,\n \"urls\": [],\n \"sourl\": \"https://alicesw.com\",\n \"booklist\": []\n};\nif (!String(source.getVariable())) {\n source.setVariable(JSON.stringify(r, null, \"\\t\"));\n java.toast('已初始化，使用默认站源');\n}\nvar sgv = JSON.parse(source.getVariable());\nvar sg = source.get(\"list\");\nvar ul = GetUL();\n\nfunction reg() {\n java.startBrowser(`${ul}/user/user/reg.html`, \"注册账号\");\n}\n\nfunction Comment(c) {\n let points = [\"开启\", \"禁用\"];\n if (c === sgv.co) {\n java.toast(`\\n当前已【${points[c]}】评论区\\n无需重复选择`);\n } else {\n sgv.co = c;\n source.setVariable(JSON.stringify(sgv, null, \"\\t\"));\n java.toast(`\\n评论区已【${points[c]}】\\n刷新详情页生效`);\n }\n}\n\nfunction Updatelog() {\n let cont = String(source.variableComment);\n let log = java.base64Decode(cont);\n java.longToast(\"\\n\" + log);\n}\n\nfunction login() {}\n\nfunction Tgch(o) {\n let sort = [\"默认\", \"更新时间\", \"人气\", \"字数\"]\n if (sgv.s === o) {\n text = `重复选择\\n当前排序方式已是【${sort[o]}】`;\n } else {\n sgv.s = o;\n source.setVariable(JSON.stringify(sgv, null, \"\\t\"));\n text = `已切换发现排序方式为【${sort[o]}】`;\n }\n java.toast(\"\\n\" + text);\n}\n\nfunction Geturls() {\n let sgv1 = sgv.urls;\n sgv1.length = 0;\n try {\n let res = org.jsoup.Jsoup.parse(java.ajax('https://alicesw.click/')).select('.button-box');\n sgv1.push(String(res[0].attr('href')).replace(/\\/?$/,\"\"));\n let src = String(java.ajax(res[1].attr('href')));\n let ul = org.jsoup.Jsoup.parse(src).select('a').attr('href');\n if (String(ul)) {\n sgv1.push(ul)\n }\n //数组去重\n const seen = new Set();\n let uli = src.matchAll(/url=(https[^\"]+)\\/?\\\"/g);\n for (let match of uli) {\n const url = match[1];\n if (!seen.has(url)) {\n sgv1.push(url);\n seen.add(url);\n }\n }\n source.setVariable(JSON.stringify(sgv, null, \"\\t\"));\n if (sgv1.length >= 2) {\n java.toast(`获取成功，共获取到${sgv1.length}个接口\\n┎┅┅┅┅┅┅┅┅┅┅┅┅┒\\n${sgv1.join('\\n')}\\n┖┅┅┅┅┅┅┅┅┅┅┅┅┚`);\n } else {\n java.toast('获取失败，请重试或检查网络状况');\n }\n } catch (e) {\n java.log(e);\n java.toast('未知错误，请使用最新beta测试版');\n }\n}\n\nfunction Puturl(e) {\n if (sgv.urls.length > 0 && e + 1 <= sgv.urls.length) {\n sgv.sourl = sgv.urls[e];\n sgv.booklist.forEach(item => {\n \titem.img = item.img.replace(/https?:\\/\\/[^\\/]+/,sgv.urls[e]);\n \titem.url = item.url.replace(/https?:\\/\\/[^\\/]+/,sgv.urls[e]);\n \t});\n source.setVariable(JSON.stringify(sgv, null, \"\\t\"));\n //切换接口后重新设置cookie，保持登录状态\n let Cookie = cookie.getCookie(sgv.urls[e]);\n if (!/lf_user_auth/.test(Cookie) && source.getLoginHeader()) {\n let ck = source.getLoginHeaderMap()['Cookie']\n cookie.setCookie(sgv.urls[e], ck);\n }\n let stime = new Date().getTime();\n let sr = java.ajax(sgv.urls[e]);\n let etime = new Date().getTime();\n let speedtime = (etime - stime) / 1000;\n let point = /(Connection reset|Failed to connect)/.test(sr) ? `\\n【接口${e+1}：${sgv.urls[e]}】\\n已失效，请检查网络状况或切换其他接口` : `已设置接口为：\\n${sgv.urls[e]}\\n♦解析用时${speedtime}秒♦`;\n java.toast(point);\n } else if (sgv.urls.length === 0) {\n java.toast('\\n当前没有接口，请获取后选择');\n } else if (e + 1 > sgv.urls.length) {\n java.toast(`暂无第${e+1}接口`);\n }\n}\n\nfunction Login() {\n cookie.removeCookie(ul);\n const loginul = `${ul}/user/user/login.html`;\n const codeul = `${ul}/user/user/verify.html`;\n\n const na = result['用户名/邮箱'];\n const pa = result['密码']\n if (String(na && pa)) {\n let phpid = java.get(codeul, {}).header(\"set-cookies\");\n java.log(phpid);\n let code = java.getVerificationCode(codeul);\n let body = `username=${na}&password=${pa}&code=${code}`\n let cook = java.post(loginul, body, {\n \"x-requested-with\": \"XMLHttpRequest\",\n \"Cookie\": phpid\n });\n let ck = String(cook.cookies()).replace(/[{}]/g, \"\").replace(\",\", \"; \");\n //java.log(String(ck))\n let headers = JSON.stringify({\n \"Cookie\": ck\n });\n let usercode = JSON.parse(cook.body()).msg\n java.toast(usercode);\n if (ck) {\n source.putLoginHeader(headers);\n cookie.replaceCookie(GetUL(), ck);\n } else {\n source.removeLoginHeader();\n cookie.removeCookie(GetUL());\n }\n }\n}\n\nfunction out() {\n source.removeLoginHeader();\n cookie.removeCookie(GetUL());\n java.toast(\"已退出登录状态\");\n}\n\nfunction show() {\n let jc = source.getLoginHeaderMap();\n let us, id, codes\n if (jc) {\n let inf = decodeURIComponent(jc.get(\"Cookie\"));\n let info = decodeURIComponent(inf).match(/\\{[\\s\\S]+\\}/)[0];\n //java.log(info);\n us = JSON.parse(info)['username'];\n id = JSON.parse(info)['uid'];\n codes = \"✔️已登录\";\n } else {\n us = \"无\";\n id = \"无\";\n codes = \"❌未登录\";\n }\n let txt = `\\n◎用户：${us}◎\\n◎用户ID：${id}◎\\n◎登录状态：${codes}◎`\n java.longToast(txt);\n}\n\nfunction InvitationCode(c) {\n let text = \"\";\n if (source.getLoginHeaderMap()) {\n if (c) {\n java.post(ul + \"/user/user/createinvitecode.html\", \"create_num=1\", {\n \"Cookie\": source.getLoginHeaderMap().get(\"Cookie\")\n });\n\n text += \"\\n已消耗50积分生成一个邀请码\";\n }\n let verify_list = org.jsoup.Jsoup.parse(java.ajax(ul + \"/user/user/invitecode\")).select('.verify_list .item');\n java.log(\"\\n\" + String(verify_list.html()).replace(/<[^>]+?>\\s*|复制| (?!\\d)/g, \"\"));\n text += \"\\n邀请码已打印至源日志\";\n } else {\n text += \"未登录，请登录后获取\";\n }\n java.toast(text);\n}\n\nfunction update(u) {\n sourcetime = String(source.lastUpdateTime);\n const upul = \"https://fastly.jsdelivr.net/gh/yezechuandl/source-legado@main/source/爱丽丝书屋.json\"\n let cc = java.ajax(upul)\n let uptime = String(JSON.parse(cc)[0].lastUpdateTime)\n if (Number(uptime) > Number(sourcetime)) {\n java.toast(\"检测到更新，正在跳转……\");\n Packages.java.lang.Thread.sleep(2000);\n java.startBrowser('data:text/html;base64,' + nk, '更新');\n } else if (Number(uptime) <= Number(sourcetime) && u != \"发现\") {\n java.toast(`\\n本地书源版本较新，无需更新。\\n本地书源编辑时间：${timeov(Number(sourcetime))}\\n网络书源更新时间：${timeov(Number(uptime))}`);\n }\n}\n\nfunction AFBook(ta) {\n let info = result['书籍ID']\n if (String(info) && source.getLoginHeaderMap()) {\n let bookid = info\n java.log(bookid);\n try {\n let url\n if (ta) {\n url = `${ul}/user/bookshelf/add?novel_id=${bookid}`\n } else {\n\n let src = \"\"\n for (page = 1;; page++) {\n let sr = java.ajax(`${ul}/user/bookshelf?page=${page}`);\n if (!/书架空空如也/.test(sr)) {\n src += sr + \"\\n\";\n } else {\n break;\n }\n }\n //java.log(\"书籍在书架第\"+page+\"页\");\n let booklist = src.match(/\\/novel\\/\\d+\\.html/g);\n let dfid = src.match(/\\/user\\/bookshelf\\/del[^\"]+/g);\n for (i in booklist) {\n if (booklist[i].includes(bookid)) {\n ra = dfid[i];\n break;\n }\n }\n url = GetUL() + ra;\n }\n let msg = java.get(url, {\n \"x-requested-with\": \"XMLHttpRequest\"\n });\n let point = JSON.parse(msg.body()).msg\n java.toast(point);\n } catch (error) {\n //java.log(error);\n java.toast('无效操作');\n }\n } else if (!String(info)) {\n java.toast(\"\\n未填入书籍id，请进书籍详情页，或者手动填写。\");\n } else if (!source.getLoginHeaderMap()) {\n java.toast(\"未登录，请登录后使用\");\n }\n}\n\nfunction BookShelf() {\n if (source.getLoginHeaderMap()) {\n java.startBrowser(`${ul}/user/bookshelf/`, \"书架\");\n } else {\n java.toast(\"未登录，请登录后再使用此功能。\");\n }\n}\n\nfunction inBookShelf() {\n htm = booklist();\n java.startBrowser(\"data:text/html;base64,\" + htm, \"书架\");\n}\n//放置书籍信息至书源变量\nfunction bookinto() {\n if (String(sg)) {\n let sgv1 = sgv.booklist;\n let sg1 = JSON.parse(sg);\n let exists = sgv1.some(item => {\n return Number(item.ID) === Number(sg1.ID);\n });\n if (!exists) {\n sgv1.push(sg1);\n source.setVariable(JSON.stringify(sgv, null, \"\\t\"));\n java.toast(\"添加成功\");\n } else {\n java.toast(\"书籍已存入本地书架中\");\n }\n } else {\n java.toast('🚫请进入书籍详情页后操作，或者刷新试试')\n }\n}\n\nfunction bookmove(a) {\n try {\n let sgv1 = sgv.booklist;\n let sg1 = JSON.parse(sg);\n if (a == \"all\") {\n source.put(\"list\", '')\n sgv1.length = 0\n source.setVariable(JSON.stringify(sgv, null, \"\\t\"));\n java.toast('已清空本地书架');\n } else {\n let index = sgv1.findIndex(item => Number(item.ID) === Number(sg1.ID));\n if (index != -1) {\n sgv1.splice(index, 1);\n source.setVariable(JSON.stringify(sgv, null, \"\\t\"));\n java.toast(`已从本地删除该书籍。\\n书籍ID：${sg1.ID}`);\n } else {\n java.toast('书籍不在本地书架中')\n }\n }\n } catch(err) {\n java.log(\"错误日志\" + err);\n java.toast('🚫请进入书籍详情页后操作，或者刷新试试');\n }\n}",
    "respondTime": 190259,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "canReName": "1",
      "coverUrl": "@get:{i}\n@js: /^https?/.test(result) ? result : GetUL() + result;",
      "init": "<js>\nvar bookid = baseUrl.match(/novel\\/(\\d+)/)[1];\n//书评发送\nconst bookva = book.getVariable(\"custom\");\nif (bookva != false && bookva !== \"\" && source.getLoginHeader()) {\n const commenturl = `${GetUL()}/home/comment/add.html`;\n let body = `content=${bookva}&type=novel&mid=${bookid}`\n try {\n let code = String(java.getVerificationCode(`data:image/svg+xml;base64,${codesvg}`));\n if (code == \"评论\" || /^@\\d+$/.test(code)) {\n//java.log(code);\nif (/^@\\d+$/.test(code)) {\n\t let contid = code.match(/(\\d+)/)[1];\n body += `&pid=${contid}`\n}\n//java.log(body);\n let headers = {\n \"x-requested-with\": \"XMLHttpRequest\"\n }\n let ok = java.post(commenturl, body, headers).body();\n java.toast(JSON.parse(ok).msg);\n book.putCustomVariable(\"\");\n } else {\n \tPackages.java.lang.Thread.sleep(40);\n \tjava.toast('请按图片要求填写');\n \tbook.putCustomVariable(\"\");\n \t}\n } catch(err) {\n \tjava.log(err);\n \tbook.putCustomVariable(\"\");\n \t}\n } else if(bookva != false && bookva !== \"\" && !source.getLoginHeader()) {\n\tjava.toast(\"未登录，请登录后操作\");\n\tbook.putCustomVariable(\"\");\n}\n\ntry{\nsourceinfo = source.getLoginInfoMap();\nsourceinfo['书籍ID'] = bookid;\nif (bookid) {\n\tsource.putLoginInfo(JSON.stringify(sourceinfo));\n\t}\n$ = _ => java.getString(_);\nimg = /^https?/.test($('[property$=image]@content')) ? $('[property$=image]@content') : GetUL() + $('[property$=image]@content');\nlist = {\n\t \"ID\": bookid,\n \"img\": img,\n \"name\": $('[property$=book_name]@content'),\n \"author\": $('[property$=author]@content'),\n \"info\": $('[property$=description]@content').slice(0,45),\n \"url\": \"legado://import/addToBookshelf?src=\" + baseUrl\n }\nsource.put(\"list\",JSON.stringify(list));\n} catch(err) {\n\tjava.log(\"登录UI未初始化保存数据：\"+err);\n\t}\nsrc;\n</js>\n@put:{\"n\":\"[property$=book_name]@content\",\n\"a\":\"[property$=author]@content\",\n\"t\":\"class.fix@p.2:3@text##.*[：:]\",\n\"k\":\"class.tg@span@text##\\n##,\",\n\"i\":\"[property$=image]@content\",\n\"l\":\"[property$=latest_chapter_name]@content\",\n\"m\":\"text.查看全部章节@href\",\n\"z\":\"class.fix@p.4@text##.*[：:]\",\n\"o\":\"[property$=description]@content\"}",
      "intro": "&nbsp;&nbsp;📖书籍ID：{{baseUrl.match(/novel\\/(\\d+)/)[1]}}\n☑当前站源：{{GetUL()}}\n🏷️标签：@get:{k}\n📜简介：@get:{o}\n<js>\nconst Bookid = baseUrl.match(/novel\\/(\\d+)/)[1];\nconst contul = `${GetUL()}/index.php?s=/Home/comment/lists/id/${Bookid}/type/novel/limit/5/size/12`\nvar CommentNur = JSON.parse(source.getVariable()).co;\nvar cont = \"\";\nif (!CommentNur) {\n var src = java.ajax(contul);\n java.setContent(src);\n var list = java.getElement('//script[@src=\"/public/static/jquery/jquery.min.js\"]/following-sibling::script[1]');\n var lists = JSON.parse(String(list[0]).match(/var\\s*trre=([\\s\\S]+),page_num/)[1]);\n //java.log(JSON.stringify(lists,null,\"\\t\"));\n\n cont += \"🔻评论区：\\n❗️右上角书籍变量填入评论后刷新详情页发送评论。❗️\\n\";\n if (lists.length > 0) {\n if (source.getLoginHeader()) {\n let jc = source.getLoginHeaderMap();\n let inf = decodeURIComponent(jc.get(\"Cookie\"));\n let info = decodeURIComponent(inf).match(/\\{[\\s\\S]+\\}/)[0];\n let myuid = JSON.parse(info)['uid'];\n //处理我的评论数据\n var myComments = [];\n function collectMyComments(comment, parentPath) {\n let floor = parentPath ? `${parentPath}-${comment.floorIndex}` : comment.floorIndex;\n if (comment.uid === Number(myuid)) {\n myComments.push({\n id: comment.id,\n username: comment.user.username,\n group: comment.user.group,\n floor: `【${floor}楼】`,\n time: timeov(comment.create_time * 1000),\n content: comment.content\n });\n }\n if (comment._?.forEach) {\n comment._.forEach((child, index) => {\n child.floorIndex = index + 1;\n collectMyComments(child, floor);\n });\n }\n }\n lists.forEach((c, i) => {\n c.floorIndex = i + 1;\n collectMyComments(c, \"\");\n });\n //java.log(JSON.stringify(myComments));\n var mySection = \"=== 我的评论（共找到\" + myComments.length + \"条） ===\\n\\n\";\n myComments.forEach(m => {\n mySection += `┌【ID：${m.id}】| 👤${m.username} | ${m.group} | ${m.time}\\n└评论：${m.content}\\n${m.floor}\\n `;\n });\n } else {\n mySection = \"\";\n }\n\n //处理全部评论数据\n function buildComments(comment, parentPath, level) {\n let floor = parentPath ? `${parentPath}-${comment.floorIndex}` : comment.floorIndex;\n let indent = ' '.repeat(level);\n let str = `${indent}┌【ID：${comment.id}】|👤${comment.user?.username || \"\"} | ${comment.user?.group || \"已注销用户\"} | ${timeov(comment.create_time * 1000)}\\n` +\n `${indent}└评论：${comment.content}\\n` +\n `${indent}【${floor}楼】\\n\\n`;\n\n if (comment._?.forEach) {\n comment._.forEach((child, index) => {\n child.floorIndex = index + 1;\n str += buildComments(child, floor, level + 1);\n });\n }\n return str;\n }\n\n var allSection = \"=== 全部评论（共\" + lists.length + \"条） ===\\n\\n\";\n lists.forEach((c, i) => {\n c.floorIndex = i + 1;\n allSection += buildComments(c, \"\", 0);\n });\n\n //合并评论数据\n cont += mySection + \"\\n\" + allSection;\n } else {\n cont += \"本书暂时没有评论喔\";\n }\n}\nresult = result + \"\\n\" + cont;\nresult;\n</js>",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}",
      "name": "@get:{n}",
      "tocUrl": "@get:{m}\n@js: GetUL() + result;",
      "wordCount": "@get:{z}"
    },
    "ruleContent": {
      "content": "@js:\nvar url = GetUL();\n//处理强制登录\nvar nn = String(cookie.getCookie(url));\nvar coks = nn.split('; '); \nvar ckk = coks.filter(item => !item \n.startsWith(\"lf_reader_num\")).join('; ');\ncookie.setCookie(url,ckk);\nvar chapterul = java.hexDecodeToString(src);\n\n\njava.log(\"当前阅读进度\"+book.durChapterIndex+\"|已加载进度\"+chapter.index);\n\n\t\n//自动处理验证\nfunction content() {\n let text;\n let html = java.ajax(chapterul);\n if (html.includes(\"滑动验证\")) {\n let headers = {\n \"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\",\n \"Referer\": chapterul\n };\n try {\n let s = html.match(/src=\\\"(\\/huadong[^\"]+)/)[1];\n let sr = java.get(url + s, headers).body()\n eval(sr.match(/(key=\\\".+?,value=\\\"[^;]+?\\;)/)[1]);\n let va = getval(value);\n let codeul = url + sr.match(/([^\"]+yanzheng_huadong\\.php[^\"]+)/)[1] + `${key}&value=${va}`;\n let ck = java.get(codeul, headers);\n java.log(\"验证Cookie：\" + JSON.stringify(ck.cookies()));\n java.toast(\"检测到验证,尝试自动处理……\");\n let tx = java.ajax(chapterul);\n text = java.getString('#chapterContent@html', tx);\n } catch(error) {\n java.log(error);\n text = \"自动验证失败，请重试!\";\n }\n } else {\n text = java.getString('#chapterContent@html', html);\n }\n return text;\n}\n\nlet text;\nif ( Math.abs(chapter.index - book.durChapterIndex) <= 3) {\n text = content();\n} else {\n\t text = \"因网站速率限制，当前预下载超过三章，为避免被封ip，被动停止解析正文。\\n建议调小预下载，保持正常阅读速度，刷新即可重新获取\";\n}\n\n//处理重新获取文本时可能会出现的错误。\nlet retryCount = 0;\nconst maxRetries = 3;\nlet result;\nwhile (retryCount < maxRetries) {\n if (text != false && text !== \"\") {\n result = text;\n break;\n } else {\n \t retryCount++;\n java.toast(`未获取到文本，正在重试...（当前第${retryCount}次重试）`);\n text = content();\n }\n}\nif (retryCount === maxRetries) {\n result = \"重试三次仍未获取到文本，请检查网络状况。\"\n}\nresult;",
      "imageStyle": "DEFAULT",
      "replaceRegex": "##\\n*{{chapter.title}}\\n*"
    },
    "ruleExplore": {
      "author": ".s5@text",
      "bookList": "class.txt-list@li||#list > li",
      "bookUrl": "a.0@href\n@js: GetUL() + result;",
      "coverUrl": "img@src\n@js: /^https?/.test(result) ? result : GetUL() + result;",
      "kind": "span.0@a@span@text||.rightBlock_name@text##\\[|\\]",
      "lastChapter": "[class=spanLi]@text",
      "name": "span.0@a@textNodes||.rightBlock_title@text"
    },
    "ruleSearch": {
      "author": ".s4@text",
      "bookList": "class.txt-list@li!0",
      "bookUrl": "a@href\n@js: GetUL() + result;",
      "checkKeyWord": "我的美母",
      "kind": ".s1@text##\\[|\\]",
      "name": ".s2@text"
    },
    "ruleToc": {
      "chapterList": "class.section-list@a",
      "chapterName": "text",
      "chapterUrl": "href\n<js>\nvar url = GetUL() + result;\nresult = `data:;base64,${java.base64Encode(url)},{\"type\":\"yzc\"}`;\nresult;\n</js>",
      "preUpdateJs": "eval(String(source.loginUrl));\nvar sourceUL = GetUL();\nif (!String(book.bookUrl).includes(sourceUL)) {\n book.bookUrl = String(book.bookUrl).replace(/https?:\\/\\/[^\\/]+/,sourceUL);\n book.tocUrl = String(book.tocUrl).replace(/https?:\\/\\/[^\\/]+/,sourceUL);\n java.toast(\"\\n检测到切换源站，已更新目录链接。\");\n java.refreshTocUrl();\n}"
    },
    "searchUrl": "{{eval(String(source.loginUrl));GetUL();}}/search.html?keyword={{key}}&page={{page}}",
    "variableComment": "ICAgICAgICAg5rqQ5L2c6ICF77yaICDlpJzms73lt50gICAgICAgICAgCiAg6K+355So5pyA5paw5rWL6K+VKGJldGEp54mI6ZiF6K+75L2/55So6K+l5rqQCiAg5pys5Lmm5rqQ5YWN6LS577yM5Lil56aB5YCS5Y2W44CCCiAg5L2/55So6L+H56iL5Lit6YGH5Yiw6Zeu6aKY77yM6K+36IezR2l0aHVi5Y+N6aaI44CCCiAgICAgIOKVkOKVkOKVkOKVkOKVpOKVkOKVkOKVkOKVkOKVkAogIOabtOaWsOaXpeW/lyjov5HmnJ8pCuKUjuKUheKUheKUheKUheKUheKUheKUheKUheKUheKUheKUheKUheKUheKUheKUheKUheKUheKUkgogIOaWsOWinumCgOivt+eggeWKn+iDve+8iOeUn+aIkOS4gOS4qua2iOiAlzUw56ev5YiG77yJLSAyMDI1LjYuNAogIOS8mOWMlumDqOWIhuinhOWImSjmjqXlj6Pojrflj5Yv6ZSZ6K+v5o+Q56S6KSAtIDIwMjUuNS4yOAogIOWIh+aNouaOpeWPo+iHquWKqOabv+aNouacrOWcsOS5puaetuS5puexjemTvuaOpSAtIDIwMjUuNS44CiAg5Y+R546w6aG16Z2Z6buY5qOA5rWL5pu05paw77yM5re75Yqg6K+E6K665Yy65byA5YWzIC0gMjAyNS40LjkKICDnvZHnq5nmlL7lrr3pmZDliLbvvIzlt7Lms6jph4rmraPmlofpmZDliLbnm7jlhbPku6PnoIEgLSAyMDI1LjQuMTcKICDkv67lpI3mjpLluo/liIfmjaLvvIzkvJjljJbpg6jliIbop4TliJnjgIIgLSAyMDI1LjQuMTIKICDliZTpmaTkuIDkuKrpu5jorqTmjqXlj6PvvIzkv67lpI3nmbvlvZXjgIIgLSAyMDI1LjQuMTEKICDkvJjljJbor4TorrrmlbDmja7lvILluLjlpITnkIbvvIzmlrDlop7kuIDkuKrpu5jorqTmjqXlj6MgLSAyMDI1LjQuMwrilJbilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilIXilJoA",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.4.16 ◎夜泽川◎",
    "bookSourceGroup": "漫画,自制",
    "bookSourceName": "MangaDex漫画",
    "bookSourceType": 2,
    "bookSourceUrl": "https://mangadex.org",
    "customOrder": 40,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\neval(String(source.loginUrl));\nvar result = [];\npush = (title, url, size) => result.push({\n title: title,\n url: url,\n style: {\n layout_flexGrow: 1,\n layout_flexBasisPercent: size\n }\n});\npush(\"全部\", `https://api.mangadex.org/manga?limit=32&offset={{(page-1)*32}}&includes[]=cover_art&includedTagsMode=AND&excludedTagsMode=OR{{buildQueryParams()}}`, 1);\n\nsorts.map(([title, key, order]) => {\n push(title, `https://api.mangadex.org/manga?limit=32&offset={{(page-1)*32}}&includes[]=cover_art&includedTagsMode=AND&excludedTagsMode=OR{{buildQueryParams(\"分类\")}}&order[${key}]=${order}`, 0.45);\n}\n);\nJSON.stringify(result);",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "jsLib": "function formatDate(dateStr) {\n const date = new Date(dateStr);\n const pad = n => String(n).padStart(2, '0');\n return `${date.getFullYear()}-${pad(date.getMonth()+1)}-${pad(date.getDate())} ` +\n `${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}`;\n}\nvar contentRating = [[\"普通\",\"safe\"],[\"粗略\",\"suggestive\"],[\"限制\",\"erotica\"]];\nvar sorts = [\n [\"最佳匹配\", \"relevance\", \"desc\"],\n [\"最新上传\", \"latestUploadedChapter\", \"desc\"],\n [\"最旧上传\", \"latestUploadedChapter\", \"asc\"],\n [\"标题升序\", \"title\", \"asc\"],\n [\"标题降序\", \"title\", \"desc\"],\n [\"最高评级\", \"rating\", \"desc\"],\n [\"最低评级\", \"rating\", \"asc\"],\n [\"最多关注\", \"followedCount\", \"desc\"],\n [\"最少关注\", \"followedCount\", \"asc\"],\n [\"最近添加\", \"createdAt\", \"desc\"],\n [\"最早添加\", \"createdAt\", \"asc\"],\n [\"年份升序\", \"year\", \"asc\"],\n [\"年份倒序\", \"year\", \"desc\"]\n];\n\nfunction buildQueryParams(e) {\n\tconst { source } = this\n\tlet selected = JSON.parse(source.getVariable());\n let query = '';\n const allRatings = contentRating.map(([Str,tag]) => tag);\n\n allRatings.forEach((rating, index) => {\n if (selected.contentRating.includes(rating)) {\n const encoded = `contentRating[]=${rating}`;\n \n query += `&${encoded}`;\n }\n });\n if (selected.Language) {\n let languages = selected.Language.split(\",\");\n query += languages.map(item => `&originalLanguage[]=${item}`).join('');\n }\n if (selected.sort && e !== \"分类\") {\n \tlet sort_ = selected.sort.split(\",\");\n query += `&order[${sort_[0]}]=${sort_[1]}`;\n }\n return query;\n}\n\nfunction getLanguage(str) {\n const languageMap = {\"en\":\"英语\",\"en-us\":\"英语（美国）\",\"en-gb\":\"英语（英国）\",\"en-au\":\"英语（澳大利亚）\",\"en-ca\":\"英语（加拿大）\",\"zh\":\"中文\",\"zh-tw\":\"繁体中文（台湾）\",\"zh-hk\":\"繁体中文（香港）\",\"es\":\"西班牙语\",\"es-mx\":\"西班牙语（墨西哥）\",\"es-ar\":\"西班牙语（阿根廷）\",\"es-es\":\"西班牙语（西班牙）\",\"fr\":\"法语\",\"fr-fr\":\"法语（法国）\",\"fr-ca\":\"法语（加拿大）\",\"de\":\"德语\",\"de-de\":\"德语（德国）\",\"de-at\":\"德语（奥地利）\",\"ja\":\"日语\",\"ja-jp\":\"日语（日本）\",\"ru\":\"俄语\",\"ru-ru\":\"俄语（俄罗斯）\",\"pt\":\"葡萄牙语\",\"pt-br\":\"葡萄牙语（巴西）\",\"pt-pt\":\"葡萄牙语（葡萄牙）\",\"it\":\"意大利语\",\"it-it\":\"意大利语（意大利）\",\"ko\":\"韩语\",\"ko-kr\":\"韩语（韩国）\",\"ar\":\"阿拉伯语\",\"ar-ae\":\"阿拉伯语（阿联酋）\",\"ar-sa\":\"阿拉伯语（沙特）\",\"nl\":\"荷兰语\",\"nl-nl\":\"荷兰语（荷兰）\",\"sv\":\"瑞典语\",\"sv-se\":\"瑞典语（瑞典）\",\"da\":\"丹麦语\",\"da-dk\":\"丹麦语（丹麦）\",\"no\":\"挪威语\",\"no-no\":\"挪威语（挪威）\",\"fi\":\"芬兰语\",\"fi-fi\":\"芬兰语（芬兰）\",\"tr\":\"土耳其语\",\"tr-tr\":\"土耳其语（土耳其）\",\"el\":\"希腊语\",\"el-gr\":\"希腊语（希腊）\",\"he\":\"希伯来语\",\"he-il\":\"希伯来语（以色列）\",\"pl\":\"波兰语\",\"pl-pl\":\"波兰语（波兰）\",\"hu\":\"匈牙利语\",\"hu-hu\":\"匈牙利语（匈牙利）\",\"th\":\"泰语\",\"th-th\":\"泰语（泰国）\",\"vi\":\"越南语\",\"vi-vn\":\"越南语（越南）\",\"id\":\"印尼语\",\"id-id\":\"印尼语（印尼）\",\"ms\":\"马来语\",\"my\":\"马来语（马来西亚）\",\"ro\":\"罗马尼亚语\",\"ro-ro\":\"罗马尼亚语（罗马尼亚）\",\"bg\":\"保加利亚语\",\"bg-bg\":\"保加利亚语（保加利亚）\",\"hr\":\"克罗地亚语\",\"hr-hr\":\"克罗地亚语（克罗地亚）\",\"cs\":\"捷克语\",\"cs-cz\":\"捷克语（捷克）\",\"sk\":\"斯洛伐克语\",\"sk-sk\":\"斯洛伐克语（斯洛伐克）\",\"sl\":\"斯洛文尼亚语\",\"sl-si\":\"斯洛文尼亚语（斯洛文尼亚）\",\"et\":\"爱沙尼亚语\",\"et-ee\":\"爱沙尼亚语（爱沙尼亚）\",\"lv\":\"拉脱维亚语\",\"lv-lv\":\"拉脱维亚语（拉脱维亚）\",\"lt\":\"立陶宛语\",\"lt-lt\":\"立陶宛语（立陶宛）\",\"uk\":\"乌克兰语\",\"uk-ua\":\"乌克兰语（乌克兰）\",\"be\":\"白俄罗斯语\",\"be-by\":\"白俄罗斯语（白俄罗斯）\"};\n if (languageMap.hasOwnProperty(str)) {\n return languageMap[str];\n }\n const primaryCode = str.split(\"-\")[0];\n return languageMap[primaryCode] || str;\n}",
    "lastUpdateTime": 1745899097179,
    "loginUi": "[ \n {\n \"name\": \"登录\",\n \"type\": \"button\",\n \"action\": \"Login('登录')\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"登出\",\n \"type\": \"button\",\n \"action\": \"Login('登出')\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"展示选择\",\n \"type\": \"button\",\n \"action\": \"Show()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n },\n {\n \"name\": \"级别设置\",\n \"type\": \"button\",\n \"action\": \"\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n },\n {\n \"name\": \"普通\",\n \"type\": \"button\",\n \"action\": \"Put_contentRating(0)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.2\n }\n },\n {\n \"name\": \"粗略\",\n \"type\": \"button\",\n \"action\": \"Put_contentRating(1)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.2\n }\n },\n {\n \"name\": \"限制\",\n \"type\": \"button\",\n \"action\": \"Put_contentRating(2)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.2\n }\n },\n {\n \"name\": \"排序切换\",\n \"type\": \"button\",\n \"action\": \"\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n },\n {\n \"name\": \"默认\",\n \"type\": \"button\",\n \"action\": \"Put_Sort('默认')\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"最佳匹配\",\n \"type\": \"button\",\n \"action\": \"Put_Sort(0)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"最新上传\",\n \"type\": \"button\",\n \"action\": \"Put_Sort(1)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"最旧上传\",\n \"type\": \"button\",\n \"action\": \"Put_Sort(2)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"标题升序\",\n \"type\": \"button\",\n \"action\": \"Put_Sort(3)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"标题倒序\",\n \"type\": \"button\",\n \"action\": \"Put_Sort(4)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"最高评分\",\n \"type\": \"button\",\n \"action\": \"Put_Sort(5)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"最低评分\",\n \"type\": \"button\",\n \"action\": \"Put_Sort(6)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"最多关注\",\n \"type\": \"button\",\n \"action\": \"Put_Sort(7)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"最少关注\",\n \"type\": \"button\",\n \"action\": \"Put_Sort(8)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"最近添加\",\n \"type\": \"button\",\n \"action\": \"Put_Sort(9)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"最早添加\",\n \"type\": \"button\",\n \"action\": \"Put_Sort(10)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"年份升序\",\n \"type\": \"button\",\n \"action\": \"Put_Sort(11)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"年份倒序\",\n \"type\": \"button\",\n \"action\": \"Put_Sort(12)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \"语言/缩写（英文逗号分隔多个语言）\",\n \"type\": \"text\",\n \"action\": \"\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n }\n]",
    "loginUrl": "if (source.getVariable() == \"\") {\n java.toast('已初始化');\n let option = {\n contentRating: ['safe', 'suggestive', 'erotica'],\n sort: \"\",\n Language: \"\"\n }\n source.setVariable(JSON.stringify(option, null, \"\\t\"));\n}\nfunction Login(l) {\n\tlet url = source.key;\n\tif ( l === \"登出\") {\n\tjava.toast('请浏览器手动登出');\n}\n\tcookie.removeCookie(url);\n\tsource.removeLoginHeader();\n\tjava.startBrowserAwait(url,\"登录\",false);\n}\nvar svb = JSON.parse(source.getVariable());\nfunction Show() {\n let text = [];\n const target = svb.contentRating;\n const [sortField, sortOrder] = svb.sort.split(\",\");\n const languages = svb.Language.split(\",\").map(x => getLanguage(x)).join(\" | \");\n text.push(`\\n语言：${languages ? languages : \"所有语言\"}`);\n const sortKey = sortField || \"\";\n const sortStr = sorts.find(([_, or, ord]) =>\n sortKey.includes(or) && ord === sortOrder)?. [0] || \"默认\";\n text.push(`排序方式：${sortStr}`);\n\n const contentStr = contentRating\n .filter(([_, cr]) => target.includes(cr))\n .map(([str]) => str)\n .join(\" | \") || \"未设置\";\n text.push(`内容等级：${contentStr}`);\n\n text = text.join(\"\\n\");\n java.toast(text);\n}\n\nfunction Put_contentRating(e) {\n let tag = contentRating[e][1];\n let tagStr = contentRating[e][0];\n if (svb.contentRating.includes(tag)) {\n java.toast(`\\n已取消展示【${tagStr}级】作品❌`);\n svb.contentRating = svb.contentRating.filter(item => item !== tag);\n java.log(JSON.stringify(svb.contentRating))\n } else {\n java.toast(`\\n已添加展示【${tagStr}级】作品✔️`);\n svb.contentRating.push(tag);\n }\n source.setVariable(JSON.stringify(svb, null, \"\\t\"));\n}\n\nfunction Put_Sort(e) {\n\t let sort , point;\n if (e !== \"默认\") {\n sort_ = sorts[e][1] + \",\" + sorts[e][2];\n point = sorts[e][0];\n } else {\n sort_ = \"\";\n point = e;\n }\n svb.sort = sort_;\n source.setVariable(JSON.stringify(svb, null, \"\\t\"));\n java.toast(`\\n已切换排序为【${point}】`);\n}\n\nfunction login() {\n svb.Language = source.getLoginInfoMap()[\"语言/缩写（英文逗号分隔多个语言）\"].toLowerCase();\n source.setVariable(JSON.stringify(svb, null, \"\\t\"));\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "coverUrl": "https://mangadex.org/covers/{$.id}/{$..fileName}.256.jpg",
      "init": "$.data",
      "intro": "@js:\nconst list = JSON.parse(JSON.stringify(src));\nconst description = list.attributes.description;\nconst originalLang = list.attributes.originalLanguage;\nlet result;\nif (description['zh-hk']) {\n result = description['zh-hk'];\n} else if (description['en']) {\n result = description['en'];\n} else if (description[originalLang]) {\n result = description[originalLang];\n} else {\n result = list.attributes.title.en;\n}\nresult = result.split('\\n')[0];",
      "kind": "{$.attributes.originalLanguage},{$.type},{$.attributes.tags..en}\n@js:Array.from(result).join('\\n').replace(/\\n/,\"\");",
      "name": "@js:\nconst list = JSON.parse(JSON.stringify(src));\nconst altTitles = list.attributes.altTitles;\nconst originalLang = list.attributes.originalLanguage;\nconst znEntry = altTitles.find(item => 'zn' in item);\nif (znEntry) {\n result = znEntry.zn;\n} else {\n const zhHkEntry = altTitles.find(item => 'zh-hk' in item);\n if (zhHkEntry) {\n result = zhHkEntry['zh-hk'];\n } else {\n const originalEntry = altTitles.find(item => originalLang in item);\n result = originalEntry?.[originalLang] || list.attributes.title.en;\n }\n}\nresult.split('\\n')[0];",
      "tocUrl": "https://api.mangadex.org/manga/{$.id}/feed?limit=96&includes[]=scanlation_group&includes[]=user&order[volume]=asc&order[chapter]=asc&offset=0&contentRating[]=safe&contentRating[]=suggestive&contentRating[]=erotica&contentRating[]=pornographic",
      "wordCount": ""
    },
    "ruleContent": {
      "content": "@js:\nvar data = JSON.parse(src);\nvar base_url = data.baseUrl;\nvar imglist = data.chapter.data;\nvar hash = data.chapter.hash;\nresult = imglist.map( x => `<img src=\"${base_url}/data/${hash}/${x}\">`);\nresult.join(\"\\n\");",
      "imageStyle": "FULL"
    },
    "ruleExplore": {
      "bookList": "",
      "bookUrl": "",
      "coverUrl": "",
      "intro": "",
      "kind": "",
      "name": ""
    },
    "ruleSearch": {
      "author": "",
      "bookList": "$.data[*]",
      "bookUrl": "https://api.mangadex.org/manga/{$.id}?includes[]=artist&includes[]=author&includes[]=cover_art",
      "coverUrl": "https://mangadex.org/covers/{$.id}/{$..fileName}.256.jpg",
      "intro": "@js:\nconst list = JSON.parse(JSON.stringify(src));\nconst description = list.attributes.description;\nconst originalLang = list.attributes.originalLanguage;\nlet result;\nif (description['zh-hk']) {\n result = description['zh-hk'];\n} else if (description['en']) {\n result = description['en'];\n} else if (description[originalLang]) {\n result = description[originalLang];\n} else {\n result = list.attributes.title.en;\n}\nresult = result.split('\\n')[0];",
      "kind": "{$.attributes.originalLanguage},{$.type},{$.attributes.tags..en}\n@js:Array.from(result).join('\\n').replace(/\\n/,\"\");",
      "name": "@js:\nconst list = JSON.parse(JSON.stringify(src));\nconst altTitles = list.attributes.altTitles;\nconst originalLang = list.attributes.originalLanguage;\nconst zhEntry = altTitles.find(item => 'zh' in item);\nif (zhEntry) {\n result = zhEntry.zh;\n} else {\n const zhHkEntry = altTitles.find(item => 'zh-hk' in item);\n if (zhHkEntry) {\n result = zhHkEntry['zh-hk'];\n } else {\n const originalEntry = altTitles.find(item => originalLang in item);\n result = originalEntry?.[originalLang] || list.attributes.title.en;\n }\n}\nresult.split(\"\\n\")[0];"
    },
    "ruleToc": {
      "chapterList": "@js:\nvar lists_ = [];\nvar seenChapters = new Set();\nvar volumeCounter = {};\n\nJSON.parse(src).data.forEach(chapter => {\n const { chapter: chap, updatedAt, translatedLanguage } = chapter.attributes;\n const url = chapter.id;\n \n if (!seenChapters.has(chap)) {\n seenChapters.add(chap);\n lists_.push({\n title: `第${chap}章 分译`, \n url : \"\",\n volume: 1\n });\n volumeCounter[chap] = 0;\n }\n const isChapter = true;\n if (isChapter) {\n volumeCounter[chap] += 1;\n }\n\n lists_.push({\n title: `第${chap}章 （译文${volumeCounter[chap]}）`,\n url: `https://api.mangadex.org/at-home/server/${url}?forcePort443=false`,\n info: `${formatDate(updatedAt)} | ${getLanguage(translatedLanguage)}`,\n volume: 0\n });\n});\n//java.log(JSON.stringify(lists_))\nlists_;",
      "chapterName": "title",
      "chapterUrl": "url",
      "isVolume": "volume",
      "nextTocUrl": "@js: var result = [];\nconst pages = Math.ceil(JSON.parse(src).total / JSON.parse(src).limit) - 1;\n//java.log(pages);\nfor (let i=1;i <= pages;i++) {\nurl = baseUrl.replace(/offset=0/,`offset=${i*96}`)\nresult.push(url);\n}\nresult;",
      "updateTime": "info"
    },
    "searchUrl": "@js:\neval(String(source.loginUrl));\nresult = `https://api.mangadex.org/manga?limit=32&offset={{(page-1)*32}}&title={{key}}&includes[]=cover_art&includedTagsMode=AND&excludedTagsMode=OR{{buildQueryParams()}}`;\nresult;",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.1.17 过cf盾逻辑换新 过不了自行更换UA\n//2024.12.29 ◎夜泽川◎",
    "bookSourceGroup": "自制",
    "bookSourceName": "芒果书坊",
    "bookSourceType": 0,
    "bookSourceUrl": "https://mangguoshufang.com/ ",
    "bookUrlPattern": "https?://mangguoshufang.com/\\d+/\\d+/info.html",
    "customOrder": 44,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\nvar result = []\nvar push = (title, url, size) => result.push({\n title: title,\n url: url,\n style: {\n layout_flexGrow: 1,\n layout_flexBasisPercent: size\n }\n})\nvar tg = org.jsoup.Jsoup.parse(java.ajax('https://mangguoshufang.com/0/list/1.html')).select('.x-category__box:nth-of-type(1) a');\n\ntg.forEach(tag => {\n\t var nam = tag.text()\n\t ul = String(tag.attr('href')).replace(\"1.html\",\"{{page}}.html\");\n push(nam,ul,0.25);\n});\n\nJSON.stringify(result);\n</js>",
    "header": "@js: UA = java.getWebViewUA();\nha = {\n\t\"User-Agent\": UA\n}\nJSON.stringify(ha);",
    "lastUpdateTime": 1737653608530,
    "loginCheckJs": "",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "p[class~=author]@text",
      "coverUrl": ".x-book__coverbox.0@img@src##^##https://mangguoshufang.com",
      "intro": "div[class~=intro]@html",
      "kind": "p[class~=words]@text.*：",
      "lastChapter": "div[class~=new]@text",
      "name": "p[class~=title]@text",
      "wordCount": "p[class~=reads]@text.*："
    },
    "ruleContent": {
      "content": "$.data.chapter.content",
      "replaceRegex": "##(?m)^\\*$"
    },
    "ruleExplore": {
      "author": "p[class~=author]@ownText",
      "bookList": ".x-book",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": "p[class~=chapter]@text",
      "kind": "",
      "name": "p[class~=name]@text",
      "wordCount": "span@text"
    },
    "ruleSearch": {
      "bookList": "<js>\nif (src.includes('Just a moment...')) { \n\t cookie.removeCookie(baseUrl);\n cf = java.startBrowserAwait(baseUrl,'验证',false).body();\n} else {\n\tcf = src;\n\t}\n\tcf;\n</js>\n.x-book",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": "p[class~=intro]@text",
      "kind": "span@text",
      "name": "p[class~=name]@text"
    },
    "ruleToc": {
      "chapterList": "class.x-catalog__list van-list@a",
      "chapterName": "text",
      "chapterUrl": "href##(\\d+).html##https://mangguoshufang.com/wmcms/ajax/index.php?action=novel.getchapter&cid=$1###"
    },
    "searchUrl": "/search/1/{{key}}/{{page}}.html",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.1.5 ◎夜泽川◎",
    "bookSourceGroup": "自制",
    "bookSourceName": "夜伴书屋",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.ybswa.com/",
    "bookUrlPattern": "https?://www.ybswo.com/book/\\d+/",
    "customOrder": 50,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"全部分类\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"玄幻\",\"url\":\"/list/qihuan{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"科幻\",\"url\":\"/list/kehuan{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"武侠\",\"url\":\"/list/wuxia{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"言情\",\"url\":\"/list/yanqing{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"都市\",\"url\":\"/list/dushi{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"历史\",\"url\":\"/list/lishi{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"悬疑\",\"url\":\"/list/xuanyi{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"耽美\",\"url\":\"/list/chunai{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"轻小说\",\"url\":\"/list/lightnovel{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}}]",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": 1739240666300,
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "https://www.ybswa.com@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nm:\"baseUrl\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "@get:{m}"
    },
    "ruleContent": {
      "content": "#cont-body@html",
      "nextContentUrl": ".text-center@a.-1@href"
    },
    "ruleExplore": {
      "bookList": ".media",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": ".media-info@text",
      "name": "h4@text"
    },
    "ruleSearch": {
      "author": "td.1@text",
      "bookList": "tbody > tr",
      "bookUrl": "a.0@href",
      "kind": "",
      "name": "td.0@text##《|》"
    },
    "ruleToc": {
      "chapterList": "#all-chapter@a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "/plus/search.php?q={{key}}",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.1.3 ◎夜泽川◎\n//同站一堆",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "2k小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.kkxsz.com",
    "customOrder": 51,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js: var result = []\nvar push = (title, url, size) => result.push({\n title: title,\n url: url,\n style: {\n layout_flexGrow: 1,\n layout_flexBasisPercent: size\n }\n})\npush(\"全部分类\",null,1);\ntg = java.ajax(source.key);\ntag = org.jsoup.Jsoup.parse(tg).select('a[href^=/list]');\ntag.forEach(fl => {\n nam = fl.text()\n ul = String(fl.attr('href')).replace(/\\/$/,\"-{{page}}/\");\npush(nam,ul,0.25);\n})\nJSON.stringify(result);",
    "header": "",
    "lastUpdateTime": 1743230863145,
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nz:\"class.t_c.2@text##字数：\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "@js: var id = baseUrl.match(/book\\/(.*?)\\.html/)[1];\njava.put(\"id\",id);\nvar pages = java.getStringList(\"option@value\",java.ajax(baseUrl));\njava.put(\"page\",pages.length);\nresult = source.key + \"/index.php?action=loadChapterPage\" + \",\" + JSON.stringify({\n \"body\": `id=${id}&page=1`,\n \"method\": \"POST\"\n});",
      "wordCount": "@get:{z}"
    },
    "ruleContent": {
      "content": "#content@html||.content@html",
      "imageStyle": "",
      "nextContentUrl": "[class~=pageDown|btnGray]@href",
      "replaceRegex": "##.*{{source.key}}.*|\\n+.*章节错误,点此举报.*\\n+|\\(https?.*\\/book\\/.*\\)|.*首发域名.*"
    },
    "ruleExplore": {
      "author": ".author@text",
      "bookList": ".list2 > ul > li",
      "bookUrl": "a.0@href",
      "coverUrl": "",
      "kind": "[class~=cate|date]@text##\\[|\\]",
      "lastChapter": ".chapter@text",
      "name": ".name a@text"
    },
    "ruleSearch": {
      "author": "a[href~=author][0]@text",
      "bookList": ".list > ul > li",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": ".intro@text",
      "kind": ".info a[href~=list]@text",
      "lastChapter": ".infoM2@a.-1@text",
      "name": ".name@text"
    },
    "ruleToc": {
      "chapterList": "$.data",
      "chapterName": "$.chaptername",
      "chapterUrl": "$.chapterurl",
      "nextTocUrl": "@js: result = []\nid = java.get(\"id\");\npages = java.get(\"page\");\nfor (let i = 2 ; i <= pages ; i++) {\noption = source.key + \"/index.php?action=loadChapterPage\" + \",\" + JSON.stringify({\n \"body\": `id=${id}&page=${i}`,\n \"method\": \"POST\"\n});\nresult.push(option);\n}\nresult;"
    },
    "searchUrl": "@js: \nvar url = java.ajax(source.key).match(/window\\.location\\.href=\\'([^']+)/)[1];\njava.log(url);\ncookie.removeCookie(url);\nvar kku = url.replace(/\\/\\?.*$/,\"\");\njava.log(kku);\nvar ckk = java.get(url,{});\nvar ck = cookie.getCookie(url);\njava.log(ck);\nvar result = kku + \"/keywords-{{key}}-{{page}}.html\" + \",\" + JSON.stringify({\n\t\"headers\":{\"Cookie\":ck}\n});\nresult;",
    "weight": 0
  },
  {
    "bookSourceComment": "//修复搜索 by.夜泽川",
    "bookSourceGroup": "网络",
    "bookSourceName": "天悦小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.xtyxsw.org",
    "customOrder": 54,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "header": "@js:\nJSON.stringify({\n\t\"upgrade-insecure-requests\":\"1\",\n\t\"accept\":\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\",\n\t\"accept-language\":\"zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7\",\n\t\"Referer\": source.getKey(),\n\t\"User-Agent\":\"Mozilla/5.0 (linux; u; android 9; zh-cn; v1816a build/pkq1.180819.001) applewebkit/537.36 (khtml, like gecko) version/4.0 chrome/100.0.2987.108 quark/6.5.5.137 mobile safari/537.36\"\n});",
    "lastUpdateTime": 1737650688308,
    "loginUrl": "",
    "respondTime": 180000,
    "ruleBookInfo": {
      "kind": ".bread-crumbs@li.1@a@text&&.box_info@.top@span!1@textNodes",
      "wordCount": ".box_info@.top@span.1@textNodes"
    },
    "ruleContent": {
      "content": "#content@p@text##喜欢.*请大家收藏.*|.*请点击下一页.*",
      "nextContentUrl": "text.下一页@href"
    },
    "ruleExplore": {},
    "ruleSearch": {
      "author": "span@a@text",
      "bookList": "#alistbox",
      "bookUrl": "h2@a@href",
      "checkKeyWord": "",
      "coverUrl": "img@src",
      "intro": ".intro@text",
      "lastChapter": "li@a@text",
      "name": "h2@a@text"
    },
    "ruleToc": {
      "chapterList": ".link_14@dd@a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "<js>\nvar url = source.getKey();\njava.webView(null ,url,null );\nvar co = cookie.getCookie(url);\nvar urls = url+'/search.html,';\nvar dj = {\n \"body\": \"searchkey={{key}}\",\n \"method\": \"POST\",\n \"Cookie\":co\n}\nvar post = JSON.stringify(dj);\nvar so = urls+ post;\nso;\n</js>",
    "weight": 0
  },
  {
    "bookSourceComment": "//2024.12.13 ◎夜泽川◎",
    "bookSourceGroup": "自制,零",
    "bookSourceName": "爱巴士",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.ibus233.com/",
    "customOrder": 60,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js: var result = [];\nvar push=(title,url,size)=>result.push({\n \t\"title\": title,\n \t\"url\": url,\n \t\"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": size\n }\n });\nvar tag = java.ajax(\"https://www.ibus233.com/category\");\na=org.jsoup.Jsoup.parse(tag).select(\".list a\");\npush(\"分类\",null,1)\n for(i in a){\n title=a[i].text()\n url=a[i].attr(\"href\")\n size=0.4\n title=String(title).replace(/\\s/,\"\");\n url=String(url).replace(/^/,\"https:\").replace(/$/i,\"_{{page}}\");\n push(title,url,size)\n };\nJSON.stringify(result);",
    "lastUpdateTime": 1743298868376,
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": ".auth@text",
      "coverUrl": "",
      "intro": ".intro p@text",
      "kind": ".tags a@text",
      "name": "h1@text",
      "tocUrl": "a[href~=catalog]@href"
    },
    "ruleContent": {
      "content": ".article@html||.nochapter@html",
      "nextContentUrl": "",
      "replaceRegex": "##\\n.*华丽的分割线[\\s\\S]*"
    },
    "ruleExplore": {
      "author": "h2@text##.*by",
      "bookList": ".g-list@li",
      "bookUrl": "a.0@href##^##https:",
      "kind": ".tags span@text",
      "name": "h2@text##by.*"
    },
    "ruleSearch": {
      "author": "$.auth",
      "bookList": "$.data.list",
      "bookUrl": "https://www.ibus233.com/novel/{{$._id}}",
      "checkKeyWord": "",
      "kind": "$.tags",
      "name": "$.name"
    },
    "ruleToc": {
      "chapterList": ".list a",
      "chapterName": "text",
      "chapterUrl": "href##^##https:",
      "nextTocUrl": ".section-list@a@href##^##https:"
    },
    "searchUrl": "<js>\nsckey = org.jsoup.Jsoup.parse(java.ajax(source.key + \"search\")).select(\".page-search\").attr(\"data-id\");\njava.log(sckey);\nbody = {\n \"body\": `name=${key}&tags=&type=3&tt=&page_index=${page}&app=2&searchkey=${sckey}`,\n \"headers\":{\"Referer\":source.key},\n \"method\": \"POST\"\n}\nresult = source.key + \"api/search/list\" + \",\" + JSON.stringify(body);\nresult;\n</js>",
    "weight": 0
  },
  {
    "bookSourceComment": "//2024.10.30 添加自动获取搜索url ◎夜泽川◎",
    "bookSourceGroup": "网络",
    "bookSourceName": "就爱言情",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.92yanqing.com",
    "bookUrlPattern": "https?://m.92yanqing.com/read/\\d+/",
    "customOrder": 82,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": 1743231071717,
    "respondTime": 4226,
    "ruleBookInfo": {
      "author": "class.author@text##作者：",
      "coverUrl": "class.synopsisArea_detail@tag.img@src",
      "init": "",
      "intro": "class.review@tag.p@textNodes",
      "kind": "class.sort@text##类别：",
      "lastChapter": "class.lastchapter@tag.a.0@text",
      "name": "class.title@text",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": "id.chaptercontent@tag.p@textNodes",
      "nextContentUrl": "text.下一页@href",
      "replaceRegex": "##\\(本章完\\)"
    },
    "ruleExplore": {
      "author": "",
      "bookList": "",
      "bookUrl": "",
      "coverUrl": "",
      "intro": "",
      "kind": "",
      "name": ""
    },
    "ruleSearch": {
      "author": "class.author.0@text##作者：",
      "bookList": "div.bookbox",
      "bookUrl": "tag.h4@tag.a.0@href",
      "checkKeyWord": "剑来",
      "coverUrl": "class.bookimg@tag.a.0@tag.img@src",
      "intro": "",
      "kind": "class.author.1@text##类型：",
      "lastChapter": "class.update@tag.a.0@text",
      "name": "tag.h4@tag.a.0@text"
    },
    "ruleToc": {
      "chapterList": "class.directoryArea.1@tag.p",
      "chapterName": "tag.a@text",
      "chapterUrl": "tag.a@href",
      "nextTocUrl": "option@value||text.下一页@href"
    },
    "searchUrl": "{{cookie.removeCookie(source.getKey());\norg.jsoup.Jsoup.parse(java.ajax(source.key)).select(\"form\").attr(\"action\")}},{\n \"body\": \"searchkey={{key}}\",\n \"charset\": \"UTF-8\",\n \"method\": \"POST\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.1.31 ◎夜泽川◎",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "笔趣阁ai",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.biquai.cc",
    "customOrder": 89,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": 1743232198481,
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "<js>\nvar id = baseUrl.match(/(\\d+)/)[1];\nvar ul = `${source.key}/userverify/book/${id}/list.html`\nvar result = java.get(ul,{}).header(\"location\");\nresult;\n</js>"
    },
    "ruleContent": {
      "content": "#chaptercontent@html##{{title}}|第\\d+章.*|\\s*请收藏：.*|\\s*（温馨提示.*）",
      "nextContentUrl": "#pb_next@href"
    },
    "ruleExplore": {
      "author": "",
      "bookList": "",
      "name": ""
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "<js>\nif (JSON.parse(src).length === 0) {\n\tjava.toast('没有结果');\n}\nsrc;\n</js>\n$.[*]",
      "bookUrl": "$.url_list",
      "checkKeyWord": "斗罗",
      "coverUrl": "$.url_img",
      "intro": "$.intro",
      "kind": "",
      "name": "$.articlename"
    },
    "ruleToc": {
      "chapterList": "dl@a!0",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "@js: \ncookie.removeCookie(source.key);\nvar searchul = `${source.key}/s?q=${java.encodeURI(key)}`\nvar header = {\n\t\"accept\": \"application/json\",\n\t\"Referer\": String(searchul)\n};\nvar hmurl = `${source.key}/user/hm.html?q=${java.encodeURI(key)}`;\n//java.log(JSON.stringify(head));\nvar hmkey = java.get(hmurl,header).cookie(\"hm\");\nvar hm = hmkey ? \"hm=\" + hmkey : \"\";\n java.log(hm);\nvar result = `${source.key}/user/search.html?q=${key}` + \",\" + JSON.stringify({\n\t\"headers\": {\"Cookie\": hm}\n});\nresult;",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.3.1 ◎夜泽川◎",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "好文书屋",
    "bookSourceType": 0,
    "bookSourceUrl": "http://hotxww.com/",
    "customOrder": 96,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"玄幻魔法\",\"url\":\"/sort/xuanhuan/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"武侠修真\",\"url\":\"/sort/wuxia/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"都市言情\",\"url\":\"/sort/dushi/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"历史军事\",\"url\":\"/sort/lishi/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"科幻灵异\",\"url\":\"/sort/kehuan/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"游戏竞技\",\"url\":\"/sort/youxi/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"女生耽美\",\"url\":\"/sort/nvsheng/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"其他类型\",\"url\":\"/sort/qita/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}}]",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": 1740874112742,
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=lastest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"#bookintro@html\",\ng:\"[property$=update_time]@content\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": "#TextContent@html##本站采用Cookie技术.*|\\(本章完\\)|.*CTRL\\+D键保存.*",
      "nextContentUrl": "#next_url@href||text.下一页@href"
    },
    "ruleExplore": {
      "author": ".book_other@span.0@text",
      "bookList": "#sitebox > dl",
      "bookUrl": "a.0@href",
      "coverUrl": "img@data-original",
      "intro": ".book_des@text",
      "kind": ".book_other@span.1@text",
      "name": "h3 a@text",
      "wordCount": "span.-1@text"
    },
    "ruleSearch": {
      "author": ".book_other@span.0@text",
      "bookList": "#nr",
      "bookUrl": "a.0@href",
      "coverUrl": "img@data-original",
      "intro": ".book_des@text",
      "kind": ".book_other@span.1@text",
      "name": "h3 a@text",
      "wordCount": "span.-1@text"
    },
    "ruleToc": {
      "chapterList": "#chapterList a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "{{cookie.removeCookie(source.getKey())}}/search/,{\n \"body\": \"searchkey={{key}}\",\n \"method\": \"POST\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "//2024.10.27 by.GEd520\n//2024.10.29 完善部分规则，目录判断与正文解密代码 by.夜泽川",
    "bookSourceGroup": "自制",
    "bookSourceName": "笔趣阁_书友",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.suimeng.la",
    "customOrder": 99,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"全部\",\"url\":\"/sort/0-{{page}}.html\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"玄幻魔法\",\"url\":\"/sort/1-{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"武侠修真\",\"url\":\"/sort/2-{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"都市言情\",\"url\":\"/sort/3-{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"军事历史\",\"url\":\"/sort/4-{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"侦探科幻\",\"url\":\"/sort/5-{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"网游动漫\",\"url\":\"/sort/6-{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"灵异耽美\",\"url\":\"/sort/7-{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"其他小说\",\"url\":\"/sort/8-{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}}]",
    "header": "{\n\t\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"\n}",
    "lastUpdateTime": 1743436480985,
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "https://m.suimeng.la@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nm:\"baseUrl\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}",
      "name": "@get:{n}",
      "tocUrl": "@get:{m}"
    },
    "ruleContent": {
      "content": "<js>\nvar bes = result.match(/PHA\\+[A-Za-z0-9+\\/]+={0,2}/g);\n//java.log(String(bes))\nif (!bes) {\n var ml = java.webView(null,baseUrl,null);\n var txt = java.getString(\"#txt@html\",ml);\n java.longToast(\"正文解密失败，转为webView动态加载。\");\n} else {\nvar result = [];\nfor (var i = 0; i < bes.length; i++) {\n // 遍历数组，使用阅读内置Base64解码方法\n var bsej = java.base64Decode(bes[i]);\n var txtt = String(bsej);\n result.push(txtt);\n }\n\tvar txt = result.join('\\n');\n}\ntxt;\n</js>",
      "nextContentUrl": "@js: var nex = result.match(/hhekgv='([^']*)'\\;/)[1];\nvar ul = source.key + nex;\nif (ul.length === String(book.bookUrl).length) {\n\tresult = \"\"\n\t} else{\n\t\tresult = ul;\n\t\t}\nresult;",
      "replaceRegex": "##.*退出浏览器阅读模式.*|(?m)^\\s*（）;（）",
      "title": ""
    },
    "ruleExplore": {},
    "ruleSearch": {
      "bookList": ".index_qb > a",
      "bookUrl": "a@href",
      "coverUrl": "img@data-original",
      "intro": ".info@text",
      "name": "h4@text"
    },
    "ruleToc": {
      "chapterList": "@js: var result = []\nif (!baseUrl.includes('index')) {\n var chnList = java.getStringList(\"ul[class=ph_list].1@a@text\");\n var chfList = java.getStringList(\"ul[class=ph_list].1@a@href\");\n} else {\n var chnList = java.getStringList(\".ph_list a@text\");\n var chfList = java.getStringList(\".ph_list a@onclick\");\n}\n\nfor (var i = 0; i < chfList.length; i++) {\n\tchfList[i] = String(chfList[i]).replace(/read_tz\\((\\d+)\\)\\;/g,book.bookUrl + \"$1.html\");\n\tvar chn = Array.from(chnList);\n var chf = Array.from(chfList);\n result.push({\n title: chn[i],\n url: chf[i]\n });\n}\n\nif (result.length === 0) {\n // 如果目录数据为空，则弹窗提示\n java.longToast(\"当前书籍无数据\");\n} else {\n result = result;\n}\nresult;",
      "chapterName": "title",
      "chapterUrl": "url",
      "formatJs": "",
      "isVolume": "",
      "nextTocUrl": "@js: var ml = source.key + java.getString(\"text.章节目录@href\");\nvar src = java.ajax(ml);\nvar next = java.getStringList(\"option@value\",src);\nnext;",
      "preUpdateJs": ""
    },
    "searchUrl": "{{cookie.removeCookie(source.getKey())}}/search.html,{\n \"body\": \"s={{key}}\",\n \"method\": \"POST\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "2024.7.24 ○夜泽川○\n//搜索有验证码，可在书架右上角三点\"添加网址\"，输入书籍详情页链接\n//2024.8.9 修复搜索重定向到书籍详情页出现的错误(实际是阅读的bug🤔)。感谢游客大佬解惑。",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "若水文学[验证]",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.ruoshuiwx.com/",
    "bookUrlPattern": "https?://www.ruoshuiwx.com/book/\\w+.html",
    "customOrder": 105,
    "enabled": false,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"分类\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"玄幻魔法\",\"url\":\"https://www.ruoshuiwx.com/cat/xuanhuanmofa/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"武侠修真\",\"url\":\"https://www.ruoshuiwx.com/cat/wuxiaxiuzhen/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"都市言情\",\"url\":\"https://www.ruoshuiwx.com/cat/dushiyanqing/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"历史军事\",\"url\":\"https://www.ruoshuiwx.com/cat/lishijunshi/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"网游动漫\",\"url\":\"https://www.ruoshuiwx.com/cat/wangyoudongman/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"科幻小说\",\"url\":\"https://www.ruoshuiwx.com/cat/kehuanxiaoshuo/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"恐怖灵异\",\"url\":\"https://www.ruoshuiwx.com/cat/kongbulingyi/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"其他类型\",\"url\":\"https://www.ruoshuiwx.com/cat/qita/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}}]",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": 1729788420881,
    "respondTime": 28665,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@js:\nbook.bookUrl = baseUrl;\n@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nm:\"baseUrl\"\n}",
      "intro": "&nbsp;&nbsp;🕰️更新：@get:{g}\n📜简介：@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}",
      "name": "@get:{n}",
      "tocUrl": "@get:{m}"
    },
    "ruleContent": {
      "content": "class.content@html##.*若水文学无广告APP",
      "nextContentUrl": "text.下一页@href"
    },
    "ruleExplore": {},
    "ruleSearch": {
      "author": "td.-2@text",
      "bookList": "tbody > tr",
      "bookUrl": "a.0@href",
      "checkKeyWord": "骑砍中亚",
      "kind": "td.-1@text",
      "lastChapter": "td.1@text",
      "name": "td.0@text"
    },
    "ruleToc": {
      "chapterList": "ul[book-data=book] > li >a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "https://www.ruoshuiwx.com/v4.php,{\n \"body\": \"search={{key}}&captcha={{u=source.getKey()+'captcha.php?'+new Date().getTime();java.ajax(u);java.getVerificationCode(u);}}\",\n \"charset\": \"UTF-8\",\n \"method\": \"POST\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "//2024.8.31 ◎夜泽川◎",
    "bookSourceGroup": "自制,网络",
    "bookSourceName": "华东看书",
    "bookSourceType": 0,
    "bookSourceUrl": "http://www.ahdzxtd.com/",
    "bookUrlPattern": "http://www.ahdzxtd.com/shu/\\d+.html",
    "customOrder": 106,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "玄幻奇幻::/xh_{{page}}/\n武侠仙侠::/wx_{{page}}/\n都市言情::/ds_{{page}}/\n历史军事::/ls_{{page}}/\n网游竞技::/wy_{{page}}/\n科幻灵异::/kj_{{page}}/\n女生频道::/ns_{{page}}/",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": 1735569315642,
    "loginCheckJs": " src = result.body();\n ul = result.url();\nif (src.includes('Just a moment...')) { \n cf = java.startBrowserAwait(ul,'验证');\n } else {\n \tcf = result;\n}\ncf;",
    "respondTime": 100984,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nm:\"baseUrl\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "@get:{m}"
    },
    "ruleContent": {
      "content": "#content@html",
      "nextContentUrl": "text.下一页@href",
      "replaceRegex": "##{{chapter.title}}\\s\\(第\\d+/\\d+页\\)|.*本章未完.*|.*最新网址.*"
    },
    "ruleExplore": {},
    "ruleSearch": {
      "author": ".s4@text",
      "bookList": ".txt-list > li!0",
      "bookUrl": "a.0@href",
      "checkKeyWord": "",
      "coverUrl": "a.0@href##.*/shu/((\\d{2})\\d+)\\.html##http://www.ahdzxtd.com/files/article/image/$2/$1/$1s.jpg###",
      "kind": ".s1@text&&.s5@text##\\[|\\]",
      "lastChapter": ".s3@text",
      "name": ".s2@text"
    },
    "ruleToc": {
      "chapterList": ".section-list.1@a",
      "chapterName": "text",
      "chapterUrl": "href",
      "nextTocUrl": "option@value||text.下一页@href"
    },
    "searchUrl": "/search.html?keyWord={{key}}",
    "weight": 0
  },
  {
    "bookSourceComment": "//2024.11.9 ◎夜泽川◎",
    "bookSourceGroup": "自制,网络",
    "bookSourceName": "欲书台",
    "bookSourceType": 0,
    "bookSourceUrl": "https://58rom.org/",
    "customOrder": 114,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"分类\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"校园言情\",\"url\":\"/sort/1/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"都市言情\",\"url\":\"/sort/2/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"古代爱情\",\"url\":\"/sort/3/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"罗曼史\",\"url\":\"/sort/4/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"耽美\",\"url\":\"/sort/5/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"百合\",\"url\":\"/sort/6/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"同人\",\"url\":\"/sort/7/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"奇幻玄幻\",\"url\":\"/sort/8/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"网游竞技\",\"url\":\"/sort/9/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"科幻异能\",\"url\":\"/sort/10/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"恐怖灵异\",\"url\":\"/sort/11/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"惊悚推理\",\"url\":\"/sort/12/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"武侠仙侠\",\"url\":\"/sort/13/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"历史军事\",\"url\":\"/sort/14/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"穿越重生\",\"url\":\"/sort/15/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"综合其它\",\"url\":\"/sort/16/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}}]",
    "lastUpdateTime": 1731138910040,
    "respondTime": 12434,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nm:\"baseUrl\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "@get:{m}"
    },
    "ruleContent": {
      "content": "#rtext@html##.*返回顶部.*",
      "nextContentUrl": "#linkNext@href||text.下一页@href"
    },
    "ruleExplore": {},
    "ruleSearch": {
      "author": ".author.0@text",
      "bookList": ".p10",
      "bookUrl": "a.0@href",
      "coverUrl": "a.0@href##\\/((\\d{2})\\d+)\\/##https://58rom.org/files/artile/img/$2/$1/$1s.jpg###",
      "intro": ".update@ownText",
      "kind": ".author.1@text",
      "lastChapter": ".cat a@text",
      "name": "h4@text"
    },
    "ruleToc": {
      "chapterList": "#list-chapterAll a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "{{cookie.removeCookie(source.getKey())}}/search/,{\n \"body\": \"searchkey={{key}}&action=login&submit=\",\n \"method\": \"POST\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "//2024.8.24 ◎夜泽川◎",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "🕊️白鸽文学[验证]",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.baigewx.com/",
    "bookUrlPattern": "https?://www.baigewx.com/novel/\\w+.html",
    "customOrder": 121,
    "enabled": false,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"分类\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"玄幻魔法\",\"url\":\"/list/xuanhuanmofa/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"武侠修真\",\"url\":\"/list/wuxiaxiuzhen/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"都市言情\",\"url\":\"/list/dushiyanqing/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"历史军事\",\"url\":\"/list/lishijunshi/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"网游动漫\",\"url\":\"/list/wangyoudongman/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"科幻小说\",\"url\":\"/list/kehuanxiaoshuo/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"恐怖灵异\",\"url\":\"/list/kongbulingyi/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"其他\",\"url\":\"/list/qita/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}}]",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": 1724495067812,
    "respondTime": 25683,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nm:\"baseUrl\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "@get:{m}"
    },
    "ruleContent": {
      "content": "article@html",
      "nextContentUrl": "",
      "webJs": ""
    },
    "ruleExplore": {},
    "ruleSearch": {
      "author": "td.2@text",
      "bookList": "tbody > tr",
      "bookUrl": "a.0@href",
      "coverUrl": "",
      "kind": "td.-1@text",
      "lastChapter": "td.1@text",
      "name": "td.0@text"
    },
    "ruleToc": {
      "chapterList": "li[class$=book]@a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "https://www.baigewx.com/sj.php,{\n \"body\": \"search={{key}}&captcha={{u=source.key+\"captcha.php?\"+new Date().getTime();java.ajax(u);java.getVerificationCode(u);}}\",\n \"charset\": \"UTF-8\",\n \"method\": \"POST\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.1.3 ◎夜泽川◎\n//同站一堆",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "同人小说网",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.tongrenxsw.com",
    "customOrder": 148,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js: var result = []\nvar push = (title, url, size) => result.push({\n title: title,\n url: url,\n style: {\n layout_flexGrow: 1,\n layout_flexBasisPercent: size\n }\n})\npush(\"全部分类\",null,1);\ntg = java.ajax(source.key);\ntag = org.jsoup.Jsoup.parse(tg).select('.navM li a');\ntag.forEach(fl => {\n nam = fl.text()\n ul = String(fl.attr('href')).replace(/\\/$/,\"-{{page}}/\");\npush(nam,ul,0.25);\n})\nJSON.stringify(result);",
    "header": "",
    "lastUpdateTime": 1743232382880,
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nz:\"class.t_c.2@text##字数：\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "@js: \nso = java.ajax(baseUrl.replace(/book/,\"chapter\"));\njava.setContent(so);\nvar id = baseUrl.match(/book\\/(.*?)\\.html/)[1];\njava.put(\"id\",id);\nvar pages = java.getStringList(\".dropDown@li@data-p\");\njava.put(\"page\",pages.length);\nresult = source.key + \"/index.php?action=loadChapterPage\" + \",\" + JSON.stringify({\n \"body\": `id=${id}&page=1`,\n \"method\": \"POST\"\n});",
      "wordCount": "@get:{z}"
    },
    "ruleContent": {
      "content": "#content@html||.content@html",
      "imageStyle": "",
      "nextContentUrl": ".btnBlack.-1@href",
      "replaceRegex": "##.*{{source.key}}.*|\\n+.*章节错误,点此举报.*\\n+|\\(https?.*\\/book\\/.*\\)|.*首发域名.*"
    },
    "ruleExplore": {
      "author": "a[href~=author]@text",
      "bookList": ".dList > ul > li",
      "bookUrl": "a.0@href",
      "coverUrl": ".pic img@src",
      "intro": ".intro@text",
      "kind": "[class~=cate|date]@text##\\[|\\]",
      "lastChapter": ".chapter@text",
      "name": ".name a@text"
    },
    "ruleSearch": {
      "author": "a[href~=author][0]@text",
      "bookList": ".list > ul > li",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": ".intro@text",
      "kind": ".info a[href~=list]@text",
      "lastChapter": ".infoM2@a.-1@text",
      "name": ".name@text"
    },
    "ruleToc": {
      "chapterList": "$.data",
      "chapterName": "$.chaptername",
      "chapterUrl": "$.chapterurl",
      "nextTocUrl": "@js: result = []\nid = java.get(\"id\");\npages = java.get(\"page\");\nfor (let i = 2 ; i <= pages ; i++) {\noption = source.key + \"/index.php?action=loadChapterPage\" + \",\" + JSON.stringify({\n \"body\": `id=${id}&page=${i}`,\n \"method\": \"POST\"\n});\nresult.push(option);\n}\nresult;"
    },
    "searchUrl": "@js: \nvar url = java.ajax(source.key).match(/window\\.location\\.href=\\'([^']+)/)[1];\njava.log(url);\ncookie.removeCookie(url);\nvar kku = url.replace(/\\/\\?.*$/,\"\");\njava.log(kku);\nvar ckk = java.get(url,{});\nvar ck = cookie.getCookie(url);\njava.log(ck);\nvar result = kku + \"/keywords-{{key}}-{{page}}.html\" + \",\" + JSON.stringify({\n\t\"headers\":{\"Cookie\":ck}\n});\nresult;",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.1.3 ◎夜泽川◎\n//同站一堆",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "番茄[伪]",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.fanqxsw.com",
    "customOrder": 156,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js: var result = []\nvar push = (title, url, size) => result.push({\n title: title,\n url: url,\n style: {\n layout_flexGrow: 1,\n layout_flexBasisPercent: size\n }\n})\npush(\"全部分类\",null,1);\ntg = java.ajax(source.key+\"/list-0/\");\ntag = org.jsoup.Jsoup.parse(tg).select('.condBox dl:nth-of-type(2) a[href^=/list]');\ntag.forEach(fl => {\n nam = fl.text()\n ul = String(fl.attr('href')).replace(/\\/$/,\"-{{page}}/\");\npush(nam,ul,0.25);\n})\nJSON.stringify(result);",
    "header": "",
    "lastUpdateTime": 1743232407093,
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nz:\"class.t_c.2@text##字数：\",\nm:\".btnGreen2@href\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "@js: \nso = java.ajax(baseUrl.replace(/book/,\"chapter\"));\njava.setContent(so);\nvar id = baseUrl.match(/book\\/(.*?)\\.html/)[1];\njava.put(\"id\",id);\nvar pages = java.getStringList(\"option@value\");\njava.put(\"page\",pages.length);\nresult = source.key + \"/index.php?action=loadChapterPage\" + \",\" + JSON.stringify({\n \"body\": `id=${id}&page=1`,\n \"method\": \"POST\"\n});",
      "wordCount": "@get:{z}"
    },
    "ruleContent": {
      "content": "#content@html||.content@html",
      "imageStyle": "",
      "nextContentUrl": "[class~=pageDown|btnGray]@href",
      "replaceRegex": "##.*{{source.key}}.*|\\n+.*章节错误,点此举报.*\\n+|\\(https?.*\\/book\\/.*\\)|.*首发域名.*"
    },
    "ruleExplore": {
      "author": ".time@span.0@text",
      "bookList": ".list > ul > li",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": ".intro@text",
      "kind": ".about@span@text##\\[|\\]",
      "lastChapter": ".chapter@text",
      "name": ".name a@text"
    },
    "ruleSearch": {
      "author": "a[href~=author][0]@text",
      "bookList": ".list > ul > li",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": ".intro@text",
      "kind": ".info a[href~=list]@text",
      "lastChapter": ".infoM2@a.-1@text",
      "name": ".name@text"
    },
    "ruleToc": {
      "chapterList": "$.data",
      "chapterName": "$.chaptername",
      "chapterUrl": "$.chapterurl",
      "nextTocUrl": "@js: result = []\nid = java.get(\"id\");\npages = java.get(\"page\");\nfor (let i = 2 ; i <= pages ; i++) {\noption = source.key + \"/index.php?action=loadChapterPage\" + \",\" + JSON.stringify({\n \"body\": `id=${id}&page=${i}`,\n \"method\": \"POST\"\n});\nresult.push(option);\n}\nresult;"
    },
    "searchUrl": "@js: \nvar url = java.ajax(source.key).match(/window\\.location\\.href=\\'([^']+)/)[1];\njava.log(url);\ncookie.removeCookie(url);\nvar kku = url.replace(/\\/\\?.*$/,\"\");\n//java.log(kku);\nvar ckk = java.get(url,{});\nvar ck = cookie.getCookie(url);\njava.log(ck);\nvar result = kku + \"/keywords-{{key}}-{{page}}.html\" + \",\" + JSON.stringify({\n\t\"headers\":{\"Cookie\":ck}\n});\nresult;",
    "weight": 0
  },
  {
    "bookSourceComment": "// 2024.9.20 ◎夜泽川◎",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "🐼大熊猫文学",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.dxmwx.org/",
    "bookUrlPattern": "https?://www.dxmwx.org/book/\\d+.html",
    "customOrder": 161,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"榜单\",\"url\":\"https://www.dxmwx.org/list/topall__{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"新书\",\"url\":\"https://www.dxmwx.org/list/topnew__{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"完本\",\"url\":\"https://www.dxmwx.org/list/topend__{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"更新\",\"url\":\"https://www.dxmwx.org/list/topupdate__{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"月点击\",\"url\":\"https://www.dxmwx.org/list/topmonth__{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"周点击\",\"url\":\"https://www.dxmwx.org/list/topweek__{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"女生\",\"url\":\"https://www.dxmwx.org/list/topmm__{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"分类\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"玄幻\",\"url\":\"https://www.dxmwx.org/list/topall_%E7%8E%84%E5%B9%BB_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"奇幻\",\"url\":\"https://www.dxmwx.org/list/topall_%E5%A5%87%E5%B9%BB_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"武侠\",\"url\":\"https://www.dxmwx.org/list/topall_%E6%AD%A6%E4%BE%A0_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"仙侠\",\"url\":\"https://www.dxmwx.org/list/topall_%E4%BB%99%E4%BE%A0_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"都市\",\"url\":\"https://www.dxmwx.org/list/topall_%E9%83%BD%E5%B8%82_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"言情\",\"url\":\"https://www.dxmwx.org/list/topall_%E8%A8%80%E6%83%85_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"历史\",\"url\":\"https://www.dxmwx.org/list/topall_%E5%8E%86%E5%8F%B2_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"军事\",\"url\":\"https://www.dxmwx.org/list/topall_%E5%86%9B%E4%BA%8B_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"游戏\",\"url\":\"https://www.dxmwx.org/list/topall_%E6%B8%B8%E6%88%8F_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"科幻\",\"url\":\"https://www.dxmwx.org/list/topall_%E7%A7%91%E5%B9%BB_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"灵异\",\"url\":\"https://www.dxmwx.org/list/topall_%E7%81%B5%E5%BC%82_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"二次元\",\"url\":\"https://www.dxmwx.org/list/topall_%E4%BA%8C%E6%AC%A1%E5%85%83_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}}]",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": 1743436110305,
    "respondTime": 73824,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "class.imgwidth@src##^##https://www.dxmwx.org",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nm:\"baseUrl\"\n}",
      "intro": "&nbsp;🏷️标签：{{@@.typebut@a@text##\\n##,}}\n📜简介：{{@@div[style$=\"100px;\"]@text}}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "a[href^=\"/chapter/\"]@href||text.阅读目录@href"
    },
    "ruleContent": {
      "content": "#Lab_Contents@html"
    },
    "ruleExplore": {},
    "ruleSearch": {
      "author": "a[style$=\"14px;\"]@text",
      "bookList": "div[style^=\"margin:\"]",
      "bookUrl": ".fonttext@href",
      "coverUrl": "img@src",
      "intro": ".neirongh5@text",
      "kind": ".lefth5@text",
      "lastChapter": "span[style$=\"5px;\"]@text",
      "name": ".fonttext@text"
    },
    "ruleToc": {
      "chapterList": "a[href^=\"/read/\"]||span[style*=\"padding-right:20px;\"]@a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "/list/topall_{{key}}_{{page}}.html",
    "weight": 0
  },
  {
    "bookSourceComment": "//2024.10.20 ◎夜泽川◎",
    "bookSourceGroup": "自制,网络",
    "bookSourceName": "言情小说",
    "bookSourceType": 0,
    "bookSourceUrl": "http://m.xianqihaotianmi.org/",
    "customOrder": 167,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"全部分类\",\"url\":\"/xclass/0/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"玄幻魔法\",\"url\":\"/xclass/1/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"武侠修真\",\"url\":\"/xclass/2/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"都市言情\",\"url\":\"/xclass/3/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"历史军事\",\"url\":\"/xclass/4/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"网游动漫\",\"url\":\"/xclass/5/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"科幻小说\",\"url\":\"/xclass/6/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"恐怖灵异\",\"url\":\"/xclass/7/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"其他小说\",\"url\":\"/xclass/8/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"排行榜榜\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"总榜\",\"url\":\"/ph/all_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"玄幻魔法\",\"url\":\"/ph/all1_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"仙侠修真\",\"url\":\"/ph/all2_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"都市言情\",\"url\":\"/ph/all3_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"历史军事\",\"url\":\"/ph/all4_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"网游动漫\",\"url\":\"/ph/all5_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"科幻小说\",\"url\":\"/ph/all6_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"恐怖灵异\",\"url\":\"/ph/all7_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"其他类型\",\"url\":\"/ph/all8_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"周榜\",\"url\":\"/ph/week_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"玄幻魔法\",\"url\":\"/ph/week1_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"仙侠修真\",\"url\":\"/ph/week2_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"都市言情\",\"url\":\"/ph/week3_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"历史军事\",\"url\":\"/ph/week4_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"网游动漫\",\"url\":\"/ph/week5_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"科幻小说\",\"url\":\"/ph/week6_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"恐怖灵异\",\"url\":\"/ph/week7_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"其他类型\",\"url\":\"/ph/week8_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"月榜\",\"url\":\"/ph/month_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"玄幻魔法\",\"url\":\"/ph/month1_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"仙侠修真\",\"url\":\"/ph/month2_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"都市言情\",\"url\":\"/ph/month3_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"历史军事\",\"url\":\"/ph/month4_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"网游动漫\",\"url\":\"/ph/month5_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"科幻小说\",\"url\":\"/ph/month6_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"恐怖灵异\",\"url\":\"/ph/month7_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"其他类型\",\"url\":\"/ph/month8_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}}]",
    "lastUpdateTime": 1730012582180,
    "respondTime": 41775,
    "ruleBookInfo": {
      "author": ".author@text##.*\\|",
      "coverUrl": ".synopsisArea_detail@img@src",
      "intro": ".review@text",
      "kind": ".synopsisArea_detail@p.-2:-3:-4@text##.*：|.*\\|",
      "lastChapter": ".synopsisArea_detail@a.-1@text",
      "name": ".title@text",
      "tocUrl": "text.查看完整目录@href"
    },
    "ruleContent": {
      "content": "#chaptercontent@html##{{chapter.title}}.*|最新网址.*|（本章未完.*）|.*言情小说阁[\\s\\S]*",
      "nextContentUrl": "#pt_next@href"
    },
    "ruleExplore": {
      "author": ".author@text",
      "bookList": ".hot_sale",
      "bookUrl": "a.0@href",
      "coverUrl": "img@data-original",
      "intro": ".review@text",
      "name": ".title@text"
    },
    "ruleSearch": {
      "author": ".author.0@text##.*\\|\\s*作者：",
      "bookList": ".hot_sale",
      "bookUrl": "a.0@href",
      "checkKeyWord": "",
      "coverUrl": "a.0@href##\\/book\\/((\\d{2})\\d+)\\/##http://www.xianqihaotianmi.org/files/article/image/$2/$1/$1s.jpg###",
      "kind": ".author.0:1@text##\\|.*|\\s*",
      "name": ".title@text"
    },
    "ruleToc": {
      "chapterList": "#chapterlist@a!0:-1",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "/s.php,{\n \"body\": \"keyword={{key}}&=1\",\n \"method\": \"POST\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "//2024.10.24 ◎夜泽川◎",
    "bookSourceGroup": "自制",
    "bookSourceName": "车毅小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.cheyil.com/",
    "bookUrlPattern": "https?://m.cheyil.com/book/\\d+/",
    "customOrder": 180,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"全部小说\",\"url\":\"/sort/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"玄幻小说\",\"url\":\"/sort/xuanhuan/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"仙侠小说\",\"url\":\"/sort/xianxia/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"都市小说\",\"url\":\"/sort/dushi/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"历史军事\",\"url\":\"/sort/lishi/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"游戏竞技\",\"url\":\"/sort/youxi/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"科幻小说\",\"url\":\"/sort/kehuan/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"恐怖小说\",\"url\":\"/sort/kongbu/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"其他类型\",\"url\":\"/sort/qita/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}}]",
    "lastUpdateTime": 1729783213859,
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nm:\"text.全部章节目录@href\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}○@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "@get:{m}",
      "wordCount": ""
    },
    "ruleContent": {
      "content": "#booktxt@html",
      "nextContentUrl": "a[rel=next]@href||text.下一页@href"
    },
    "ruleExplore": {
      "author": "a.-1@text",
      "bookList": ".content > dl",
      "bookUrl": "a.0@href",
      "coverUrl": "img@data-src",
      "intro": "dd.0@text",
      "kind": "span.0@text",
      "name": "dt@text",
      "wordCount": "span.-1@text"
    },
    "ruleSearch": {},
    "ruleToc": {
      "chapterList": "#clist a",
      "chapterName": "text",
      "chapterUrl": "href",
      "nextTocUrl": "option@value||text.下一页@href"
    },
    "searchUrl": "",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.3.30 ◎夜泽川◎",
    "bookSourceGroup": "自制,网络",
    "bookSourceName": "笔趣阁22✨",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.22biqu.net",
    "customOrder": 185,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"全部分类\",\"url\":\"/fenlei/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"玄幻魔法\",\"url\":\"/fenlei/1_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"武侠修真\",\"url\":\"/fenlei/2_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"都市言情\",\"url\":\"/fenlei/3_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"历史军事\",\"url\":\"/fenlei/4_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"科幻灵异\",\"url\":\"/fenlei/6_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"游戏竞技\",\"url\":\"/fenlei/5_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"女生耽美\",\"url\":\"/fenlei/7_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"其他类型\",\"url\":\"/fenlei/8_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"全本\",\"url\":\"/quanben/fenlei/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}}]",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": 1743329677616,
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}"
    },
    "ruleContent": {
      "content": "#chaptercontent@html##{{chapter.title}}|『加入书签，.*』|\\(本章完\\)",
      "nextContentUrl": "#pt_next@href||text.下一页@href"
    },
    "ruleExplore": {
      "author": ".author@text",
      "bookList": "#main > div > a",
      "bookUrl": "a.0@href",
      "coverUrl": "a.0@href##\\/biqu((\\d{2})\\d+)\\/##https://img.22biqu.com/$2/$1/$1s.jpg###",
      "intro": ".review@text",
      "name": ".title@text"
    },
    "ruleSearch": {
      "author": ".author.0@text",
      "bookList": ".bookbox",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "kind": ".author.1@text##类型：",
      "lastChapter": ".update@text##最后章节：",
      "name": ".bookname@text"
    },
    "ruleToc": {
      "chapterList": ".directoryArea.-1@a",
      "chapterName": "text",
      "chapterUrl": "href",
      "nextTocUrl": "option@value"
    },
    "searchUrl": "{{cookie.removeCookie(source.getKey())}}/ss/,{\n \"body\": \"searchkey={{key}}\",\n \"method\": \"POST\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "//2024.3.24 by.夜泽川\n//↑书源上方类型改文件可下载\n//这网站速度实在难崩，测试了好久才确定没问题，下载更加慢，非必要还是建议不要改。",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "⭐我爱电子书",
    "bookSourceType": 0,
    "bookSourceUrl": "http://m.woaige.net",
    "bookUrlPattern": "http?:\\/\\/m\\.woaige\\.net\\/book\\/\\d+\\/",
    "customOrder": 191,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"分类\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"玄幻奇幻\",\"url\":\"http://m.woaidu.cc/search__1_{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"武侠仙侠\",\"url\":\"http://m.woaidu.cc/search__2_{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"现代都市\",\"url\":\"http://m.woaidu.cc/search__3_{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"精品言情\",\"url\":\"http://m.woaidu.cc/search__4_{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"科幻灵异\",\"url\":\"http://m.woaidu.cc/search__5_{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"网络竞技\",\"url\":\"http://m.woaidu.cc/search__6_{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"耽美同人\",\"url\":\"http://m.woaidu.cc/search__7_{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"历史军事\",\"url\":\"http://m.woaidu.cc/search__8_{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"中外名著\",\"url\":\"http://m.woaidu.cc/search__9_{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},{\"title\":\"人物传记\",\"url\":\"http://m.woaidu.cc/search__10_{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}}]",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": 1743435662357,
    "respondTime": 30009,
    "ruleBookInfo": {
      "author": ".block_txt2 p.2@text",
      "coverUrl": ".block_img2@img@src",
      "downloadUrls": "{{baseUrl}}##.*/book/(\\d+)/##http://txt.woaidu.cc/bookdownload_$1_0.html###",
      "intro": ".intro_info@text##最新章节推荐地址：.*|\\\\n",
      "kind": ".block_txt2 p.3:4@text##.*：",
      "lastChapter": ".block_txt2 p.6@text##最新：",
      "name": "h1@text",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": "#nr1@html##最新网址.*|{{chapter.title}}|\\(第\\d+/\\d+页\\)|（本章未完.*继续阅读）",
      "nextContentUrl": "#pt_next@href||text.下一页@href"
    },
    "ruleExplore": {
      "author": ".author@text##.*作者：(.*)$##$1###",
      "bookList": "#content_1>a",
      "bookUrl": "href##/book_(\\d+)\\.html##http://m.woaidu.cc/book/$1/###",
      "coverUrl": "img@src",
      "intro": ".intro@text##文案：|简介：",
      "name": ".name@text"
    },
    "ruleSearch": {
      "author": "",
      "bookList": "#content_1>a",
      "bookUrl": "href##/book_(\\d+)\\.html##http://m.woaidu.cc/book/$1/###",
      "checkKeyWord": "蛊真人",
      "coverUrl": "img@src",
      "intro": ".intro@text##简介：|文案：",
      "name": ".name@text"
    },
    "ruleToc": {
      "chapterList": "ul[class=\"chapter\"].1@a",
      "chapterName": "text",
      "chapterUrl": "href",
      "nextTocUrl": ".listpage a.-1@href||text.下一页@href"
    },
    "searchUrl": "/search?kw={{key}}",
    "weight": 0
  },
  {
    "bookSourceComment": "//2024.2.21 ◎夜泽川◎",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "🍊落霞小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.luoxia123.com/",
    "bookUrlPattern": "https?://www.luoxia123.com/\\d+/",
    "customOrder": 212,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[\n{\"title\":\"分类\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},\n{\"title\":\"玄幻仙侠\",\"url\":\"/xuanhuan/<,index_{{page}}.html>\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},\n{\"title\":\"都市言情\",\"url\":\"/yanqing/<,index_{{page}}.html>\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},\n{\"title\":\"穿越架空\",\"url\":\"/chuanyue/<,index_{{page}}.html>\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},\n{\"title\":\"历史军事\",\"url\":\"/lishi/<,index_{{page}}.html>\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},\n{\"title\":\"科幻灵异\",\"url\":\"/lingyi/<,index_{{page}}.html>\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},\n{\"title\":\"网游竞技\",\"url\":\"/wangyou/<,index_{{page}}.html>\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},\n{\"title\":\"耽美同人\",\"url\":\"/danmei/<,index_{{page}}.html>\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}},\n{\"title\":\"文学经典\",\"url\":\"/wenxue/<,index_{{page}}.html>\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.4}}\n]",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": 1729789510548,
    "respondTime": 6046,
    "ruleBookInfo": {
      "author": "small@text",
      "coverUrl": "img@src",
      "intro": ".m-summary@text",
      "name": "h1@textNodes",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": "id.content@html##(?m)^(?:(　)*xxx).*",
      "nextContentUrl": "text.下一章@href||class.m-page@a.-1@href",
      "replaceRegex": ""
    },
    "ruleExplore": {
      "author": "td.1@text",
      "bookList": "tbody>tr",
      "bookUrl": " a.0@href",
      "kind": "td.2@text",
      "name": "td.0@text"
    },
    "ruleSearch": {
      "author": "td.2@text",
      "bookList": "tbody>tr",
      "bookUrl": " a.0@href",
      "kind": "td.-1@text",
      "lastChapter": "td.1@text",
      "name": "td.0@text"
    },
    "ruleToc": {
      "chapterList": "class.list-group@a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "/e/search/index.php,{\n \"body\": \"tbname=bookname&show=title,writer&tempid=1&keyboard={{key}}\",\n \"charset\": \"UTF-8\",\n \"method\": \"POST\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "//25.04.25 \n//Authorization头处理 ◎夜泽川◎\n//2025.5.7 修复发现，解密正文。 ◎夜泽川◎\n//2025.5.29 优化Authorization头过期检测 ◎夜泽川◎",
    "bookSourceGroup": "轻小说",
    "bookSourceName": "汉化社区",
    "bookSourceType": 0,
    "bookSourceUrl": "https://freenovel.sbs",
    "customOrder": 325,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\neval(String(source.loginUrl));\nvar result = [];\nvar push = (title, Url, size, parame) => {\n result.push({\n title: title,\n url: typeof Url === \"number\" ? `@js:function buildingUrL(url, pages, id, platform) {\n let body = {\n \"platform\": platform,\n \"tabIds\": id,\n \"fontNumber\": JSON.parse(source.getVariable()).wordNumber,\n \"page\": pages - 1,\n \"size\": 30\n };\n \n let headers = {\n \"Authorization\": mn(url, \"POST\", body),\n \"Content-Type\": \"application/json\"\n };\n \n let result = url + \",\" + JSON.stringify({\n \"body\": JSON.stringify(body),\n \"headers\": headers,\n \"method\": \"POST\"\n });\n \n return result;\n}\nbuildingUrL(source.key + \"/api/novels/getNovelsByPlatform\",page,${Url},\"${parame}\");` : Url,\n style: {\n layout_flexGrow: 1,\n layout_flexBasisPercent: size\n }\n });\n}\nif (source.getLoginHeader() && Login_check()) {\n\t push(\"我的收藏\", null, 1);\n\t var collecturl = source.key + \"/api/favoriteGroups/getAllFavoriteGroups\";\n\t var collect = JSON.parse(java.get(collecturl,{\n \"Authorization\": mn(collecturl, \"GET\")\n }).body()).forEach(item => {\n let url = `@js:if (page === 1) {\n let collect_url = source.key + \"/api/favorites/user/group/${item.id}\";\n collect_url += \",\" + JSON.stringify({\n \"headers\": {\n \"Authorization\": mn(collect_url, \"GET\")\n },\n \"method\": \"GET\"\n });}`;\n push(item.name, url, 0.45);\n});\n push(\"书库分类\", null, 1);\n var T = [\"novelPia\",\"upload\"];\n for (let i of T) {\n\t push(`>>> ${i} 库<<<`, null, 1);\n var T_url = source.key + \"/api/tag/all/\" + i;\n var T_header = {\n \"Authorization\": mn(T_url, \"GET\")\n };\n var tagArry = JSON.parse(java.get(T_url, T_header).body());\n if (i === \"upload\") tagArry.unshift({\"id\":0,\"name\":\"全部\"});\n tagArry.forEach((item, index) => {\n let tagNumber = JSON.parse(source.getVariable()).tagNumber;\n let range = tagNumber == \"全部\" ? tagArry.length : tagNumber;\n if (index <= range) {\n let size = item.id == 0 ? 1 : 0.25;\n push(item.name, item.id, size, i);\n }\n });\n }\n} else {\n push(\"未登录\", null, 1);\n}\nJSON.stringify(result);",
    "header": "<js>\nJSON.stringify({\n 'User-Agent': \"Mozilla/5.0 (Linux; Android 15; V2304A Build/AP3A.240905.015.A2; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/126.0.6478.71 Mobile Safari/537.36\",\n'Content-Type': \"application/json\"\n});\n</js>",
    "jsLib": "function wn(t) {\n return \"object\" !== typeof t || null === t ? t :\n Array.isArray(t) ? t.map(wn) : Object.keys(t)\n .sort().reduce(((e, n) => (e[n] = wn(t[n]),\n e)), {})\n}\n\nfunction mn(u, i, b) {\n\t const { java , source } = this\n\t let result;\n\t if (source.getLoginHeaderMap()) {\n const e = source.getLoginHeaderMap().get(\"Authorization\");\n const n = Date.now();\n const base64String = java.base64Encode(n + u + e);\n const r = java.md5Encode(base64String);\n\t const l = java.toURL(u).searchParams ? wn(Object.fromEntries(Array.from(java.toURL(u).searchParams).map(([k, v]) => [k, String(v)]))) : {};\n const s = java.toURL(u).pathname;\n const g = b ? wn(b) : {};\n const h = [i,s,JSON.stringify(l),JSON.stringify(g),n,r].join(\"|\");\n //java.log(h);\n let key = java.HMacHex(h, \"HmacSHA256\", e);\n result = String(`${e};${key};${n};${r}`);\n } else {\n \t java.toast('未登录');\n \t result = \"\";\n \t}\n return result;\n}\n\n//Authorization头过期校验\nfunction Login_check() {\n\t const { java, source, cookie } = this\n\t var login_checkUrl = source.key + \"/api/auth/isLogin\";\n\t if (java.connect(login_checkUrl + \",\" + JSON.stringify({\"headers\":{\n \"Authorization\": mn.call(this, login_checkUrl, \"GET\")\n }})).code() >= 400) {\n eval(String(source.loginUrl));\n Login();\n }\nreturn true;\n}\n\nfunction formatDate(dateStr) {\n const date = new Date(dateStr);\n const pad = n => String(n).padStart(2, '0');\n return `${date.getFullYear()}-${pad(date.getMonth()+1)}-${pad(date.getDate())} ` +\n `${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}`;\n}\n\nfunction decryptData(Data, userkey) {\n\t const { java } = this \n try {\n const fullData = java.base64DecodeToByteArray(Data);\n const ivBytes = fullData.slice(0, 16);\n const ContentBytes = fullData.slice(16);\n \n const keyTime = 60000 * Math.floor(Date.now() / 60000);\n const keyTimes = [keyTime, keyTime - 60000, keyTime - 60000*2];\n //java.log(keyTimes.toString());\n \n for (let ks of keyTimes) {\n try {\n let keyHex = java.digestHex(userkey + ks, \"SHA-256\");\n let keyBytes = java.hexDecodeToByteArray(keyHex);\n \n let cipher = java.createSymmetricCrypto(\n \"AES/CBC/PKCS7Padding\",\n keyBytes,\n ivBytes\n );\n \n let content = cipher.decryptStr(ContentBytes);\n //java.log(content);\n if (content) {\n \treturn String(content);\n \t}\n } catch(e) {\n java.log(`使用【${ks}】拼接密匙，解密失败\\n` + e);\n }\n }\n throw new Error(\"所有密钥失效\");\n } catch(e) {\n throw new Error(`解密过程出错: \\n${e}`);\n }\n}\n\nvar javaImport = new JavaImporter();\njavaImport.importPackage(\n Packages.okhttp3\n);\n//构建Put请求函数;\nfunction OkhttpPut(url, headers) {\n const { java } = this\n with(javaImport) {\n var body = RequestBody.create(null, \"\");\n \n var requestBuilder = new Request.Builder()\n .url(url)\n .put(body);\n\n if (headers) {\n for (let key in headers) {\n requestBuilder.addHeader(key, headers[key]);\n }\n }\n\n //java.log(\"PUT: \" + url + ',{\"headers\":' + JSON.stringify(headers) + \"}\");\n \n let client = new OkHttpClient();\n let response = client.newCall(requestBuilder.build()).execute();\n let ResponseBody = response.body().string();\n if (ResponseBody.includes('Invalid signature')) {\n throw new Error(\"用户Authorization头过期，请检验登录状态\");\n }\n return JSON.parse(ResponseBody);\n }\n}",
    "lastUpdateTime": 1748525098262,
    "loginCheckJs": "if (source.getLoginHeaderMap() && result.body().includes('Invalid signature')) {\n\t eval(String(source.loginUrl));\n\t\tLogin();\n\t\tjava.initUrl();\n\t\tresult = java.getStrResponse(null,null,false);\n}\nresult;",
    "loginUi": "[\n {\n \"name\": \"用户名\",\n \"type\": \"text\"\n }, \n {\n \"name\": \"密码\",\n \"type\": \"password\"\n }, \n {\n \"name\": \"邀请码\",\n \"type\": \"text\"\n }, \n {\n \"name\": \"登录\",\n \"type\": \"button\",\n \"action\": \"Login(true)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n }, \n {\n \"name\": \" 登出 \",\n \"type\": \"button\",\n \"action\": \"LoginOut()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n }, \n {\n \"name\": \" 打印用户信息 \",\n \"type\": \"button\",\n \"action\": \"PrintInfo()\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n }, \n {\n \"name\": \"发现标签展示最大数目（默认36）\",\n \"type\": \"text\"\n },\n {\n \"name\": \" 字数过滤 \",\n \"type\": \"button\",\n \"action\": \"\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n },\n {\n \"name\": \" 全部 \",\n \"type\": \"button\",\n \"action\": \"Word(0)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \" ＜30万字 \",\n \"type\": \"button\",\n \"action\": \"Word(1)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \" 30-50万字 \",\n \"type\": \"button\",\n \"action\": \"Word(2)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \" 50-100万字 \",\n \"type\": \"button\",\n \"action\": \"Word(3)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \" 100-200万字 \",\n \"type\": \"button\",\n \"action\": \"Word(4)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n },\n {\n \"name\": \" ＞200万字 \",\n \"type\": \"button\",\n \"action\": \"Word(5)\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n }\n]",
    "loginUrl": "if (source.getVariable() == \"\") {\n let original = {\n \"wordNumber\": \"0_1000000000\",\n \"tagNumber\": \"36\"\n };\n source.setVariable(JSON.stringify(original));\n java.toast('已初始化自定义数据');\n}\n\nfunction login() {\n let Str = source.getLoginInfoMap()?.get(\"发现标签展示最大数目（默认36）\") ?? \"\";\n let original = JSON.parse(source.getVariable());\n if (/^\\d+$/.test(Str) || Str == \"全部\") {\n original.tagNumber = Str;\n } else {\n original.tagNumber = \"36\";\n }\n source.setVariable(JSON.stringify(original));\n}\n\nfunction Login(c) {\n cookie.removeCookie(source.key);\n var name = source.getLoginInfoMap()?.get(\"用户名\") ?? \"\";\n var word = source.getLoginInfoMap()?.get(\"密码\") ?? \"\";\n var invitationCode = source.getLoginInfoMap()?.get(\"邀请码\") ?? \"\";\n let so = source.key;\n if (String(name) !== \"\" && String(word) !== \"\") {\n let url = so + \"/api/auth/login\";\n let body = {\n \"email\": name,\n \"password\": word,\n \"invitationCode\": invitationCode\n };\n let parame = JSON.stringify({\n \"body\": JSON.stringify(body),\n \"method\": \"POST\"\n });\n let Data = java.ajax(url + \",\" + parame);\n let UserData = {\n \"Authorization\": Data\n };\n if (/^\\w/.test(Data)) {\n let message = c ? `\\n用户${name}\\n登录成功` : \"\\n登录掉啦，已重新获取登录Authorization头\";\n java.toast(message);\n source.putLoginHeader(JSON.stringify(UserData));\n } else {\n java.toast(Data);\n }\n } else {\n java.toast(\"请填入必要数据后点击右上角√\");\n }\n}\n\nfunction LoginOut() {\n cookie.removeCookie(source.key);\n source.removeLoginHeader();\n java.toast('登出成功');\n}\n\nfunction Word(z) {\n let wordList = [\n [\"全部\", \"0_1000000000\"],\n [\"＜30万\", \"0_300000\"],\n [\"30-50万\", \"300000_500000\"],\n [\"50-100万\", \"500000_1000000\"],\n [\"100-200万\", \"1000000_2000000\"],\n [\"＞200万\", \"2000000_1000000000\"]\n ];\n let original = JSON.parse(source.getVariable());\n let mySelect = original.wordNumber;\n let text;\n if (mySelect == wordList[z][1]) {\n text = `\\n重复选择\\n当前【${wordList[z][0]}】`;\n } else {\n original.wordNumber = wordList[z][1];\n source.setVariable(JSON.stringify(original));\n text = `\\n已选择\\n【${wordList[z][0]}】`;\n }\n java.toast(text);\n}\n\nfunction PrintInfo() {\n\t if (source.getLoginHeaderMap()) {\n\t \tlet url = source.key;\n let info = \"\";\n info += \"\\n用户邀请码：\" + java.get(`${url}/api/user/getCode`,{\"Authorization\": mn(`${url}/api/user/getCode`,\"GET\")}).body();\n info += \"\\n用户当前积分：\" + java.get(`${url}/api/user/getPoint`,{\"Authorization\": mn(`${url}/api/user/getPoint`,\"GET\")}).body();\n java.log(info);\n java.longToast(info + \"\\n信息已打印至源日志\");\n } else { \n \tjava.toast(\"未登录\"); \n }\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "init": "@js:\nvar tags = JSON.parse(result).join(\",\");\nvar bookid = baseUrl.match(/\\/(\\d+).*?$/)[1];\nvar CollectCheck = java.get(`${source.key}/api/favorites/user/${bookid}/novelPia`, {\n \"Authorization\": mn(`${source.key}/api/favorites/user/${bookid}/novelPia`, \"GET\")\n}).body() == \"true\" ? \"已收藏,\" : \"\";\nvar collecturl = source.key + \"/api/favoriteGroups/getAllFavoriteGroups\";\nvar collect = JSON.parse(java.get(collecturl, {\n \"Authorization\": mn(collecturl, \"GET\")\n}).body());\n\nfunction createFavoriteGroup(name) {\n const url = `${source.key}/api/favoriteGroups/createFavoriteGroup?name=${name}`;\n const res = JSON.parse(java.post(url, \"\", { \"Authorization\": mn(url, \"POST\") }).body());\n return res.id;\n}\n\nconst customVar = book.getVariable(\"custom\");\nif (customVar.includes(\"@\")) {\n const [groupName, action] = customVar.split(\"@\");\n let Base_url, text;\n if (!customVar.startsWith(\"@\") && action == \"添加\") {\n const favoriteGroup = collect.find(obj => obj.name == groupName);\n const groupId = favoriteGroup ? favoriteGroup.id : createFavoriteGroup(groupName);\n Base_url = `${source.key}/api/novels/${bookid}/up/novelPia/${groupId}`;\n text = `\\n书籍已添加至【${groupName}】分组`;\n CollectCheck = \"已收藏,\";\n } else {\n Base_url = `${source.key}/api/novels/${bookid}/down/novelPia/0`;\n CollectCheck = \"\";\n text = \"书籍已从收藏移除\";\n }\n\n OkhttpPut(Base_url, { \"Authorization\": mn(Base_url, \"PUT\") });\n book.putCustomVariable(\"\");\n java.toast(text);\n} else if (customVar != \"\") {\n java.toast('格式错误');\n book.putCustomVariable(\"\");\n}\nresult = {\n \"tags\": CollectCheck + tags,\n \"info\": \"用户收藏分组：\\n\" + collect.map(item => item.name).join('\\n') + \"\\n⚠️格式应如下：\\n添加：分组名@添加\\n移除：@移除\\n不存在的分组会自动创建后添加\",\n \"tocurl\": source.key + \"/api/chapters/getChaptersByNovelId/\" + bookid\n};\nJSON.stringify(result);",
      "intro": "$.info",
      "kind": "$.tags",
      "tocUrl": "$.tocurl\n@js:var headers = mn(result,\"GET\");\nresult = result +\",\"+ JSON.stringify({\n \"headers\": {\"Authorization\":headers}\n})"
    },
    "ruleContent": {
      "content": "@js: \nvar base_ = java.hexDecodeToString(result);\n//java.log(base_);\nvar authorization = source.getLoginHeaderMap()?.get(\"Authorization\") ?? null;\nlet content;\nif (authorization && Login_check()) {\n let encryptText = JSON.parse(java.get(base_, {\n \"Authorization\": mn(base_, \"GET\")\n }).body()).content;\n content = decryptData(encryptText, authorization).replaceAll(/<img[^>]*src=\"([^\"]+)\"[^>]*>/g, '<img src=\"$1\">');\n} else {\n content = \"未登录\";\n}\ncontent;",
      "imageStyle": "DEFAULT",
      "replaceRegex": "##(?m)[0-9a-zA-Z+/]+={0,2}$|^封面折叠\\n"
    },
    "ruleExplore": {},
    "ruleSearch": {
      "bookList": "$.content[*]\n@js:\nif (/\\/favorites\\//.test(baseUrl)) {\n result = java.getElement('$.[*]');\n}\nresult;",
      "bookUrl": "{{source.key}}/api/tag/getTagsByNovelId/{{$.objectId||$.id}}\n@js:var headers = mn(result,\"GET\");\nresult = result +\",\"+ JSON.stringify({\n \"headers\": {\"Authorization\":headers}\n})",
      "intro": "原名：{{$.trueName}}",
      "kind": "{{$.novelType}}\n收藏{{$.up}}",
      "name": "$.objectName||$.title",
      "wordCount": "$.fontNumber"
    },
    "ruleToc": {
      "chapterList": "$.[*]",
      "chapterName": "第{{$.chapterNumber}}章 {{$.title}}",
      "chapterUrl": "{{source.key}}/api/chapters/{{$.id}}\n@js: `data:;base64,${java.base64Encode(result)},{\"type\":\"novel\"}`",
      "updateTime": "$.updatedAt\n@js:formatDate(result);"
    },
    "searchUrl": "@js:\neval(String(source.loginUrl));\nvar ul = `${source.key}/api/novels/searchByKeyWord?keyword=${key}`;\nvar headers = mn(ul,\"GET\");\nresult = ul +\",\"+ JSON.stringify({\n \"headers\": {\"Authorization\":headers}\n});",
    "weight": 0
  },
  {
    "bookSourceComment": "//2024.10.27 ◎夜泽川◎",
    "bookSourceGroup": "自制,网络",
    "bookSourceName": "乐文小说",
    "bookSourceType": 0,
    "bookSourceUrl": "http://www.lwshuku.info/",
    "customOrder": 592,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": 1730019186052,
    "respondTime": 18806,
    "ruleBookInfo": {
      "author": ".book_box@span.0@text",
      "coverUrl": ".cover img@src",
      "intro": ".book_about@dd@text##最新章节推荐地址.*",
      "kind": ".book_box@span!0:3:-1:-2@text##.*：",
      "lastChapter": ".book_box@a.-1@text",
      "name": ".name@text",
      "wordCount": ".book_box@span.3@text##.*："
    },
    "ruleContent": {
      "content": "#chaptercontent@textNodes##{{chapter.title}}\\s*\\(第\\d+\\/\\d+页\\)|.*（本章未完.*|阅读网址：.*",
      "nextContentUrl": "#pb_next@href||text.下一页@href",
      "title": ""
    },
    "ruleExplore": {},
    "ruleSearch": {
      "author": ".author@text",
      "bookList": ".bookbox",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "kind": ".cat@text##分类：",
      "lastChapter": ".update a@text",
      "name": ".bookname@text"
    },
    "ruleToc": {
      "chapterList": ".book_last.-1@a",
      "chapterName": "text##^\\d+、",
      "chapterUrl": "href",
      "nextTocUrl": "option@value||text下一页@href"
    },
    "searchUrl": "/plus/search.php?s=00000&q={{key}}",
    "weight": 0
  }
]